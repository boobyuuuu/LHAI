{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Material for MkDocs","text":"<p>Welcome to Material for MkDocs.</p>"},{"location":"Content/structure/","title":"Structure","text":"<p>\u624b\u518c\u7ed3\u6784\uff1a</p> <p>\u9996\u9875 - \u76ee\u5f55 + \u7ed3\u679c\u76f4\u89c2\u8868\u793a\uff08\u7ed3\u679c\u7bc7\uff09</p> <p>\u76ee\u5f55\uff1a</p> <ul> <li> <p>\u6570\u636e\u7bc7</p> </li> <li> <p>\u6280\u672f\u7bc7</p> </li> <li> <p>\u9a8c\u8bc1\u7bc7</p> </li> <li> <p>\u4ee3\u7801\u7ed3\u6784\u8be6\u89e3</p> </li> <li> <p>\u5176\u4ed6\u6280\u672f\u6587\u6863\uff08GIT,MARKOWN,MKDOCS,SERVER\uff09</p> </li> </ul>"},{"location":"Content/codes/","title":"Code Section","text":"<p>This section will explain the structure of our code, where to place training data, test models, and how to begin training and inference.</p> <p>The overall structure of the code is as follows:</p> <pre><code>\u251c\u2500\u2500 LICENSE            &lt;- Open-source license if one is chosen\n\u251c\u2500\u2500 Makefile           &lt;- Makefile with convenience commands like `make data` or `make train`\n\u251c\u2500\u2500 README.md          &lt;- The top-level README for developers using this project.\n\u251c\u2500\u2500 data               &lt;- Different types of data. (Recommended to upload in npy format)\n\u2502   \u251c\u2500\u2500 FERMI\n\u2502   \u251c\u2500\u2500 POISSON\n\u2502   \u251c\u2500\u2500 SIMU\n\u2502   \u2514\u2500\u2500 RAW\n\u2502\n\u251c\u2500\u2500 saves              &lt;- Figure/Loss saves, Trained and Serialized models, model predictions, etc.\n\u2502   \u251c\u2500\u2500 FIGURE         &lt;- Figure saves during training.\n\u2502   \u2502\u2500\u2500 PRE_FIG        &lt;- Figure saves during prediction.\n\u2502   \u251c\u2500\u2500 LOSS           &lt;- LOSS data (.npy) and LOSS figure (.png) saves during training.\n\u2502   \u2514\u2500\u2500 MODEL          &lt;- Trained and Serialized models.\n\u2502\n\u251c\u2500\u2500 docs               &lt;- Default mkdocs project; see www.mkdocs.org for details\n\u2502\n\u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks. Naming convention includes a number (for ordering),\n\u2502                         creator's initials, and a short `-` delimited description, e.g.\n\u2502                         `1.0-jqp-initial-data-exploration`.\n\u2502\n\u251c\u2500\u2500 pyproject.toml     &lt;- Project configuration file with package metadata for LHAI and configuration\n\u2502                         for tools like black\n\u2502\n\u251c\u2500\u2500 references         &lt;- Data dictionaries, manuals, and other explanatory materials.\n\u2502\n\u251c\u2500\u2500 reports            &lt;- Generated analysis as HTML, PDF, LaTeX, etc.\n\u2502   \u2514\u2500\u2500 figures        &lt;- Generated graphics and figures for reporting\n\u2502\n\u251c\u2500\u2500 requirements.txt   &lt;- The requirements file for reproducing the analysis environment, e.g.\n\u2502                         generated with `pip freeze &gt; requirements.txt`\n\u2502\n\u251c\u2500\u2500 setup.cfg          &lt;- Configuration file for flake8\n\u2502\n\u2514\u2500\u2500 LHAI               &lt;- Source code for use in this project.\n    \u2502\n    \u251c\u2500\u2500 __init__.py             &lt;- Makes LHAI a Python module\n    \u2502\n    \u251c\u2500\u2500 config.py               &lt;- Stores useful variables and configuration\n    \u2502\n    \u251c\u2500\u2500 dataset.py              &lt;- Scripts to download or generate data\n    \u2502\n    \u251c\u2500\u2500 features.py             &lt;- Code to create features for modeling\n    \u2502\n    \u251c\u2500\u2500 modeling                &lt;- Model training and inference code\n    \u2502   \u251c\u2500\u2500 __init__.py \n    \u2502   \u251c\u2500\u2500 predict.py          &lt;- Code for model inference with trained models          \n    \u2502   \u2514\u2500\u2500 train.py            &lt;- Code to train models\n    \u2502\n    \u251c\u2500\u2500 models                  &lt;- Neural network model code.\n    \u2502   \u2514\u2500\u2500 CNN_EXP_0_1.py      &lt;- Modelname_Experimentnumber.py\n    \u2502\n    \u2502\u2500\u2500 function                &lt;- Functions used in training and prediction processes\n    \u2502  \u251c\u2500\u2500 Dataset.py           &lt;- Function for loading datasets\n    \u2502  \u251c\u2500\u2500 Log.py               &lt;- Function for logging\n    \u2502  \u2514\u2500\u2500 Loss.py              &lt;- Function for generating loss\n    \u2502\n    \u2514\u2500\u2500 plots.py                &lt;- Code to create visualizations\n</code></pre> <p>We will mainly cover the following:</p> <ol> <li>The <code>data</code> folder: Stores the training data.</li> <li>The <code>docs</code> folder: Contains the LHAI user manual.</li> <li>The <code>LHAI</code> folder: Contains the project code.</li> <li>The <code>saves</code> folder: Contains the trained/inference models and results.</li> </ol>"},{"location":"Content/codes/config/","title":"LHAI \u51fd\u6570\u6a21\u5757 \u2014 \u914d\u7f6e\u53c2\u6570 Config \u90e8\u5206","text":"<p>\u672c\u6a21\u5757\u7edf\u4e00\u5b9a\u4e49\u5e76\u7ba1\u7406\u8bad\u7ec3\uff08Train\uff09\u3001\u9884\u6d4b\uff08Predict\uff09\u4e0e\u8bc4\u4f30\uff08Eval\uff09\u6240\u9700\u7684\u5168\u90e8\u53c2\u6570\uff0c\u4ee5\u4fbf\u4e8e\u7ed3\u6784\u5316\u8c03\u7528\u3001\u5feb\u901f\u8c03\u6574\u4e0e\u53ef\u7ef4\u62a4\u6027\u3002</p>"},{"location":"Content/codes/config/#_1","title":"\u914d\u7f6e\u4f53\u7cfb\u6838\u5fc3\u7ed3\u6784","text":"<ul> <li>\u57fa\u4e8e <code>@dataclass</code> \u6784\u5efa\uff1a\u6bcf\u4e00\u7c7b\u914d\u7f6e\uff08\u8bad\u7ec3\u3001\u9884\u6d4b\u3001\u8bc4\u4f30\uff09\u72ec\u7acb\u5c01\u88c5\u4e3a\u4e00\u4e2a\u6570\u636e\u7c7b\uff0c\u53c2\u6570\u5b9a\u4e49\u7b80\u6d01\u3001\u6e05\u6670\u3002</li> <li>\u8def\u5f84\u7edf\u4e00\u7531 <code>Path</code> \u7c7b\u578b\u7ba1\u7406\uff0c\u4fbf\u4e8e\u8de8\u5e73\u53f0\u517c\u5bb9\u4e0e\u8def\u5f84\u62fc\u63a5\u5b89\u5168\u6027\u3002</li> <li>\u901a\u8fc7 <code>dotenv</code> + <code>Path(__file__)</code> \u5b9e\u73b0\u5bf9\u9879\u76ee\u8def\u5f84\u7684\u81ea\u52a8\u89e3\u6790\uff0c\u65e0\u9700\u624b\u52a8\u914d\u7f6e\u6839\u76ee\u5f55\u3002</li> </ul>"},{"location":"Content/codes/config/#_2","title":"\u6587\u4ef6\u8def\u5f84\u81ea\u52a8\u5904\u7406","text":"<pre><code>ADDR_CONFIG = Path(__file__).resolve().parents[0]\nADDR_ROOT = Path(__file__).resolve().parents[2]\n</code></pre> <ul> <li><code>ADDR_CONFIG</code>: \u5f53\u524d\u914d\u7f6e\u6587\u4ef6\u6240\u5728\u7684 <code>config</code> \u76ee\u5f55\u8def\u5f84\u3002</li> <li><code>ADDR_ROOT</code>: \u9879\u76ee\u7684\u6839\u76ee\u5f55\uff0c\u7528\u4e8e\u6784\u9020\u76f8\u5bf9\u8def\u5f84\uff0c\u907f\u514d\u8def\u5f84\u786c\u7f16\u7801\u3002</li> </ul>"},{"location":"Content/codes/config/#1-trainconfig","title":"1. \u8bad\u7ec3\u914d\u7f6e\uff1a<code>TrainConfig</code>","text":"<p>\u7528\u4e8e\u63a7\u5236\u6a21\u578b\u8bad\u7ec3\u9636\u6bb5\u7684\u6240\u6709\u6838\u5fc3\u8d85\u53c2\u6570\u4e0e\u8def\u5f84\u8bbe\u7f6e\u3002</p> <pre><code>@dataclass\nclass TrainConfig:\n    exp_name: str = \"EXP01\"  # \u5b9e\u9a8c\u540d\u79f0\uff0c\u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u4e0e\u6a21\u578b\u547d\u540d\n    model_name: str = \"CNN\"  # \u6a21\u578b\u540d\u79f0\uff0c\u63a7\u5236\u6a21\u578b\u6784\u5efa\u4e0e\u4fdd\u5b58\u6587\u4ef6\u524d\u7f00\n    model_dir: Path = ADDR_ROOT / \"codes\" / \"models\"  # \u6a21\u578b\u5b9a\u4e49\u4ee3\u7801\u76ee\u5f55\n    data_dir: Path = ADDR_ROOT / \"data\" / \"Train\"     # \u8bad\u7ec3\u6570\u636e\u5b58\u653e\u76ee\u5f55\n    data_name: str = \"xingwei_10000_64_train_v1_processed.npy\"  # \u6570\u636e\u6587\u4ef6\u540d\n    seed: int = 0             # \u968f\u673a\u79cd\u5b50\uff0c\u786e\u4fdd\u53ef\u590d\u73b0\u6027\n    frac: float = 0.98        # \u8bad\u7ec3\u96c6\u5212\u5206\u6bd4\u4f8b\uff08\u5269\u4f59\u90e8\u5206\u7528\u4e8e\u6d4b\u8bd5\u96c6\uff09\n    epochs: int = 10          # \u8bad\u7ec3\u8f6e\u6570\n    batch_size: int = 32      # \u6279\u6b21\u5927\u5c0f\n    lr_max: float = 5e-4      # \u521d\u59cb\u6700\u5927\u5b66\u4e60\u7387\n    lr_min: float = 5e-6      # \u6700\u5c0f\u5b66\u4e60\u7387\uff08\u7528\u4e8e\u8c03\u5ea6\uff09\n    datarange: float = 1.0    # \u6570\u636e\u5f52\u4e00\u5316\u8303\u56f4\uff081.0\u8868\u793a[0,1]\uff0c2.0\u8868\u793a[-1,1]\uff09\n    logpath: Path = ADDR_ROOT / \"logs\" / \"train_cnn.log\"  # \u65e5\u5fd7\u4fdd\u5b58\u8def\u5f84\n</code></pre>"},{"location":"Content/codes/config/#2-predictconfig","title":"2. \u9884\u6d4b\u914d\u7f6e\uff1a<code>PredictConfig</code>","text":"<p>\u7528\u4e8e\u6a21\u578b\u63a8\u7406\u6216\u90e8\u7f72\u65f6\u7684\u914d\u7f6e\u53c2\u6570\u3002</p> <pre><code>@dataclass\nclass PredictConfig:\n    model_name: str = \"CNN\"  # \u6a21\u578b\u540d\u79f0\n    model_path: Path = ADDR_ROOT / \"saves\" / \"MODEL\"  # \u6a21\u578b\u6743\u91cd\u5b58\u653e\u8def\u5f84\n    model_file: str = \"CNN_EXP_0_1_400epo_32bth_64lat_poissonsrc+bkg_highresorig_poisson_src_bkg.pkl.npy.pth\"\n    data_dir: Path = ADDR_ROOT / \"data\" / \"POISSON\"  # \u5f85\u9884\u6d4b\u6570\u636e\u76ee\u5f55\n    data_name: str = \"poisson_src_bkg.pkl.npy\"  # \u5f85\u9884\u6d4b\u6570\u636e\u6587\u4ef6\n    seed: int = 0\n    pred_type: str = \"poissonsrc+bkg_highresorig\"  # \u7528\u4e8e\u6807\u8bb0\u63a8\u7406\u7ed3\u679c\u6765\u6e90\n    frac: float = 0.98\n    batch_size: int = 32\n    latent_dim: int = 64  # \u82e5\u4f7f\u7528 VAE/\u6269\u6563\u6a21\u578b\u7b49\uff0c\u9700\u6307\u5b9a\u6f5c\u5728\u5411\u91cf\u7ef4\u5ea6\n</code></pre> <p>\u8be5\u7c7b\u8fd8\u63d0\u4f9b\u4e24\u4e2a\u4fbf\u6377\u5c5e\u6027\u65b9\u6cd5\uff1a</p> <pre><code>@property\ndef data_path(self) -&gt; Path:\n    return self.data_dir / self.data_name\n\n@property\ndef full_model_path(self) -&gt; Path:\n    return self.model_path / self.model_file\n</code></pre> <ul> <li>\u81ea\u52a8\u62fc\u63a5\u6a21\u578b\u8def\u5f84\u4e0e\u6570\u636e\u8def\u5f84\uff0c\u8c03\u7528\u66f4\u7b80\u6d01\uff0c\u907f\u514d\u5197\u4f59\u4ee3\u7801\u3002</li> </ul>"},{"location":"Content/codes/config/#3-evalconfig","title":"3. \u8bc4\u4f30\u914d\u7f6e\uff1a<code>EvalConfig</code>","text":"<p>\u7528\u4e8e\u6a21\u578b\u8bc4\u4f30\u6d41\u7a0b\uff0c\u5982\u52a0\u8f7d\u6307\u5b9a\u6a21\u578b\u6743\u91cd\u3001\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u5404\u7c7b\u6307\u6807\u3002</p> <pre><code>@dataclass\nclass EvalConfig:\n    exp_name: str = \"EXP01\"\n    model_name: str = \"CNN\"\n    model_dir: Path = ADDR_ROOT / \"codes\" / \"models\"  # \u6a21\u578b\u5b9a\u4e49\u76ee\u5f55\n    data_dir: Path = ADDR_ROOT / \"data\" / \"Train\"     # \u6d4b\u8bd5\u6570\u636e\u76ee\u5f55\n    data_name: str = \"xingwei_10000_64_train_v1.npy\"  # \u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u540d\n    model_weight_dir: Path = ADDR_ROOT / \"saves\" / \"MODEL\"  # \u6743\u91cd\u76ee\u5f55\n    model_weight_name: str = \"CNN_EXP01_10epo_32bth_xingwei.pth\"  # \u6307\u5b9a\u6a21\u578b\u6587\u4ef6\n    seed: int = 0\n    frac: float = 0.98\n    batch_size: int = 32\n    epochs: int = 400\n    lr_max: float = 5e-4\n    lr_min: float = 5e-6\n    datarange: float = 1.0\n</code></pre>"},{"location":"Content/codes/config/#_3","title":"\u65e5\u5fd7\u6253\u5370\u652f\u6301","text":"<p>\u6a21\u5757\u672b\u5c3e\u63d0\u4f9b\u547d\u4ee4\u884c\u8fd0\u884c\u652f\u6301\uff1a</p> <pre><code>if __name__ == \"__main__\":\n</code></pre> <ul> <li>\u82e5\u76f4\u63a5\u6267\u884c <code>config_cnn.py</code>\uff0c\u5c06\u4f7f\u7528 <code>loguru</code> \u914d\u5408 <code>tqdm</code> \u5b9e\u65f6\u683c\u5f0f\u5316\u6253\u5370\u5168\u90e8\u53c2\u6570\u3002</li> <li>\u6240\u6709\u5b57\u6bb5\u5747\u901a\u8fc7\u53cd\u5c04\u65b9\u5f0f\u5faa\u73af\u6253\u5370\uff0c\u652f\u6301\u6269\u5c55\u3002</li> </ul> <p>\u8f93\u51fa\u793a\u4f8b\uff1a</p> <pre><code>--- Train Config ---\nexp_name = EXP01\nmodel_name = CNN\n...\nlogpath = /.../logs/train_cnn.log\n</code></pre>"},{"location":"Content/codes/data/","title":"LHAI Project Code: <code>data</code> Folder","text":"<p>The <code>data</code> folder is designated for storing datasets required for training, inference, and evaluation. It is organized by data types to ensure easy access and effective version management.  </p>"},{"location":"Content/codes/data/#folder-structure","title":"Folder Structure","text":"<pre><code>\u251c\u2500\u2500 data               &lt;- Different types of datasets (recommended in `.npy` format)\n    \u251c\u2500\u2500 FERMI          &lt;- Datasets related to Fermi observations or simulations\n    \u251c\u2500\u2500 POISSON        &lt;- Poisson-distributed datasets for statistical modeling\n    \u251c\u2500\u2500 SIMU           &lt;- Synthetic datasets for simulation purposes\n    \u2514\u2500\u2500 RAW            &lt;- Unprocessed raw data obtained from experiments or external sources\n</code></pre>"},{"location":"Content/codes/data/#folder-details","title":"Folder Details","text":""},{"location":"Content/codes/data/#fermi","title":"FERMI","text":"<ul> <li>Description: Contains observational data or related simulation datasets from the Fermi Gamma-ray Space Telescope.  </li> <li>Usage: For preprocessing workflows or training models in gamma-ray studies.  </li> <li>Examples:  </li> <li><code>FERMI_2024_observations.npy</code>: Preprocessed data from the 2024 observation period.  </li> <li><code>FERMI_training_split.npy</code>: Subset of data prepared for model input during training.  </li> </ul>"},{"location":"Content/codes/data/#poisson","title":"POISSON","text":"<ul> <li>Description: Stores datasets based on Poisson distributions, commonly used for event simulations or error modeling.  </li> <li>Usage: Statistical modeling, event rate prediction, or uncertainty quantification.  </li> <li>Examples:  </li> <li><code>Poisson_noise_samples.npy</code>: Synthetic samples with Poisson noise.  </li> <li><code>Poisson_event_counts.npy</code>: Event count distribution for analysis.  </li> </ul>"},{"location":"Content/codes/data/#simu","title":"SIMU","text":"<ul> <li>Description: Contains synthetic datasets created for specific scenarios or experimental simulations.  </li> <li>Usage: Model validation, sensitivity analysis, or testing new algorithms.  </li> <li>Examples:  </li> <li><code>Simu_100k_events.npy</code>: A simulated dataset with 100,000 event records.  </li> <li><code>Simu_input_parameters.json</code>: Configuration file used to generate synthetic data.  </li> </ul>"},{"location":"Content/codes/data/#raw","title":"RAW","text":"<ul> <li>Description: This folder contains unprocessed raw datasets directly obtained from instruments or collaborators.  </li> <li>Usage: Starting point for preprocessing workflows or for manual analysis.  </li> <li>Examples:  </li> <li><code>Raw_experiment_2024.dat</code>: Data dump from the latest experiment.  </li> <li><code>Raw_sensor_readings.bin</code>: Binary sensor readings requiring decoding.  </li> </ul>"},{"location":"Content/codes/data/#file-format-requirements-for-training-and-inference","title":"File Format Requirements for Training and Inference","text":"<p>This section is crucial and the file storage guidelines are under development.</p> <p>by Zihang Liu</p>"},{"location":"Content/codes/docs/","title":"LHAI Project Code: <code>docs</code> Folder","text":"<p>The 'docs' folder is used to store the user manual for LHAI, which is written in the 'mkdocs' format.</p>"},{"location":"Content/codes/docs/#0-folder-structure","title":"0 Folder Structure","text":"<pre><code>\u251c\u2500\u2500 README.md                  &lt;- Top-level README for developers using this project\n\u251c\u2500\u2500 mkdocs.yml                 &lt;- Main configuration file for MkDocs\n\u251c\u2500\u2500 requirements.txt           &lt;- Python dependencies for the MkDocs project\n\u251c\u2500\u2500 Content                    &lt;- Folder containing the documentation content\n\u2502   \u251c\u2500\u2500 data                   &lt;- Section for data-related documentation\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Data Section\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 network                &lt;- Section for network-related documentation\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Network Section\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 eval                   &lt;- Section for evaluation-related documentation\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Eval Section\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 codes                  &lt;- Section for code-related documentation\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Codes Section\n\u2502   \u2502   \u251c\u2500\u2500 data.md            &lt;- Documentation for data usage in codes\n\u2502   \u2502   \u251c\u2500\u2500 docs.md            &lt;- Documentation for code structure and details\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 others                 &lt;- Section for miscellaneous content\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Others Section\n\u2502   \u2502   \u251c\u2500\u2500 1.md               &lt;- Documentation guidance or additional content\n\u2502\n\u251c\u2500\u2500 docs                       &lt;- Default MkDocs output folder for site generation\n\u2502\n\u251c\u2500\u2500 css                        &lt;- Custom CSS for styling the MkDocs project\n\u2502   \u251c\u2500\u2500 base.css               &lt;- Base styling for the entire site\n\u2502   \u251c\u2500\u2500 theme-overrides.css    &lt;- Customizations to override the default MkDocs theme\n\u2502   \u251c\u2500\u2500 typography.css         &lt;- Specific typography adjustments for better readability\n\u2502   \u2514\u2500\u2500 responsive.css         &lt;- Styles for ensuring responsive design across devices\n\u2502\n\u2514\u2500\u2500 assets                     &lt;- Static assets like images or fonts\n    \u251c\u2500\u2500 images                 &lt;- Images used throughout the documentation\n    \u2502   \u251c\u2500\u2500 logo.png           &lt;- Site logo\n    \u2502   \u251c\u2500\u2500 favicon.ico        &lt;- Favicon for the site\n    \u2502\n    \u251c\u2500\u2500 fonts                  &lt;- Custom fonts for the site, if needed\n</code></pre>"},{"location":"Content/codes/docs/#1-how-does-this-manual-work","title":"1 How Does This Manual Work","text":"<p>This user manual is based on MkDocs for webpage construction, utilizes Git for version control and collaborative management, and is published online through GitHub Pages.</p>"},{"location":"Content/codes/docs/#mkdocs","title":"MkDocs","text":"<p>MkDocs is a documentation tool designed for quickly generating static websites. It supports writing in simple Markdown syntax and produces clean, structured HTML websites.</p> <ul> <li>Installation and Usage:</li> <li>Install MkDocs: <pre><code>pip install mkdocs\n</code></pre></li> <li>Create a project: <pre><code>mkdocs new my-project\ncd my-project\n</code></pre></li> <li> <p>Run a local preview: <pre><code>mkdocs serve\n</code></pre>      Visit <code>http://127.0.0.1:8000</code> to preview the documentation.</p> </li> <li> <p>Build a static website: <pre><code>mkdocs build\n</code></pre>      The generated files will be stored in the <code>site</code> directory.</p> </li> <li> <p>Themes and Plugins:   Use the default MkDocs theme (<code>mkdocs</code>) or extended themes like <code>mkdocs-material</code>. Additional functionality can be added through plugins configured in the <code>mkdocs.yml</code> file.</p> </li> </ul>"},{"location":"Content/codes/docs/#git","title":"Git","text":"<p>Git is a distributed version control system for managing documentation and code versions while enabling team collaboration.</p> <ul> <li>Initialization and Cloning:</li> <li>Initialize a project: <pre><code>git init\n</code></pre></li> <li> <p>Clone a remote repository: <pre><code>git clone &lt;repository-url&gt;\n</code></pre></p> </li> <li> <p>Common Commands:</p> </li> <li>Commit changes: <pre><code>git add .\ngit commit -m \"Update documentation\"\n</code></pre></li> <li> <p>Push to the remote repository: <pre><code>git push origin main\n</code></pre></p> </li> <li> <p>Branch Management: Use branches to avoid conflicts during multi-user collaboration: <pre><code>git checkout -b new-feature\n</code></pre></p> </li> </ul>"},{"location":"Content/codes/docs/#github-pages","title":"GitHub Pages","text":"<p>GitHub Pages is a hosting service for static websites, allowing you to deploy MkDocs-generated sites directly from GitHub repositories.</p> <ul> <li>Deployment Steps:</li> <li>Configure the deployment branch in <code>mkdocs.yml</code>: <pre><code>site_name: My Documentation\nsite_dir: site\n</code></pre></li> <li>Deploy using <code>gh-deploy</code>: <pre><code>mkdocs gh-deploy\n</code></pre></li> <li> <p>Once deployed, the documentation will be available at <code>https://&lt;username&gt;.github.io/&lt;repository&gt;</code>.</p> </li> <li> <p>Automated Deployment:   Use GitHub Actions to automate the build and deployment process. Example workflow:   <pre><code>name: Deploy MkDocs\non:\n  push:\n    branches:\n      - main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up Python\n        uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - name: Install dependencies\n        run: pip install mkdocs mkdocs-material\n      - name: Build and deploy\n        run: mkdocs gh-deploy --force\n</code></pre></p> </li> </ul>"},{"location":"Content/codes/docs/#3-structure-of-this-manual","title":"3 Structure of This Manual","text":"<p>Homepage: Contains a directory and visual representation of results (Results Section).</p> <p>Contents: - Data Section - Technical Section - Validation Section - Code Structure Explanation - Other Technical Documents (Git, Markdown, MkDocs, Server)</p>"},{"location":"Content/codes/docs/#4-becoming-a-collaborator","title":"4 Becoming a Collaborator","text":""},{"location":"Content/codes/docs/#prerequisites","title":"Prerequisites:","text":"<ul> <li>Familiarity with Git, a VPN, and Python 3.10 or above.</li> </ul>"},{"location":"Content/codes/docs/#steps","title":"Steps:","text":"<ol> <li>Create a Local Repository and Link It to GitHub:</li> <li>Create an empty folder for storing local documentation files.</li> <li>Clone the GitHub repository: <pre><code>git clone https://github.com/boobyuuuu/LHAI.git\n</code></pre></li> </ol> <p>Note: Errors may occur due to initial environment settings. Address these errors as they arise.</p> <ol> <li>Set Up MkDocs Environment:</li> <li>Install the necessary dependencies: <pre><code>pip install mkdocs\npip install mkdocs-material\npip install pymdown-extensions\n</code></pre></li> <li> <p>Run the local preview: <pre><code>mkdocs serve\n</code></pre></p> </li> <li> <p>Edit the Manual:</p> </li> <li>Modify as needed.</li> <li>The <code>mkdocs.yml</code> file contains all configuration and structure information.</li> <li> <p>Refer to the MkDocs tutorial: MkDocs-Like-Code</p> </li> <li> <p>Upload Changes to GitHub and GitHub Pages:</p> </li> <li>Push to GitHub: <pre><code>git add .\ngit commit -m \"English log for modifications\"\ngit push\n</code></pre></li> <li> <p>Deploy to GitHub Pages: <pre><code>mkdocs gh-deploy\n</code></pre></p> </li> <li> <p>Daily Workflow:</p> </li> <li>Pull the latest version from GitHub: <pre><code>git pull\n</code></pre></li> <li>Make local changes and push them back to GitHub.</li> <li>Deploy updates to GitHub Pages.</li> </ol> <p>Follow this workflow strictly.</p>"},{"location":"Content/codes/docs/#5","title":"5 \u672a\u6765\u7684\u7814\u7a76\u76ee\u6807\u4e0e\u95ee\u9898","text":""},{"location":"Content/codes/docs/#ihep","title":"\u5728ihep\u8001\u5e08\u5b8c\u6210\u7a0b\u5e8f\u5f00\u53d1\u4e4b\u524d","text":"<p>a.\u6a21\u62dfintensity map\uff08\u5185\u7980\uff08intrinsic\uff09\u56fe\u50cf\uff09\u800c\u975e\u7528\u4e00\u4e2a\u66f4\u5c0f\u7684PSF\u5377\u79ef\u7684\u56fe\u50cf</p> <p>b.\u66f4\u591a\u7c7b\u578b\u7684\u6e90 \uff08\u751f\u6210\u66f4\u4e0d\u89c4\u5219\u7684\u6e90\uff09</p> <p>c.gamma\u80cc\u666f\u4ecd\u7136\u4f7f\u7528Fermi LAT diffuse gamma\uff1b \u5b87\u5b99\u7ebf\u80cc\u666f\u7684\u5206\u5e03\u8c03\u7814\u3002</p> <p>[!TIP]</p> <p>\u80cc\u666f\u5206\u4e3a\u5b87\u5b99\u7ebf\u80cc\u666f\uff08\u88ab\u9519\u8bef\u5206\u7c7b\u4e3agamma\u5c04\u7ebf\u7684\u5b87\u5b99\u7ebf\uff09\uff0c\u548c\u4f3d\u9a6c\u5c04\u7ebf\u80cc\u666f\uff08\u5f25\u6563\u7684\u8f90\u5c04\uff09\u3002\u76ee\u524d\u6211\u4eec\u4ec5\u6dfb\u52a0\u4e86\u5f25\u6563\u80cc\u666f\uff0c\u4f7f\u7528Fermi LAT\u53d1\u5e03\u7684\u4f3d\u9a6c\u5c04\u7ebf\u5f25\u6563\u80cc\u666f\u6a21\u578b\u3002\u540e\u7eed\u9700\u8981\u660e\u786e\u5b87\u5b99\u7ebf\u80cc\u666f\u7684\u5206\u5e03\u89c4\u5f8b\u5e76\u6dfb\u52a0\u5230\u8bad\u7ec3\u6570\u636e\u4e2d\u3002\uff08\u5b87\u5b99\u7ebf\u80cc\u666f\u901a\u5e38\u7528\u591a\u4e2a\u80cc\u6e90\u7a97\u53e3\u4f5c\u5e73\u5747\u5f97\u5230\uff0c\u56e0\u6b64\u53ef\u80fd\u4e0d\u670d\u4ecePoisson\u5206\u5e03\u3002\uff09</p> <p>d.\u4e0d\u540c\u673a\u5668\u5b66\u4e60\u6a21\u578b, \u5c1d\u8bd5\u8bba\u6587\u4e2d\u7684\u6a21\u578b\u3001\u524d\u6cbf\u7684\u8d85\u5206\u8fa8\u6280\u672f \uff08cly\uff09</p> <p>e.\u4e86\u89e3LHAASO\u7684\u9879\u76ee\u4ee5\u53ca\u6570\u636e\u5904\u7406\u76f8\u5173\u5185\u5bb9\uff08hxy\uff09</p> <p>f.\u5b8c\u5584\u4ee3\u7801\u6ce8\u91ca\uff0c\u9002\u5f53\u91cd\u5199\uff0c\u7528\u6237\u624b\u518c\u64b0\u5199 \uff08gxw, lzh\uff09</p> <p>g.\u6539\u8fdb\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\u7b49 \uff08\u79cd\u7c7b\u3001\u6bd4\u4f8b\u2026\u2026\uff09</p>"},{"location":"Content/codes/docs/#_1","title":"\u5728\u62ff\u5230\u7a0b\u5e8f\u4e4b\u540e","text":"<p>a.\u8db3\u591f\u591a\u7684\u6837\u672c\u751f\u6210\uff0c\u524d\u671f\u9636\u6bb5\u6027\u6210\u679c</p> <p>b.\u5bf9\u4e0d\u540cPSF\u8fdb\u884c\u6cdb\u5316\uff08\u6a21\u6001\u878d\u5408\uff1f \uff09</p> <p>by Zihang Liu</p>"},{"location":"Content/codes/evaluation/","title":"\u4ecegit clone\u5f00\u59cb\u6a21\u578b\u8bc4\u4f30","text":"<p><code>evaluation.py</code>\u5b58\u653e\u5730\u5740:</p> <pre><code>LHAI/LHAI/evaluation.py\n</code></pre> <p>\u5728\u4e86\u89e3\u4e86LHAI\u6e90\u4ee3\u7801\u7ed3\u6784\uff1a<code>data</code>,<code>docs</code>,<code>LHAI</code>,<code>saves</code> \u6587\u4ef6\u5939\u7684\u57fa\u672c\u4f5c\u7528\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u63a8\u7406\u4e86\u3002</p> <p>\u8fd9\u4e00\u9875\u5c06\u4f1a\u4ece <code>git clone</code> \u5f00\u59cb\uff0c\u53d9\u8ff0\u6211\u4eec\u8be5\u51c6\u5907\u54ea\u4e9b\u4e1c\u897f\uff0c\u5982\u4f55\u5f00\u59cb\u8fdb\u884c\u63a8\u7406\u3002</p> <ol> <li> <p>\u7b2c\u4e00\u6b65\uff1agit clone</p> <pre><code>git clone --branch Code https://github.com/boobyuuuu/LHAI.git\n</code></pre> <p>\u8fd9\u4f1a\u4e0b\u8f7dCode branch\u4e0b\u7684\u6240\u6709\u4ee3\u7801\u4e8eLHAI\u6587\u4ef6\u5939\u5185\u3002\u6253\u5f00\u6587\u4ef6\u5939\uff1a</p> <pre><code>cd LHAI\n</code></pre> </li> <li> <p>\u68c0\u67e5LHAI\u6587\u4ef6\u5939\u7684\u9879\u76eestructure\uff0c\u662f\u5426\u5305\u542b\u5b8c\u6574\uff1a</p> <pre><code>\u251c\u2500\u2500 LICENSE            &lt;- Open-source license if one is chosen\n\u251c\u2500\u2500 Makefile           &lt;- Makefile with convenience commands like `make data` or `make train`\n\u251c\u2500\u2500 README.md          &lt;- The top-level README for developers using this project.\n\u251c\u2500\u2500 data               &lt;- Different types of data. (Recommended to upload with npy formation)\n\u2502   \u251c\u2500\u2500 FERMI\n\u2502   \u251c\u2500\u2500 POISSON\n\u2502   \u251c\u2500\u2500 SIMU\n\u2502   \u2514\u2500\u2500 RAW\n\u2502\n\u251c\u2500\u2500 saves             &lt;- Figure/Loss saves, Trained and Serialized models, model Predictions, .\n\u2502   \u251c\u2500\u2500 FIGURE        &lt;- Figure saves in training.\n\u2502   \u2502\u2500\u2500 PRE_FIG       &lt;- Figure saves in predicting.\n\u2502   \u251c\u2500\u2500 LOSS          &lt;- LOSS data(.npy) and LOSS Figure(.png) saves in training.\n\u2502   \u2514\u2500\u2500 MODEL         &lt;- Trained and Serialized models.\n\u2502\n\u251c\u2500\u2500 docs               &lt;- A default mkdocs project; see www.mkdocs.org for details\n\u2502\n\u2502\n\u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks. Naming convention is a number (for ordering),\n\u2502                         the creator's initials, and a short `-` delimited description, e.g.\n\u2502                         `1.0-jqp-initial-data-exploration`.\n\u2502\n\u251c\u2500\u2500 pyproject.toml     &lt;- Project configuration file with package metadata for \n\u2502                         LHAI and configuration for tools like black\n\u2502\n\u251c\u2500\u2500 references         &lt;- Data dictionaries, manuals, and all other explanatory materials.\n\u2502\n\u251c\u2500\u2500 reports            &lt;- Generated analysis as HTML, PDF, LaTeX, etc.\n\u2502   \u2514\u2500\u2500 figures        &lt;- Generated graphics and figures to be used in reporting\n\u2502\n\u251c\u2500\u2500 requirements.txt   &lt;- The requirements file for reproducing the analysis environment, e.g.\n\u2502                         generated with `pip freeze &gt; requirements.txt`      \n\u2502\n\u251c\u2500\u2500 setup.cfg          &lt;- Configuration file for flake8\n\u2502\n\u2514\u2500\u2500 LHAI   &lt;- Source code for use in this project.\n    \u2502\n    \u251c\u2500\u2500 __init__.py             &lt;- Makes LHAI a Python module\n    \u2502\n    \u251c\u2500\u2500 config.py               &lt;- Store useful variables and configuration\n    \u2502\n    \u251c\u2500\u2500 evaluation.py              &lt;- 3 different methods to evaluation trained models.\n    \u2502\n    \u251c\u2500\u2500 modeling                \n    \u2502   \u251c\u2500\u2500 __init__.py \n    \u2502   \u251c\u2500\u2500 predict.py          &lt;- Code to run model inference with trained models          \n    \u2502   \u2514\u2500\u2500 train.py            &lt;- Code to train models\n    \u2502\n    \u251c\u2500\u2500 models                  &lt;- Neural network model code.\n    \u2502   \u2514\u2500\u2500 CNN_EXP_0_1.py      &lt;- Modelname_Experimentnumber.py\n    \u2502\n    \u2514\u2500\u2500 function             &lt;- Functions used in training and predicting processes.\n    \u251c\u2500\u2500 Dataset.py        &lt;- Function used in loading Dataset.\n    \u251c\u2500\u2500 Log.py            &lt;- Function used in Logging.\n    \u2514\u2500\u2500 Loss.py           &lt;- Function used in Loss generating.\n</code></pre> </li> <li> <p>\u914d\u7f6e python \u73af\u5883</p> <p>\u9996\u5148\u786e\u5b9a\u6211\u4eec\u7684\u673a\u5668\u7684\u5b8f\u89c2\u73af\u5883\u80fd\u591f\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u6211\u4e00\u822c\u559c\u6b22\u9009\u62e9\u670d\u52a1\u5668\u914d\u7f6e\uff1a</p> <pre><code>PyTorch  2.1.0\nPython  3.10(ubuntu22.04)\nCuda  12.1\n</code></pre> <p>\u5f53\u7136\uff0c\u66f4\u9ad8\u7684\u914d\u7f6e\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u53ea\u662f\u8fd9\u4e2a\u914d\u7f6e\u6700\u7ecf\u5178\u548c\u7a33\u5b9a\uff1b</p> <p>\u7136\u540e\uff0c\u9700\u8981\u521b\u5efapython\u865a\u62df\u73af\u5883\uff0c\u5b89\u88c5python\u73af\u5883\uff1a</p> <pre><code>pip install -m requirements.txt\n</code></pre> <p>\u8fd9\u6837\u73af\u5883\u65b9\u9762\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002</p> </li> <li> <p>\u51c6\u5907\u6570\u636e\uff0c\u5e76\u4e14\u653e\u5230\u6570\u636e\u6587\u4ef6\u5939 <code>data</code> \u5bf9\u5e94\u7684\u7c7b\u522b\u6587\u4ef6\u5939\u5185\uff0c\u4fee\u6539 <code>config.py</code> \u4f7f\u4e4b\u80fd\u591f\u6307\u5411\u6211\u4eec\u7684\u6570\u636e</p> <p>\u6bd4\u5982\u6839\u636e <code>config.py</code> \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u7684\u6cca\u677e\u7c7b\u578b\u6570\u636e <code>poisson_src_bkg.pkl.npy</code> \u8def\u5f84\u5c31\u662f\uff1a</p> <pre><code>\"data\" / \"POISSON\" / poisson_src_bkg.pkl.npy\n</code></pre> <p>\u5728evaluation\u4e2d\u5bf9\u8bc4\u4f30\u7528\u5230\u7684\u6570\u636e\u53d8\u91cf\u6709\u4e09\u4e2a\uff1a</p> <pre><code>EVAL_DATA_DIR = PROJ_ROOT / \"data\" / \"POISSON\"                                           # \u53c2\u65703\uff1a\u5982\u679c\u9700\u8981\u6307\u5b9a\u4e0d\u540c\u7684\u6570\u636e\u96c6\u7684\u5730\u5740\u540d\nEVAL_DATA_NAME = \"poisson_src_bkg.pkl.npy\"                                               # \u53c2\u65704\uff1a\u6570\u636e\u96c6\u540d\u79f0\nEVAL_DATA_PATH = EVAL_DATA_DIR / EVAL_DATA_NAME\n</code></pre> </li> <li> <p>\u51c6\u5907\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801\uff0c\u653e\u5230\u795e\u7ecf\u7f51\u7edc\u6587\u4ef6\u5939\u5185\uff0c\u4fee\u6539 <code>config.py</code> \u4f7f\u4e4b\u80fd\u591f\u5f15\u7528\u6211\u4eec\u7684\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801</p> <p>\u6bd4\u5982\u6839\u636e <code>config.py</code> \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u7684CNN\u7c7b\u578b\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801 <code>CNN_EXP_0_1.py</code> \u8def\u5f84\u5c31\u662f\uff1a</p> <pre><code>\"LHAI\" / \"models\" / CNN_EXP_0_1.py\n</code></pre> <p>\u5728evaluation\u4e2d\u5bf9\u8bc4\u4f30\u7528\u5230\u7684\u6a21\u578b\u53d8\u91cf\u6709\u4e94\u4e2a\uff1a</p> <pre><code>EVAL_EXP_NAME = \"EXP_0_1\"                                                                # \u53c2\u65701\uff1a\u5b9e\u9a8c\u4ee3\u53f7\nEVAL_MODEL_NAME = \"CNN\"                                                                  # \u53c2\u65702\uff1a\u6a21\u578b\u5728\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801py\u6587\u4ef6\u4e2d\u7684class\u540d\u79f0\nEVAL_MODEL_PYPATH = PROJ_ROOT / \"LHAI\" / \"models\" / f\"{EVAL_MODEL_NAME}_{EVAL_EXP_NAME}.py\"\nEVAL_MODEL_PTHNAME = \"CNN_EXP_0_1_400epo_32bth_64lat_poissonsrc+bkg_highresorig_poisson_src_bkg.pkl.npy.pth\"    # \u53c2\u65703\uff1a\u9700\u8981\u8bc4\u4f30\u7684\u6a21\u578b\u540d\u79f0\nEVAL_MODEL_PTHPATH = PROJ_ROOT / \"saves\" / \"MODEL\" / EVAL_MODEL_PTHNAME                  # \u53c2\u65704\uff1a\u9700\u8981\u8bc4\u4f30\u7684\u6a21\u578b\u4fdd\u5b58\u7684\u8def\u5f84\n</code></pre> </li> <li> <p>\u786e\u4fdd\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u5df2\u7ecf\u4fdd\u5b58\u5728 <code>saves/MODEL</code> \u6587\u4ef6\u5939\u5185\u3002</p> </li> <li> <p>\u5f00\u59cb\u8bc4\u4f30\u3002</p> <p>\u65b9\u6cd51\uff1a\u8bbe\u7f6e <code>config.py</code> \u4e2dEVAL\u7684\u53c2\u6570\uff0c\u5728 <code>LHAI</code> \u6587\u4ef6\u5939\u4e2d\u8fd0\u884c\u3002</p> <pre><code>python evaluation.py\n</code></pre> <p>\u65b9\u6cd52\uff1a\u9ad8\u7aef\u4e00\u70b9\u7684\u76f4\u63a5\u901a\u8fc7 <code>Typer</code> \u63a5\u53e3\u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570</p> <p>\u5177\u4f53\u8bf7\u770b Code Section \u7684 LHAI \u624b\u518c\u9875\u9762\u3002</p> </li> </ol> <p>by Zihang Liu</p>"},{"location":"Content/codes/function/","title":"LHAI \u51fd\u6570\u6a21\u5757","text":"<p>\u8fd9\u90e8\u5206\u662fLHAI\u4ee3\u7801\u7684\u6838\u5fc3</p> <p>\u8fd9\u90e8\u5206\u7684\u4e2d\u592e\u601d\u60f3\u662f\uff1a\u5728\u4fdd\u6301LOSS\\DATA\\TRAIN...\u51fd\u6570\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u63a7\u5236\u53d8\u91cf\uff0c\u6539\u53d8\u795e\u7ecf\u7f51\u7edc\uff0c\u6d88\u9664\u7384\u5b66\u5f71\u54cd\uff0c\u589e\u52a0\u8bad\u7ec3\u6548\u7387</p> <p>\u56e0\u6b64\uff0c\u8fd9\u90e8\u5206\u662f\u72ec\u7acb\u4e8e\u795e\u7ecf\u7f51\u7edc\u4e4b\u5916\u7684\u53ef\u8c03\u53c2\u51fd\u6570\u3002\u6309\u7167\u91cd\u8981\u6027\u6392\u5e8f\u4ecb\u7ecd\uff1a</p>"},{"location":"Content/codes/function/#dataset","title":"Dataset","text":"<p>\u8be5\u6a21\u5757\u8d1f\u8d23\u6570\u636e\u52a0\u8f7d\u4e0e\u9884\u5904\u7406\uff0c\u662f\u8bad\u7ec3\u6d41\u7a0b\u7684\u5165\u53e3\u3002</p> <pre><code>import os\nimport numpy as np\nfrom PIL import Image\nfrom torch.utils.data import Dataset\nimport torchvision.transforms as transforms\n\nclass ImageDataset(Dataset):\n    def __init__(self, num_to_learn, path_data, inverse=False, data_range=1.0):\n        self.transform = transforms.Compose([\n            transforms.ToTensor(),\n        ])\n        self.data = []\n\n        if not os.path.exists(path_data):\n            raise FileNotFoundError(\"Blurry or Original data file not found.\")\n\n        datas = np.load(path_data, allow_pickle=True)\n        blurry_datas = np.stack(datas[:, 1])\n        original_datas = np.stack(datas[:, 0])\n\n        if not inverse:\n            idx_beg = 0\n            idx_end = num_to_learn\n        else:\n            idx_beg = blurry_datas.shape[0] - num_to_learn\n            idx_end = blurry_datas.shape[0]\n\n        for i in range(idx_beg, idx_end):\n            blurry_data = blurry_datas[i]\n            original_data = original_datas[i]\n\n            # \u6570\u636e\u5f52\u4e00\u5316\u5904\u7406\n            if abs(data_range - 1.0) &lt; 1e-5:\n                img_blurry = (blurry_data - blurry_data.min()) / (blurry_data.max() - blurry_data.min())\n                img_original = (original_data - original_data.min()) / (original_data.max() - original_data.min())\n            elif abs(data_range - 2.0) &lt; 1e-5:\n                img_blurry = 2 * (blurry_data - blurry_data.min()) / (blurry_data.max() - blurry_data.min()) - 1\n                img_original = 2 * (original_data - original_data.min()) / (original_data.max() - original_data.min()) - 1\n            else:\n                raise ValueError(\"datarange must be 1.0 or 2.0\")\n\n            # \u8f6c\u4e3aPIL Image\uff0c\u65b9\u4fbf\u540e\u7eed\u8f6c\u6362\u4e3aTensor\n            img_blurry = Image.fromarray(img_blurry)\n            img_original = Image.fromarray(img_original)\n\n            # \u8f6cTensor\n            img_blurry = self.transform(img_blurry)\n            img_original = self.transform(img_original)\n\n            self.data.append((img_blurry, img_original))\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, index):\n        return self.data[index]\n</code></pre> <ul> <li>\u8bfb\u53d6 <code>path_data</code> \u6307\u5b9a\u7684 <code>.npy</code> \u6587\u4ef6\uff0c\u6570\u636e\u683c\u5f0f\u4e3a <code>[ [original, blurry], ... ]</code>\uff0c\u4e24\u4e2a\u56fe\u50cf\u5747\u4e3anumpy\u6570\u7ec4\u3002</li> <li>\u652f\u6301\u9009\u62e9\u662f\u5426\u4ece\u6570\u636e\u5c3e\u90e8\uff08inverse=True\uff09\u8bfb\u53d6\u6837\u672c\u3002</li> <li> <p>\u652f\u6301\u4e24\u79cd\u5f52\u4e00\u5316\u8303\u56f4\uff1a</p> </li> <li> <p><code>[0,1]</code> \u5f52\u4e00\u5316\uff08data_range=1.0\uff09</p> </li> <li><code>[-1,1]</code> \u5f52\u4e00\u5316\uff08data_range=2.0\uff09</li> <li>\u91c7\u7528PIL\u8f6c\u6362\u4e3aTensor\uff0c\u4fdd\u6301\u4e0ePyTorch\u8bad\u7ec3\u6d41\u7a0b\u517c\u5bb9\u3002</li> <li>\u8bbe\u8ba1\u7b80\u5355\u6613\u6269\u5c55\uff0c\u65b9\u4fbf\u6dfb\u52a0\u989d\u5916\u9884\u5904\u7406\u6216\u6570\u636e\u589e\u5f3a\u3002</li> </ul>"},{"location":"Content/codes/function/#train","title":"Train","text":""},{"location":"Content/codes/function/#1-train","title":"1. <code>train</code>","text":"<ul> <li>\u6838\u5fc3\u529f\u80fd\uff1a\u666e\u901a\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u6d41\u7a0b</li> <li>\u7279\u70b9\uff1a</li> <li>\u52a8\u6001\u5b66\u4e60\u7387\u8c03\u5ea6\uff08scheduler\uff09</li> <li>\u8bad\u7ec3\u4e0e\u6d4b\u8bd5\u9636\u6bb5\u5206\u79bb\uff0c\u5747\u8ba1\u7b97\u5e73\u5747\u635f\u5931</li> <li>\u65e5\u5fd7\u5b9e\u65f6\u8bb0\u5f55\uff08logger + \u81ea\u5b9a\u4e49log\u51fd\u6570\uff09</li> <li>\u8bad\u7ec3\u8fc7\u7a0b\u635f\u5931\u6570\u636e\u5b9e\u65f6\u5b58\u50a8\uff08LOSS_PLOT\u7b49\u5217\u8868\uff09</li> <li>\u6838\u5fc3\u6b65\u9aa4\uff1a</li> <li>\u6e05\u7a7a\u65e5\u5fd7\u6587\u4ef6\uff0c\u5199\u5165\u521d\u59cb\u8bad\u7ec3\u4fe1\u606f</li> <li>\u8fdb\u5165epoch\u5faa\u73af\uff0c\u6267\u884c\u8bad\u7ec3\uff1a<ul> <li>\u6a21\u578b\u8bbe\u4e3atrain\u6a21\u5f0f</li> <li>\u904d\u5386\u8bad\u7ec3\u96c6\uff0c\u524d\u5411\u8ba1\u7b97\u3001\u53cd\u5411\u4f20\u64ad\u3001\u4f18\u5316</li> <li>\u7d2f\u8ba1\u8bad\u7ec3\u635f\u5931\uff0c\u8ba1\u7b97\u5747\u503c</li> </ul> </li> <li>\u5207\u6362\u6d4b\u8bd5\u6a21\u5f0f\uff0c\u904d\u5386\u6d4b\u8bd5\u96c6\uff0c\u8ba1\u7b97\u6d4b\u8bd5\u635f\u5931\u5747\u503c</li> <li>\u8bb0\u5f55\u65e5\u5fd7\uff0c\u66f4\u65b0\u7ed8\u56fe\u5217\u8868\uff0c\u6267\u884c\u5b66\u4e60\u7387\u8c03\u5ea6</li> </ul>"},{"location":"Content/codes/function/#2-train_diffusion","title":"2. <code>train_diffusion</code>","text":"<ul> <li>\u6838\u5fc3\u529f\u80fd\uff1a\u6269\u6563\u6a21\u578b\uff08Diffusion Model\uff09\u8bad\u7ec3\u6d41\u7a0b</li> <li>\u7279\u70b9\uff1a</li> <li>\u7ed3\u5408\u4f4d\u7f6e\u7f16\u7801\u3001\u566a\u58f0\u6b65\u6570\u7b49\u6269\u6563\u6a21\u578b\u7279\u6709\u53c2\u6570</li> <li>\u8bad\u7ec3\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49<code>prepare_data</code>\u5904\u7406\u8f93\u5165\u548c\u566a\u58f0</li> <li>\u652f\u6301\u591a\u79cd\u8bc4\u4f30\u6307\u6807\uff08MAE\u3001MS-SSIM\u3001SSIM\u3001PSNR\u3001NRMSE\uff09\u8ba1\u7b97\u548c\u8bb0\u5f55</li> <li>\u8bad\u7ec3\u548c\u8bc4\u4f30\u9636\u6bb5\u5206\u79bb\uff0c\u652f\u6301\u52a8\u6001\u65e5\u5fd7\u548c\u65f6\u95f4\u7edf\u8ba1</li> <li>\u5b66\u4e60\u7387\u8c03\u5ea6\u5668\u8c03\u7528\u5728epoch\u672b\u5c3e</li> <li>\u6838\u5fc3\u6b65\u9aa4\uff1a</li> <li>\u521d\u59cb\u5316\u65e5\u5fd7\u6587\u4ef6\u548c\u65e5\u5fd7\u4fe1\u606f</li> <li>epoch\u5faa\u73af\uff1a<ul> <li>\u8bad\u7ec3\u6a21\u5f0f\uff1a</li> <li>\u904d\u5386\u8bad\u7ec3\u6279\u6b21\uff0c\u51c6\u5907\u6570\u636e\uff08\u52a0\u566a\u7b49\uff09\uff0c\u524d\u5411\u8ba1\u7b97\u635f\u5931\uff0c\u53cd\u5411\u4f20\u64ad\uff0c\u4f18\u5316</li> <li>\u5b9a\u671f\u6253\u5370\u8bad\u7ec3\u635f\u5931</li> <li>\u8bc4\u4f30\u6a21\u5f0f\uff1a</li> <li>\u904d\u5386\u6d4b\u8bd5\u6279\u6b21\uff0c\u5229\u7528<code>diffusion.reverse_diffusion</code>\u751f\u6210\u56fe\u50cf</li> <li>\u82e5\u5f00\u542f\u6307\u6807\u8ba1\u7b97\uff0c\u8ba1\u7b97\u5e76\u7d2f\u79ef\u6307\u6807</li> <li>\u8bb0\u5f55\u5f53\u524depoch\u7684\u8bad\u7ec3\u635f\u5931\u4e0e\u8017\u65f6\u65e5\u5fd7</li> <li>\u6307\u6807\u6309\u6279\u6b21\u6570\u5f52\u4e00\u5316\u5e76\u4fdd\u5b58</li> </ul> </li> <li>\u66f4\u65b0\u5b66\u4e60\u7387</li> </ul> <p>\u8bbe\u8ba1\u7406\u5ff5\uff1a</p> <ul> <li>\u89e3\u8026\u590d\u6742\u6027\uff1a\u8bad\u7ec3\u4e0e\u8bc4\u4f30\u6a21\u5757\u804c\u8d23\u5206\u660e\uff0c\u6307\u6807\u8ba1\u7b97\u53ef\u6309\u9700\u5f00\u542f</li> <li>\u52a8\u6001\u63a7\u5236\uff1a\u5b66\u4e60\u7387\u968f\u8bad\u7ec3\u8fdb\u5ea6\u81ea\u52a8\u8c03\u8282\uff0c\u63d0\u5347\u6536\u655b\u6548\u7387</li> <li>\u6613\u6269\u5c55\u6027\uff1a\u652f\u6301\u591a\u6307\u6807\u8bc4\u4f30\uff0c\u65b9\u4fbf\u5bf9\u6a21\u578b\u6027\u80fd\u5168\u9762\u76d1\u63a7</li> <li>\u65e5\u5fd7\u4e0e\u53ef\u89c6\u5316\uff1a\u65e5\u5fd7\u4e0e\u7ed8\u56fe\u5217\u8868\u5b9e\u65f6\u66f4\u65b0\uff0c\u65b9\u4fbf\u8bad\u7ec3\u76d1\u63a7\u4e0e\u7ed3\u679c\u5206\u6790</li> </ul> <p>\u4f7f\u7528\u63d0\u793a\uff1a</p> <ul> <li>\u8bad\u7ec3\u65f6\u6ce8\u610f\u51c6\u5907\u597d\u5bf9\u5e94\u7684\u6570\u636e\u52a0\u8f7d\u5668<code>dataloader</code>\u548c<code>trainloader</code>\u3001<code>testloader</code></li> <li><code>train_diffusion</code>\u9700\u8981\u914d\u5408\u6269\u6563\u6a21\u578b\u7ed3\u6784\u548c\u9884\u5904\u7406\u51fd\u6570<code>prepare_data</code>\u4f7f\u7528</li> <li>\u8bc4\u4f30\u6307\u6807\u51fd\u6570\u9700\u63d0\u524d\u5b9a\u4e49\u5e76\u4f20\u5165\uff0c\u907f\u514d\u8fd0\u884c\u65f6\u9519\u8bef</li> <li>\u8bad\u7ec3\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84<code>logpath</code>\u5e94\u786e\u4fdd\u53ef\u5199\u6743\u9650</li> </ul>"},{"location":"Content/codes/function/#loss","title":"LOSS","text":""},{"location":"Content/codes/function/#1-ssim","title":"1. SSIM \u76f8\u5173","text":"<ul> <li> <p><code>ssim_function(img1, img2, window_size=11, data_range=255.0, sigma=1.5)</code>   \u7ecf\u5178\u7ed3\u6784\u76f8\u4f3c\u6027\u6307\u6807\u8ba1\u7b97\uff0c\u57fa\u4e8e\u9ad8\u65af\u6ee4\u6ce2\u4e0e\u6ed1\u52a8\u7a97\u53e3\u5377\u79ef\uff0c\u8fd4\u56de\u4e24\u4e2a\u56fe\u50cf\u7684\u5e73\u5747SSIM\u503c\u3002   \u5185\u90e8\u8c03\u7528<code>gaussian</code>\u751f\u6210\u9ad8\u65af\u6743\u91cd\u7a97\u3002   \u8f93\u5165\u4e3a\u4e8c\u7ef4numpy\u6570\u7ec4\u3002</p> </li> <li> <p><code>batch_ssim(img1, img2)</code>   \u6279\u91cfSSIM\u8ba1\u7b97\uff0c\u8f93\u5165\u4e3aTensor\uff0c\u9010\u5f20\u8f6cPIL\u540e\u8c03\u7528<code>ssim_function</code>\uff0c\u6700\u7ec8\u8fd4\u56de\u6279\u6b21\u5e73\u5747\u503c\u3002   \u9002\u7528\u4e8e\u6279\u5904\u7406\u7684\u8bad\u7ec3\u8bc4\u4f30\u3002</p> </li> </ul>"},{"location":"Content/codes/function/#2-mse-psnr","title":"2. MSE \u4e0e PSNR","text":"<ul> <li><code>batch_psnr(img1, img2, max_val=255.0)</code>   \u6279\u91cf\u5cf0\u503c\u4fe1\u566a\u6bd4\u8ba1\u7b97\uff0c\u57fa\u4e8e\u5747\u65b9\u8bef\u5deeMSE\u8f6c\u6362\u800c\u6765\uff0c\u9002\u5408\u8861\u91cf\u56fe\u50cf\u91cd\u5efa\u8d28\u91cf\u3002</li> </ul>"},{"location":"Content/codes/function/#3","title":"3. \u81ea\u5b9a\u4e49\u590d\u5408\u635f\u5931\u7c7b","text":"<ul> <li><code>Custom_criterion(nn.Module)</code>   \u7ed3\u5408MSE\u548cSSIM\u7684\u52a0\u6743\u635f\u5931\u3002  </li> <li><code>mse_weight</code>\u4e0e<code>ssim_weight</code>\u63a7\u5236\u6743\u91cd\u3002  </li> <li><code>forward</code>\u51fd\u6570\u8fd4\u56de\u52a0\u6743\u540eSSIM\u635f\u5931\uff08\u793a\u4f8b\u4ee3\u7801\u4e2d\u4ec5\u8fd4\u56de\u4e86ssim_loss\uff0c\u7528\u6237\u53ef\u6839\u636e\u6ce8\u91ca\u8c03\u6574\uff09\u3002</li> </ul>"},{"location":"Content/codes/function/#4-jsjensen-shannon-divergence","title":"4. JS\u6563\u5ea6\uff08Jensen-Shannon Divergence\uff09","text":"<ul> <li> <p><code>jsdiv(img1, img2)</code>   \u8ba1\u7b97\u4e24\u4e2a\u5f20\u91cf\u7684JS\u6563\u5ea6\uff0c\u5148\u505asoftmax\u5f52\u4e00\u5316\uff0c\u518d\u8ba1\u7b97\u4fe1\u606f\u71b5\u76f8\u5173\u9879\uff0c\u8fd4\u56de\u5e73\u5747JS\u6563\u5ea6\u3002   \u9002\u5408\u6d4b\u91cf\u6982\u7387\u5206\u5e03\u5dee\u5f02\u3002</p> </li> <li> <p><code>jsdiv_single(img1, img2)</code>   \u7c7b\u4f3c<code>jsdiv</code>\uff0c\u4f46\u8fd4\u56de\u5355\u4e2a\u6837\u672c\u7684\u6563\u5ea6\u503c\u5217\u8868\uff0c\u4e0d\u505a\u5e73\u5747\u3002</p> </li> </ul>"},{"location":"Content/codes/function/#5","title":"5. \u5176\u4ed6","text":"<ul> <li>\u6ce8\u91ca\u90e8\u5206\u6807\u8bb0\u4e86\u591a\u79cd\u5e38\u7528\u635f\u5931\uff08L1\u3001L2\u3001MAE\u3001RMSE\u3001VGG\u635f\u5931\u3001\u4ea4\u53c9\u71b5\u3001Dice\u7b49\uff09\uff0c\u53ef\u6839\u636e\u9700\u6c42\u6269\u5c55\u3002</li> </ul>"},{"location":"Content/codes/function/#6","title":"6. \u7ec4\u5408\u793a\u4f8b","text":"<ul> <li><code>msejsloss(img1, img2)</code>   MSE\u4e0eJS\u6563\u5ea6\u7684\u52a0\u6743\u7ec4\u5408\uff0c\u793a\u4f8b\u6743\u91cd\u4e3a0.2\u4e0e0.8\uff0c\u4f53\u73b0\u590d\u5408\u635f\u5931\u7684\u7075\u6d3b\u6027\u3002</li> </ul> <p>\u8bbe\u8ba1\u7406\u5ff5</p> <ul> <li>\u6a21\u5757\u5316\uff1a\u5355\u4e00\u529f\u80fd\u51fd\u6570\u62c6\u5206\uff0c\u65b9\u4fbf\u66ff\u6362\u548c\u8c03\u8bd5</li> <li>\u517c\u5bb9\u6027\uff1a\u8f93\u5165\u652f\u6301numpy\u6570\u7ec4\u4e0ePyTorch\u5f20\u91cf\uff0c\u9002\u5e94\u8bad\u7ec3\u548c\u8bc4\u4f30\u9700\u6c42</li> <li>\u7075\u6d3b\u914d\u7f6e\uff1a\u6743\u91cd\u53ef\u8c03\uff0c\u652f\u6301\u591a\u79cd\u6307\u6807\u878d\u5408</li> <li>\u6548\u7387\u8003\u91cf\uff1a\u6279\u91cf\u64cd\u4f5c\u548cGPU\u652f\u6301\uff0c\u517c\u987e\u6027\u80fd\u4e0e\u7cbe\u5ea6</li> </ul> <p>\u4f7f\u7528\u5efa\u8bae</p> <ul> <li>SSIM\u76f8\u5173\u51fd\u6570\u9002\u5408\u8d28\u91cf\u8bc4\u4f30\u4f46\u8ba1\u7b97\u5f00\u9500\u8f83\u5927\uff0c\u8bad\u7ec3\u65f6\u53ef\u6309\u9700\u8c03\u7528</li> <li>JS\u6563\u5ea6\u9002\u5408\u6982\u7387\u5206\u5e03\u5bf9\u6bd4\uff0c\u5e38\u7528\u4e8e\u751f\u6210\u6a21\u578b\u6216\u5206\u7c7b\u4efb\u52a1</li> <li>\u590d\u5408\u635f\u5931<code>Custom_criterion</code>\u53ef\u4f5c\u4e3a\u57fa\u7840\uff0c\u7528\u6237\u53ef\u6839\u636e\u4efb\u52a1\u9700\u6c42\u8c03\u6574\u6743\u91cd\u53ca\u7ec4\u5408\u65b9\u5f0f</li> <li>\u4fdd\u8bc1\u8f93\u5165\u6570\u636e\u8303\u56f4\u548c\u683c\u5f0f\u7b26\u5408\u9884\u671f\uff08\u5982<code>data_range</code>\uff0cTensor\u7684\u5f62\u72b6\u548c\u7c7b\u578b\uff09</li> </ul>"},{"location":"Content/codes/function/#dataprocess","title":"dataprocess","text":"<p>\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u4f20\u5165\u53c2\u6570\u5305\u62ec\u6837\u672c\u6570\u91cf\u3001\u6570\u636e\u8def\u5f84\u3001\u662f\u5426\u53cd\u5411\u52a0\u8f7d\u3001\u5f52\u4e00\u5316\u8303\u56f4\u3001\u53bb\u91cd\u9608\u503c\u3001\u6570\u636e\u589e\u5f3a\u5f00\u5173\u53ca\u65b9\u5f0f\u3001\u4f3d\u9a6c\u589e\u5f3a\u3001\u4f4e\u4fe1\u606f\u6837\u672c\u8fc7\u6ee4\u7b49\uff0c\u652f\u6301\u7075\u6d3b\u5b9a\u5236\u6570\u636e\u5904\u7406\u6d41\u7a0b\u3002</p> <p>\u6570\u636e\u9996\u5148\u5b89\u5168\u8bfb\u53d6\u4e3anumpy\u6570\u7ec4\uff0c\u907f\u514d<code>object</code>\u7c7b\u578b\uff0c\u968f\u540e\u62c6\u5206\u6a21\u7cca\u56fe\u4e0e\u539f\u56fe\u4e24\u90e8\u5206\u3002</p> <p>\u9488\u5bf9\u4e0d\u540c\u9700\u6c42\uff0c\u652f\u6301\u53cd\u5411\u52a0\u8f7d\u6837\u672c\u533a\u95f4\u3002\u5bf9\u6bcf\u5f20\u56fe\u50cf\u6267\u884c\u5f52\u4e00\u5316\u5904\u7406\uff0c\u652f\u6301\u6807\u51c6[0,1]\u6216[-1,1]\u4e24\u79cd\u6570\u636e\u8303\u56f4\u3002</p> <p>\u540e\u7eed\u6839\u636e\u914d\u7f6e\u4f9d\u6b21\u6267\u884c\uff1a</p> <ul> <li>\u4f4e\u4fe1\u606f\u6837\u672c\u79fb\u9664\uff1a\u6309\u539f\u56fe\u5747\u503c\u5224\u65ad\uff0c\u5254\u9664\u4fe1\u606f\u91cf\u8fc7\u4f4e\u6837\u672c\uff0c\u9632\u6b62\u8bad\u7ec3\u5e72\u6270\u3002</li> <li>\u91cd\u590d\u6837\u672c\u53bb\u91cd\uff1a\u57fa\u4e8eGPU\u52a0\u901f\u7684\u6279\u91cfSSIM\u8ba1\u7b97\uff0c\u5bf9\u6a21\u7cca\u56fe\u50cf\u53bb\u91cd\uff0c\u663e\u8457\u964d\u4f4e\u6837\u672c\u5197\u4f59\u3002</li> <li>\u6570\u636e\u589e\u5f3a\uff1a\u652f\u6301\u591a\u89d2\u5ea6\u65cb\u8f6c\u6269\u589e\uff0c\u91c7\u7528\u77e2\u91cf\u5316\u5b9e\u73b0\u9ad8\u6548\u5904\u7406\u3002</li> <li>\u4f3d\u9a6c\u589e\u5f3a\uff1a\u5bf9\u539f\u56fe\u505a\u4f3d\u9a6c\u6821\u6b63\uff0c\u63d0\u5347\u56fe\u50cf\u5bf9\u6bd4\u5ea6\u548c\u7ec6\u8282\u8868\u73b0\u3002</li> </ul> <p>\u6240\u6709\u5904\u7406\u540e\u6570\u636e\u8f6c\u6362\u4e3aPyTorch\u5f20\u91cf\u683c\u5f0f <code>(1, H, W)</code>\uff0c\u4fbf\u4e8e\u540e\u7eed\u8bad\u7ec3\u3002</p> <p>\u6838\u5fc3\u79c1\u6709\u65b9\u6cd5\uff1a</p> <ul> <li><code>_normalize</code>\uff1a\u6839\u636e\u4f20\u5165\u7684<code>data_range</code>\u6267\u884c\u5f52\u4e00\u5316\uff0c\u786e\u4fdd\u50cf\u7d20\u503c\u7b26\u5408\u6a21\u578b\u9884\u671f\u3002</li> <li><code>_remove_low_info</code>\uff1a\u6839\u636e\u9608\u503c\u8fc7\u6ee4\u5747\u503c\u8fc7\u4f4e\u7684\u539f\u56fe\u6837\u672c\u3002</li> <li><code>_remove_duplicates_batch_gpu</code>\uff1a\u5229\u7528<code>torchmetrics</code>\u7684SSIM\u6307\u6807\u6279\u91cf\u8ba1\u7b97\u76f8\u4f3c\u5ea6\uff0c\u5b9e\u73b0GPU\u52a0\u901f\u53bb\u91cd\u3002</li> <li><code>_augment_vectorized</code>\uff1a\u6279\u91cf\u65cb\u8f6c\u591a\u89d2\u5ea6\u6570\u636e\u589e\u5f3a\uff0c\u6269\u5145\u6837\u672c\u7a7a\u95f4\u3002</li> <li><code>_enhance_gamma_vectorized</code>\uff1a\u7edf\u4e00\u5bf9\u539f\u56fe\u6267\u884c\u4f3d\u9a6c\u53d8\u6362\uff0c\u63d0\u5347\u56fe\u50cf\u52a8\u6001\u8303\u56f4\u3002</li> </ul> <p>\u8bbe\u8ba1\u8981\u70b9\uff1a</p> <ul> <li>\u4e25\u683c\u4fdd\u8bc1\u6570\u636e\u683c\u5f0f\u7edf\u4e00\u548c\u8ba1\u7b97\u6548\u7387\uff0c\u9002\u914d\u5927\u89c4\u6a21\u6570\u636e\u5904\u7406\u3002</li> <li>\u5145\u5206\u5229\u7528GPU\u52a0\u901f\uff0c\u51cf\u5c11\u91cd\u590d\u6570\u636e\u8ba1\u7b97\u5f00\u9500\u3002</li> <li>\u652f\u6301\u591a\u9636\u6bb5\u5904\u7406\u6d41\u7a0b\uff0c\u53ef\u6309\u9700\u5f00\u542f\u5173\u95ed\uff0c\u7075\u6d3b\u5e94\u5bf9\u4e0d\u540c\u8bad\u7ec3\u7b56\u7565\u3002</li> <li>\u6700\u7ec8\u8f93\u51fa\u7b26\u5408\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u6807\u51c6\u7684Tensor\u683c\u5f0f\uff0c\u65b9\u4fbf\u6a21\u578b\u76f4\u63a5\u8c03\u7528\u3002</li> </ul>"},{"location":"Content/codes/function/#log","title":"Log","text":"<p>\u51fd\u6570<code>log(logpath, message)</code>\uff1a</p> <ul> <li>\u63a5\u6536\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84<code>logpath</code>\u548c\u5b57\u7b26\u4e32<code>message</code>\u3002</li> <li>\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\uff0c\u81ea\u52a8\u5904\u7406\u7f16\u7801\u4e3aUTF-8\u3002</li> <li>\u5c06\u6d88\u606f\u5199\u5165\u6587\u4ef6\uff0c\u5e76\u81ea\u52a8\u6362\u884c\u3002</li> </ul> <p>\u8bbe\u8ba1\u7406\u5ff5\uff1a</p> <ul> <li>\u6781\u7b80\u5b9e\u73b0\uff0c\u65b9\u4fbf\u5728\u8bad\u7ec3\u6d41\u7a0b\u4e2d\u591a\u5904\u8c03\u7528\u3002</li> <li>\u4fdd\u969c\u65e5\u5fd7\u8fde\u7eed\u6027\u548c\u5b8c\u6574\u6027\uff0c\u4e0d\u8986\u76d6\u5df2\u6709\u5185\u5bb9\u3002</li> <li>\u4fdd\u6301\u7f16\u7801\u4e00\u81f4\uff0c\u907f\u514d\u4e2d\u6587\u7b49\u7279\u6b8a\u5b57\u7b26\u5199\u5165\u5f02\u5e38\u3002</li> </ul>"},{"location":"Content/codes/lhai/","title":"LHAI Project Code: LHAI Folder","text":"<p>The <code>LHAI</code> folder contains all the source code for this project, focusing on three main functionalities: training, predict, and testing.</p>"},{"location":"Content/codes/lhai/#1-folder-structure","title":"1 Folder Structure","text":"<pre><code>LHAI                        &lt;- Source code for the project\n\u2502\n\u251c\u2500\u2500 __init__.py             &lt;- Makes LHAI a Python module\n\u2502\n\u251c\u2500\u2500 config.py               &lt;- Stores useful variables and configurations\n\u2502\n\u2502\u2500\u2500 evaluation.py              &lt;- 3 different methods to evaluation trained models.\n\u2502\n\u251c\u2500\u2500 modeling                &lt;- Code for model training and predict\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 predict.py          &lt;- Code for model predict\n\u2502   \u2514\u2500\u2500 train.py            &lt;- Code for training models\n\u2502\n\u251c\u2500\u2500 models                  &lt;- Contains neural network architectures\n\u2502   \u2514\u2500\u2500 CNN_EXP_0_1.py      &lt;- Naming convention: model_name_experiment_id.py\n\u2502\n\u2514\u2500\u2500 function                &lt;- Utility functions used during training and predict\n   \u251c\u2500\u2500 Dataset.py           &lt;- Dataset utilities\n   \u251c\u2500\u2500 Log.py               &lt;- Logging utilities\n   \u2514\u2500\u2500 Loss.py              &lt;- Loss functions\n</code></pre> <p>Next, we will discuss how to configure parameters, train models, and run predict.</p>"},{"location":"Content/codes/lhai/#2-environment-variables-configpy","title":"2 Environment Variables: <code>config.py</code>","text":"<p>The <code>config.py</code> file contains all the environment variables used during training and predict.</p>"},{"location":"Content/codes/lhai/#training-parameters","title":"Training Parameters","text":"<pre><code># ---- Train Parameters ----\nEXP_NAME = \"EXP_0_1\"                                    # Parameter 1: Experiment identifier\nMODEL_NAME = \"CNN\"                                      # Parameter 2: Model type (CNN, GAN, VAE, AE, DIFFUSION)\nMODEL_PATH = PROJ_ROOT / \"LHAI\" / \"models\" / f\"{MODEL_NAME}_{EXP_NAME}.py\"\nDATA_DIR = PROJ_ROOT / \"data\" / \"POISSON\"               # Parameter 3: Dataset directory\nDATA_NAME = \"poisson_src_bkg.pkl.npy\"                   # Parameter 4: Dataset file name\nDATA_PATH = DATA_DIR / DATA_NAME\nSEED = 0                                                # Parameter 5: Random seed\nTRAINTYPE = \"poissonsrc+bkg_highresorig\"                # Parameter 6: Training type\nFRAC_TRAIN = 0.8                                        # Parameter 7: Train-test split ratio\nEPOCHS = 400                                            # Parameter 8: Number of training epochs\nBATCH_SIZE = 32                                         # Parameter 9: Batch size\nLATENTDIM = 64                                          # Parameter 10: Latent dimension (VAE only)\nLR_MAX = 5e-4                                           # Parameter 11: Maximum learning rate\nLR_MIN = 5e-6                                           # Parameter 12: Minimum learning rate\n</code></pre>"},{"location":"Content/codes/lhai/#predict-parameters","title":"Predict Parameters","text":"<pre><code># ---- Test Parameters ----\nPRE_MODEL_PATH = PROJ_ROOT / \"saves\" / \"MODEL\"\nPRE_DATA_PATH = PROJ_ROOT / \"data\" / \"POISSON\"\nPRE_MODEL_NAME = \"CNN_EXP_0_1_400epo_32bth_64lat_poissonsrc+bkg_highresorig_poisson_src_bkg.pkl.npy.pth\"\nPRE_MODEL = \"CNN\"\nPRE_DATA_NAME = \"poisson_src_bkg.pkl.npy\"\nPRE_SEED = 0\nPRE_TRAINTYPE = \"poissonsrc+bkg_highresorig\"\nPRE_FRAC_TRAIN = 0.8\nPRE_BATCH_SIZE = 32\nPRE_LATENT_DIM = 64\n</code></pre> <p>Before starting training or predict, ensure you understand each parameter and its purpose to avoid issues during execution.</p> <p>Tip</p> <p>To modify parameters during execution, there are two approaches:</p> <ol> <li>Directly edit the values in <code>config.py</code>.</li> <li>Use command-line arguments when running <code>train.py</code> or <code>predict.py</code>, as explained below.</li> </ol>"},{"location":"Content/codes/lhai/#3-training-trainpy","title":"3 Training: <code>train.py</code>","text":"<p>This project uses the <code>Typer</code> library for managing command-line arguments. You can run the training script with the following command:</p> <pre><code>python train.py --model-name \"GAN\" --exp-name \"MyExperiment\" --data-dir \"./data\" --data-name \"dataset.csv\" --seed 42 --traintype \"supervised\" --frac-train 0.8 --epochs 10 --batch-size 32 --latentdim 128 --lr-max 0.01 --lr-min 0.001\n</code></pre> <p>Refer to Section 2: Environment Variables for details on parameter meanings.</p> <p>Note</p> <ol> <li>Ensure the working directory in your terminal matches the script's location or use the full path to run the script.</li> <li>Default values from <code>config.py</code> will load into the <code>main</code> function if not provided in the command line.</li> <li>To check available parameters, use the following commands:     <pre><code>python train.py --help\npython predict.py --help\n</code></pre></li> <li>If only a specific parameter needs to be updated, you can pass it directly:     <pre><code>python train.py --model-name \"GAN\"\n</code></pre>     Other parameters will use their default values from <code>config.py</code>.</li> </ol>"},{"location":"Content/codes/lhai/#4-predict-predictpy","title":"4 predict: <code>predict.py</code>","text":"<p>The process for running predict is identical to that of <code>train.py</code>. Use similar commands with relevant parameters for predict tasks.</p> <p>by Zihang Liu</p>"},{"location":"Content/codes/predict/","title":"\u4ecegit clone\u5f00\u59cb\u63a8\u7406","text":"<p><code>predict.py</code>\u5b58\u653e\u5730\u5740:</p> <pre><code>LHAI/LHAI/modeling/predict.py\n</code></pre> <p>\u5728\u4e86\u89e3\u4e86LHAI\u6e90\u4ee3\u7801\u7ed3\u6784\uff1a<code>data</code>,<code>docs</code>,<code>LHAI</code>,<code>saves</code> \u6587\u4ef6\u5939\u7684\u57fa\u672c\u4f5c\u7528\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u63a8\u7406\u4e86\u3002</p> <p>\u8fd9\u4e00\u9875\u5c06\u4f1a\u4ece <code>git clone</code> \u5f00\u59cb\uff0c\u53d9\u8ff0\u6211\u4eec\u8be5\u51c6\u5907\u54ea\u4e9b\u4e1c\u897f\uff0c\u5982\u4f55\u5f00\u59cb\u8fdb\u884c\u63a8\u7406\u3002</p> <ol> <li> <p>\u7b2c\u4e00\u6b65\uff1agit clone</p> <pre><code>git clone --branch Code https://github.com/boobyuuuu/LHAI.git\n</code></pre> <p>\u8fd9\u4f1a\u4e0b\u8f7dCode branch\u4e0b\u7684\u6240\u6709\u4ee3\u7801\u4e8eLHAI\u6587\u4ef6\u5939\u5185\u3002\u6253\u5f00\u6587\u4ef6\u5939\uff1a</p> <pre><code>cd LHAI\n</code></pre> </li> <li> <p>\u68c0\u67e5LHAI\u6587\u4ef6\u5939\u7684\u9879\u76eestructure\uff0c\u662f\u5426\u5305\u542b\u5b8c\u6574\uff1a</p> <pre><code>\u251c\u2500\u2500 LICENSE            &lt;- Open-source license if one is chosen\n\u251c\u2500\u2500 Makefile           &lt;- Makefile with convenience commands like `make data` or `make train`\n\u251c\u2500\u2500 README.md          &lt;- The top-level README for developers using this project.\n\u251c\u2500\u2500 data               &lt;- Different types of data. (Recommended to upload with npy formation)\n\u2502   \u251c\u2500\u2500 FERMI\n\u2502   \u251c\u2500\u2500 POISSON\n\u2502   \u251c\u2500\u2500 SIMU\n\u2502   \u2514\u2500\u2500 RAW\n\u2502\n\u251c\u2500\u2500 saves             &lt;- Figure/Loss saves, Trained and Serialized models, model Predictions, .\n\u2502   \u251c\u2500\u2500 FIGURE        &lt;- Figure saves in training.\n\u2502   \u2502\u2500\u2500 PRE_FIG       &lt;- Figure saves in predicting.\n\u2502   \u251c\u2500\u2500 LOSS          &lt;- LOSS data(.npy) and LOSS Figure(.png) saves in training.\n\u2502   \u2514\u2500\u2500 MODEL         &lt;- Trained and Serialized models.\n\u2502\n\u251c\u2500\u2500 docs               &lt;- A default mkdocs project; see www.mkdocs.org for details\n\u2502\n\u2502\n\u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks. Naming convention is a number (for ordering),\n\u2502                         the creator's initials, and a short `-` delimited description, e.g.\n\u2502                         `1.0-jqp-initial-data-exploration`.\n\u2502\n\u251c\u2500\u2500 pyproject.toml     &lt;- Project configuration file with package metadata for \n\u2502                         LHAI and configuration for tools like black\n\u2502\n\u251c\u2500\u2500 references         &lt;- Data dictionaries, manuals, and all other explanatory materials.\n\u2502\n\u251c\u2500\u2500 reports            &lt;- Generated analysis as HTML, PDF, LaTeX, etc.\n\u2502   \u2514\u2500\u2500 figures        &lt;- Generated graphics and figures to be used in reporting\n\u2502\n\u251c\u2500\u2500 requirements.txt   &lt;- The requirements file for reproducing the analysis environment, e.g.\n\u2502                         generated with `pip freeze &gt; requirements.txt`      \n\u2502\n\u251c\u2500\u2500 setup.cfg          &lt;- Configuration file for flake8\n\u2502\n\u2514\u2500\u2500 LHAI   &lt;- Source code for use in this project.\n    \u2502\n    \u251c\u2500\u2500 __init__.py             &lt;- Makes LHAI a Python module\n    \u2502\n    \u251c\u2500\u2500 config.py               &lt;- Store useful variables and configuration\n    \u2502\n    \u251c\u2500\u2500 evaluation.py              &lt;- 3 different methods to evaluation trained models.\n    \u2502\n    \u251c\u2500\u2500 modeling                \n    \u2502   \u251c\u2500\u2500 __init__.py \n    \u2502   \u251c\u2500\u2500 predict.py          &lt;- Code to run model inference with trained models          \n    \u2502   \u2514\u2500\u2500 train.py            &lt;- Code to train models\n    \u2502\n    \u251c\u2500\u2500 models                  &lt;- Neural network model code.\n    \u2502   \u2514\u2500\u2500 CNN_EXP_0_1.py      &lt;- Modelname_Experimentnumber.py\n    \u2502\n    \u2514\u2500\u2500 function             &lt;- Functions used in training and predicting processes.\n    \u251c\u2500\u2500 Dataset.py        &lt;- Function used in loading Dataset.\n    \u251c\u2500\u2500 Log.py            &lt;- Function used in Logging.\n    \u2514\u2500\u2500 Loss.py           &lt;- Function used in Loss generating.\n</code></pre> </li> <li> <p>\u914d\u7f6e python \u73af\u5883</p> <p>\u9996\u5148\u786e\u5b9a\u6211\u4eec\u7684\u673a\u5668\u7684\u5b8f\u89c2\u73af\u5883\u80fd\u591f\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u6211\u4e00\u822c\u559c\u6b22\u9009\u62e9\u670d\u52a1\u5668\u914d\u7f6e\uff1a</p> <pre><code>PyTorch  2.1.0\nPython  3.10(ubuntu22.04)\nCuda  12.1\n</code></pre> <p>\u5f53\u7136\uff0c\u66f4\u9ad8\u7684\u914d\u7f6e\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u53ea\u662f\u8fd9\u4e2a\u914d\u7f6e\u6700\u7ecf\u5178\u548c\u7a33\u5b9a\uff1b</p> <p>\u7136\u540e\uff0c\u9700\u8981\u521b\u5efapython\u865a\u62df\u73af\u5883\uff0c\u5b89\u88c5python\u73af\u5883\uff1a</p> <pre><code>pip install -m requirements.txt\n</code></pre> <p>\u8fd9\u6837\u73af\u5883\u65b9\u9762\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002</p> </li> <li> <p>\u51c6\u5907\u6570\u636e\uff0c\u5e76\u4e14\u653e\u5230\u6570\u636e\u6587\u4ef6\u5939 <code>data</code> \u5bf9\u5e94\u7684\u7c7b\u522b\u6587\u4ef6\u5939\u5185\uff0c\u4fee\u6539 <code>config.py</code> \u4f7f\u4e4b\u80fd\u591f\u6307\u5411\u6211\u4eec\u7684\u6570\u636e</p> <p>\u6bd4\u5982\u6839\u636e <code>config.py</code> \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u7684\u6cca\u677e\u7c7b\u578b\u6570\u636e <code>poisson_src_bkg.pkl.npy</code> \u8def\u5f84\u5c31\u662f\uff1a</p> <pre><code>\"data\" / \"POISSON\" / poisson_src_bkg.pkl.npy\n</code></pre> <p>\u5728predict\u4e2d\u5bf9\u8bc4\u4f30\u7528\u5230\u7684\u6570\u636e\u53d8\u91cf\u6709\u4e24\u4e2a\uff1a</p> <pre><code>PRE_DATA_PATH = PROJ_ROOT / \"data\" / \"POISSON\"\n# \u53c2\u6570\uff1a\u5982\u679c\u9700\u8981\u6307\u5b9a\u4e0d\u540c\u7684\u6570\u636e\u96c6\u7684\u5730\u5740\u540d\nPRE_DATA_NAME = \"poisson_src_bkg.pkl.npy\"\n# \u53c2\u6570\uff1a\u6570\u636e\u96c6\u540d\u79f0\n</code></pre> </li> <li> <p>\u51c6\u5907\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801\uff0c\u653e\u5230\u795e\u7ecf\u7f51\u7edc\u6587\u4ef6\u5939\u5185\uff0c\u4fee\u6539 <code>config.py</code> \u4f7f\u4e4b\u80fd\u591f\u5f15\u7528\u6211\u4eec\u7684\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801</p> <p>\u6bd4\u5982\u6839\u636e <code>config.py</code> \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u7684CNN\u7c7b\u578b\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801 <code>CNN_EXP_0_1.py</code> \u8def\u5f84\u5c31\u662f\uff1a</p> <pre><code>\"LHAI\" / \"models\" / CNN_EXP_0_1.py\n</code></pre> <p>\u5728predict\u4e2d\u5bf9\u63a8\u7406\u7528\u5230\u7684\u6a21\u578b\u53d8\u91cf\u6709\u4e09\u4e2a\uff1a</p> <pre><code>PRE_MODEL_PATH = PROJ_ROOT / \"saves\" / \"MODEL\"\nPRE_MODEL_NAME = \"CNN_EXP_0_1_400epo_32bth_64lat_poissonsrc+bkg_highresorig_poisson_src_bkg.pkl.npy.pth\"\nRRE_MODEL = \"CNN\"\n</code></pre> </li> <li> <p>\u786e\u4fdd\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u5df2\u7ecf\u4fdd\u5b58\u5728 <code>saves/MODEL</code> \u6587\u4ef6\u5939\u5185\u3002</p> </li> <li> <p>\u5f00\u59cb\u63a8\u7406\u3002</p> <p>\u65b9\u6cd51\uff1a\u8bbe\u7f6e <code>config.py</code> \u4e2dPREDICT\u7684\u53c2\u6570\uff0c\u5728 <code>modeling</code> \u6587\u4ef6\u5939\u4e2d\u76f4\u63a5\u8fd0\u884c\u3002</p> <pre><code>python predict.py\n</code></pre> <p>\u65b9\u6cd52\uff1a\u9ad8\u7aef\u4e00\u70b9\u7684\u76f4\u63a5\u901a\u8fc7 <code>Typer</code> \u63a5\u53e3\u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570</p> <p>\u5177\u4f53\u8bf7\u770b Code Section \u7684 LHAI \u624b\u518c\u9875\u9762\u3002</p> </li> </ol> <p>by Zihang Liu</p>"},{"location":"Content/codes/saves/","title":"LHAI Project Code: Saves Folder","text":"<p>The <code>saves</code> folder stores outputs generated during training, including images, loss data, trained models, and results from inference.</p> <pre><code>\u2502\u2500\u2500 saves              &lt;- Stores images, loss data, trained models, and prediction results\n\u2502   \u251c\u2500\u2500 FIGURE         &lt;- Images generated from preliminary inference after training \n\u2502   \u2502                     (Format: ./saves/FIGURE/EarlyPre_{MODEL_NAME}_{EXP_NAME}_{epochs}epo_{batch_size}bth_{latentdim}lat_{traintype}_{DATA_NAME}.png)\n\u2502   \u2502\u2500\u2500 PRE_FIG        &lt;- Images saved during inference \n\u2502   \u2502                     (Format: ./saves/PRE_FIG/{savepath}/PRE_FIG/Pre_{PRE_MODEL_NAME}.png)\n\u2502   \u251c\u2500\u2500 LOSS           &lt;- Loss data (.npy) and loss plots (.png) saved during training\n\u2502   \u2502                     (Format: ./saves/LOSS/{MODEL_NAME}_{EXP_NAME}_{epochs}epo_{batch_size}bth_{latentdim}lat_{traintype}_{DATA_NAME}.npy + .png)\n\u2502   \u2514\u2500\u2500 MODEL          &lt;- Saved trained models and serialized files \n\u2502                         (Format: ./saves/MODEL/{MODEL_NAME}_{EXP_NAME}_{epochs}epo_{batch_size}bth_{latentdim}lat_{traintype}_{DATA_NAME}.pth)\n</code></pre> <p>This folder requires minimal explanation -- once training or inference is complete, check this folder to retrieve the results.</p> <p>by Zihang Liu</p>"},{"location":"Content/codes/server/","title":"\u670d\u52a1\u5668\u64cd\u4f5c\u7b14\u8bb0 - autodl","text":""},{"location":"Content/codes/server/#autodl","title":"\u4e00 autodl","text":""},{"location":"Content/codes/server/#1","title":"1 \u57fa\u7840\u5e38\u8bc6","text":"<ol> <li> <p>\u6ce8\u518c\u5b66\u751f\u4f1a\u5458</p> </li> <li> <p>autodl\u5b98\u65b9\u6587\u6863</p> </li> <li> <p>\u5173\u4e8e\u5b9e\u4f8b\uff1a\u5b9e\u4f8b\u5728\u5219\u6570\u636e\u5728\uff0c\u4f46\u662f\u6bcf\u4e00\u4e2a\u5b9e\u4f8b\u53ea\u80fd\u4fdd\u5b5815\u5929\uff0c\u5e76\u4e14\u8fd915\u5929\u5185\u53ea\u8981\u5b9e\u4f8b\u6ca1\u6709\u88ab\u91ca\u653e\u5c31\u4f1a\u6bcf\u5929\u6263\u8d39\uff08\u4e0d\u591a\uff0c\u4f46\u6709\uff09</p> </li> <li> <p>\u5982\u679cgit clone\u663e\u793a\u7f51\u7edc\u95ee\u9898\uff0c\u542f\u7528autodl\u81ea\u5e26\u7684\u5b66\u672f\u8d44\u6e90\u52a0\u901f\uff1a</p> <pre><code>source /etc/network_turbo\n</code></pre> <p>\u5173\u95ed\u4ee3\u7406\uff1a</p> <pre><code>unset http_proxy &amp;&amp; unset https_proxy\n</code></pre> </li> </ol>"},{"location":"Content/codes/server/#2","title":"2 \u5feb\u901f\u5f00\u59cb","text":"<ol> <li> <p>\u521b\u5efa\u5b9e\u4f8b</p> <p>\u6ce8\u518c\u540e\u8fdb\u5165\u63a7\u5236\u53f0\uff0c\u5728\u6211\u7684\u5b9e\u4f8b\u83dc\u5355\u4e0b\uff0c\u70b9\u51fb\u79df\u7528\u65b0\u5b9e\u4f8b</p> <p></p> <p>\u5728\u79df\u7528\u5b9e\u4f8b\u9875\u9762\uff1a\u9009\u62e9\u8ba1\u8d39\u65b9\u5f0f\uff0c\u9009\u62e9\u5408\u9002\u7684\u4e3b\u673a\uff0c\u9009\u62e9\u8981\u521b\u5efa\u5b9e\u4f8b\u4e2d\u7684GPU\u6570\u91cf\uff0c\u9009\u62e9\u955c\u50cf\uff08\u5185\u7f6e\u4e86\u4e0d\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\uff09\uff0c\u6700\u540e\u521b\u5efa\u5373\u53ef</p> <p></p> <p>\u521b\u5efa\u5b8c\u6210\u540e\u7b49\u5f85\u5f00\u673a\uff0c\u4eca\u540e\u4e3b\u8981\u7528\u5230\u7684\u64cd\u4f5c\u5165\u53e3\u89c1\u622a\u56fe\u4e2d</p> <p></p> </li> <li> <p>\u7ec8\u7aef\u8bad\u7ec3</p> <p>\u5728\u6253\u5f00\u7684JupyterLab\u9875\u9762\u4e2d\u6253\u5f00\u7ec8\u7aef\uff0c\u6267\u884c\u60a8\u7684Python\u547d\u4ee4\u7b49\u5b8c\u6210\u8bad\u7ec3\uff08\u5efa\u8bae\u4f7f\u7528\u540e\u53f0\u8bad\u7ec3\u65b9\u5f0f\uff09</p> <p></p> </li> <li> <p>vscode\u8bad\u7ec3</p> <p>\u5982\u679c\u4e60\u60ef\u7528vscode\u64cd\u4f5c\u800c\u4e0d\u662fjupyter lab\uff0c\u7528vscode remote\u63d2\u4ef6\u8fdb\u884cssh\u8fde\u63a5</p> <p>vscode\u5f00\u53d1\u73af\u5883</p> </li> </ol>"},{"location":"Content/codes/server/#3","title":"3 \u56e2\u961f\u6570\u636e\u7ba1\u7406","text":"<p>\u6211\u4eec\u4f7f\u7528\u963f\u91cc\u4e91\u76d8\u4f5c\u4e3a\u56e2\u961f\u6570\u636e\u7ba1\u7406\u4e2d\u5fc3\u3002(1)</p> <ol> <li> <p> aliyun\u7684\u4f18\u70b9\uff1a</p> <ol> <li>\u591a\u5e73\u53f0\u652f\u6301, \u652f\u6301 Windows, macOS, linux(x86/x64/arm), android, iOS \u7b49</li> <li>\u963f\u91cc\u4e91\u76d8\u591a\u7528\u6237\u652f\u6301</li> <li>\u652f\u6301\u6587\u4ef6\u7f51\u76d8\uff0c\u76f8\u518c\u7f51\u76d8\u65e0\u7f1d\u5207\u6362</li> <li>\u4e0b\u8f7d\u7f51\u76d8\u5185\u6587\u4ef6, \u652f\u6301\u591a\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u4e0b\u8f7d, \u652f\u6301\u65ad\u70b9\u7eed\u4f20\u548c\u5355\u6587\u4ef6\u5e76\u884c\u4e0b\u8f7d\u3002\u652f\u6301\u8f6f\u94fe\u63a5(\u7b26\u53f7\u94fe\u63a5)\u6587\u4ef6\u3002</li> <li>\u4e0a\u4f20\u672c\u5730\u6587\u4ef6, \u652f\u6301\u591a\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u4e0a\u4f20\uff0c\u652f\u6301\u6392\u9664\u6307\u5b9a\u6587\u4ef6\u5939/\u6587\u4ef6\uff08\u6b63\u5219\u8868\u8fbe\u5f0f\uff09\u529f\u80fd\u3002\u652f\u6301\u8f6f\u94fe\u63a5(\u7b26\u53f7\u94fe\u63a5)\u6587\u4ef6\u3002</li> <li>\u540c\u6b65\u5907\u4efd\u529f\u80fd\u652f\u6301\u5907\u4efd\u672c\u5730\u6587\u4ef6\u5230\u4e91\u76d8\uff0c\u5907\u4efd\u4e91\u76d8\u6587\u4ef6\u5230\u672c\u5730\uff0c\u53cc\u5411\u540c\u6b65\u5907\u4efd\u4fdd\u6301\u672c\u5730\u6587\u4ef6\u548c\u7f51\u76d8\u6587\u4ef6\u540c\u6b65\u3002\u5e38\u7528\u4e8e\u5d4c\u5165\u5f0f\u6216\u8005NAS\u7b49\u8bbe\u5907\uff0c\u652f\u6301docker\u955c\u50cf\u90e8\u7f72\u3002</li> <li>\u547d\u4ee4\u548c\u6587\u4ef6\u8def\u5f84\u8f93\u5165\u652f\u6301Tab\u952e\u81ea\u52a8\u8865\u5168</li> <li>\u652f\u6301\u963f\u91cc\u4e91ECS\u73af\u5883\u4e0b\u4f7f\u7528\u5185\u7f51\u94fe\u63a5\u4e0a\u4f20/\u4e0b\u8f7d\uff0c\u901f\u5ea6\u66f4\u5feb(\u53ea\u652f\u6301\u963f\u91cc\u7ecf\u5178\u7f51\u7edc\uff0c\u6700\u9ad8\u53ef\u8fbe100MB/s)\uff0c\u8fd8\u53ef\u4ee5\u8282\u7701\u516c\u7f51\u5e26\u5bbd\u6d41\u91cf(\u914d\u7f6etransfer_url_type=2\u5373\u53ef)</li> <li>\u652f\u6301webdav\u6587\u4ef6\u670d\u52a1\uff0c\u53ef\u4ee5\u5c06\u963f\u91cc\u4e91\u76d8\u5f53\u505awebdav\u6587\u4ef6\u7f51\u76d8\u6302\u8f7d\u5230Windows, macOS, linux\u7684\u78c1\u76d8\u4e2d\u8fdb\u884c\u4f7f\u7528\u3002webdav\u90e8\u7f72\u652f\u6301docker\u955c\u50cf\uff0c\u955c\u50cf\u53ea\u6709\u4e0d\u523010MB\u975e\u5e38\u5c0f\u5de7\u3002</li> <li>\u652f\u6301JavaScript\u63d2\u4ef6\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u7684\u9700\u8981\u5b9a\u5236\u4e0a\u4f20/\u4e0b\u8f7d\u4e2d\u5173\u952e\u6b65\u9aa4\u7684\u884c\u4e3a\uff0c\u6700\u5927\u7a0b\u5ea6\u6ee1\u8db3\u81ea\u5df1\u7684\u4e2a\u6027\u5316\u9700\u6c42 \u5728linux\u4e2d\u4e0b\u8f7daliyunpan</li> </ol> <p>\u539f\u6587\u94fe\u63a5\uff1ahttps://blog.csdn.net/qq_41174671/article/details/127310715</p> </li> </ol> <p>\u70b9\u51fb\u6b64\u5904\u67e5\u770b\u5b98\u65b9\u6559\u7a0b</p> <ol> <li> <p>\u4e0b\u8f7d\u4e0e\u5b89\u88c5</p> <pre><code>#\u5148\u8fdb\u5165\u60f3\u5c06\u5b89\u88c5\u5305\u5b89\u88c5\u5728\u54ea\u91cc\u7684\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u4e0b\u8f7d\nwget https://github.com/tickstep/aliyunpan/releases/download/v0.2.2/aliyunpan-v0.2.2-linux-amd64.zip\n# download\u540e\u9762\u63a5\u7684\u5c31\u662f\u7248\u672c\u53f7\uff0c\u7136\u540e\u518d\u63a5\u53d1\u5e03\u9875\u7684\u5b89\u88c5\u5305\u540d\nunzip aliyunpan-v0.2.2-linux-amd64.zip #\u89e3\u538b\u5b89\u88c5\u5305\ncd aliyunpan-v0.2.2-linux-amd64  #\u8fdb\u5165\u5b89\u88c5\u5305\n./aliyunpan #\u542f\u52a8aliyunpan\nlogin #\u767b\u5f55\u8d26\u53f7\n</code></pre> </li> <li> <p>\u767b\u5f55</p> <p>refresh token\uff1ab69841de9160458da59d7757887b56c0\uff08\u5df2\u7ecf\u8fc7\u671f\uff09</p> </li> <li> <p>\u67e5\u770b\u547d\u4ee4</p> <pre><code># \u83b7\u53d6\u7a0b\u5e8f\u7684\u529f\u80fd\nhelp\n# \u83b7\u53d6\u8d26\u6237\u6587\u4ef6\nls\n</code></pre> <p>\u975e\u5e38\u6709\u7528\u7684\u547d\u4ee4\uff1a<code>help</code></p> </li> <li> <p>\u4e0b\u8f7d\u6587\u4ef6</p> <p>\u901a\u8fc7 <code>config set -savedir &lt;savedir&gt;</code> \u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u6587\u4ef6\u4fdd\u5b58\u7684\u76ee\u5f55\u3002</p> <pre><code>download \u6587\u4ef6\u540d\n</code></pre> </li> <li> <p>\u4e0a\u4f20\u6587\u4ef6</p> <pre><code>upload &lt;\u672c\u5730\u6587\u4ef6/\u76ee\u5f55\u7684\u8def\u5f841&gt; &lt;\u6587\u4ef6/\u76ee\u5f552&gt; &lt;\u6587\u4ef6/\u76ee\u5f553&gt; ... &lt;\u76ee\u6807\u76ee\u5f55&gt;\n</code></pre> <p>\u4f8b\u5982\uff0c\u4e00\u4e2a\u4e0a\u4f20\u6587\u4ef6\u547d\u4ee4\u793a\u4f8b\uff1a</p> <pre><code>upload /root/autodl-fs/poisson_src_bkg.pkl.npy /LHAI\n</code></pre> </li> </ol>"},{"location":"Content/codes/server/#-","title":"\u4e8c \u5f00\u59cb - \u57fa\u7840\u64cd\u4f5c","text":"<p>Note</p> <p><code>free -h</code> : \u67e5\u770b\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5 <code>df -h</code>: \u67e5\u770b\u7cfb\u7edf\u76d8\u3001\u786c\u76d8\u5bb9\u91cf <code>nvidia-smi</code> </p> <p><code>python --version</code> \uff1a\u68c0\u67e5python\u7248\u672c <code>python -c \"import torch; print(torch.__version__)\"</code> : \u68c0\u67e5pytorch\u7248\u672c <code>nvcc --version</code> : \u68c0\u67e5cuda\u7248\u672c</p>"},{"location":"Content/codes/server/#0","title":"0 \u4e00\u822c\u64cd\u4f5c","text":"<ul> <li> <p>ssh\u8fde\u63a5\u670d\u52a1\u5668</p> <p>\u65b9\u6cd51\uff1a\u5728\u7ec8\u7aef\u8f93\u5165\uff08\u73af\u5883\u4e2d\u5df2\u4e0b\u8f7dssh\uff09</p> <pre><code>ssh -L 8889:localhost:8889 root@111.61.30.143\n</code></pre> <p>\u65b9\u6cd52\uff1a\u4f7f\u7528vscode\u8fdb\u884c\u670d\u52a1\u5668\u7f16\u8f91\uff1ahttps://blog.csdn.net/kiong_/article/details/135877723</p> <p>vscode\u8fde\u63a5\u670d\u52a1\u5668\u4f7f\u7528ipynb\u6587\u4ef6\u7684\u5c0f\u95ee\u9898\uff1avscode\u4e2d ssh\u8fde\u63a5\u670d\u52a1\u5668\u540e \u65e0\u6cd5\u4e3ajupyter\u6587\u4ef6\u9009\u62e9\u5185\u6838kernel</p> </li> <li> <p>\u5982\u4f55\u67e5\u770b\u914d\u7f6e</p> <p>1.\u57fa\u672c\u7cfb\u7edf\u4fe1\u606f</p> <p><code>cat /etc/os-release</code></p> <p><code>uname -r</code> :\u7528\u4e8e\u663e\u793a\u5f53\u524d\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u7684\u5185\u6838\u7248\u672c</p> <p>2.CPU\u4fe1\u606f</p> <p><code>lscpu</code> :  \u547d\u4ee4\u7528\u4e8e\u663e\u793a\u8be6\u7ec6\u7684CPU\u67b6\u6784\u4fe1\u606f\uff0c\u5305\u62ecCPU\u578b\u53f7\u3001\u6838\u5fc3\u6570\u3001\u7ebf\u7a0b\u6570\u7b49\u3002</p> <p>3.\u5185\u5b58\u4fe1\u606f\uff1a</p> <p><code>free -h</code> : \u67e5\u770b\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5</p> <p>4.\u78c1\u76d8\u4fe1\u606f\uff1a</p> <p><code>lsblk</code> : \u67e5\u770b\u5206\u533a\u4fe1\u606f</p> <p><code>df -h</code>: \u67e5\u770b\u7cfb\u7edf\u76d8\u3001\u786c\u76d8\u5bb9\u91cf</p> <p>5.\u663e\u5361\u4fe1\u606f\uff08\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u67e5\u770b\u663e\u5361\u5360\u7528\u60c5\u51b5\uff09\uff1a</p> <p><code>nvidia-smi</code></p> </li> </ul>"},{"location":"Content/codes/server/#1_1","title":"1 \u8d26\u6237\u6587\u4ef6\u3001\u73af\u5883\u67e5\u770b","text":"<p>\u7528 <code>ls -a</code>\u67e5\u770b\u6240\u6709\u6587\u4ef6\uff1a</p> <pre><code>.   .bash_history  .bashrc  .config             .ipython  .local    .python_history  .sudo_as_admin_successful\n..  .bash_logout   .cache   .ipynb_checkpoints  .jupyter  .profile  snap             .viminfo\n</code></pre> . <p>. \u5f53\u524d\u6587\u4ef6</p> .. <p>.. \u4e0a\u4e00\u7ea7\u6587\u4ef6</p> .bash_history <p>.bash_history: \u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4e86\u7528\u6237\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c\u7684\u5386\u53f2\u547d\u4ee4\u8bb0\u5f55\u3002\u6bcf\u6b21\u7528\u6237\u9000\u51fa\u767b\u5f55\u65f6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u4f1a\u88ab\u66f4\u65b0\u3002</p> .bash_logout <p>.bash_logout: \u5f53\u7528\u6237\u9000\u51fa Bash shell \u65f6\uff0c\u4f1a\u6267\u884c\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u7684\u547d\u4ee4\u3002\u901a\u5e38\u7528\u4e8e\u6e05\u7406\u4e34\u65f6\u6587\u4ef6\u6216\u6267\u884c\u5176\u4ed6\u6e05\u7406\u4efb\u52a1\u3002</p> .bashrc <p>.bashrc: \u8fd9\u662f <code>Bash shell</code> \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u8bbe\u7f6e\u7528\u6237\u7684\u4e2a\u6027\u5316\u547d\u4ee4\u522b\u540d\u3001\u73af\u5883\u53d8\u91cf\u4ee5\u53ca\u5176\u4ed6 Bash shell \u7684\u884c\u4e3a\u3002</p> .cache <p>.cache: \u8fd9\u4e2a\u76ee\u5f55\u7528\u4e8e\u5b58\u50a8\u5e94\u7528\u7a0b\u5e8f\u7684\u7f13\u5b58\u6587\u4ef6\u3002\u7f13\u5b58\u6587\u4ef6\u53ef\u4ee5\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u4f46\u6709\u65f6\u4e5f\u53ef\u80fd\u5360\u7528\u5927\u91cf\u78c1\u76d8\u7a7a\u95f4\u3002</p> .config <p>.config: \u8fd9\u4e2a\u76ee\u5f55\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u6587\u4ef6\u3002\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u521b\u5efa\u5b50\u76ee\u5f55\u6765\u5b58\u50a8\u5b83\u4eec\u7684\u914d\u7f6e\u4fe1\u606f\u3002</p> .ipython <p>.ipython: \u8fd9\u4e2a\u76ee\u5f55\u5305\u542b\u4e86 IPython\uff08\u4e00\u4e2a\u4ea4\u4e92\u5f0f Python shell\uff09\u7684\u914d\u7f6e\u6587\u4ef6\u548c\u5386\u53f2\u8bb0\u5f55\u3002</p> .ipynb_checkpoints <p>.ipynb_checkpoints: \u8fd9\u4e2a\u76ee\u5f55\u662f Jupyter Notebook \u81ea\u52a8\u751f\u6210\u7684\uff0c\u7528\u4e8e\u5b58\u50a8 notebook \u6587\u4ef6\u7684\u68c0\u67e5\u70b9\u7248\u672c\u3002\u8fd9\u4e9b\u68c0\u67e5\u70b9\u7248\u672c\u53ef\u4ee5\u7528\u4e8e\u6062\u590d notebook \u6587\u4ef6\u7684\u5148\u524d\u72b6\u6001\u3002\uff08\u6ca1\u7528\uff09</p> .jupyter <p>.jupyter: \u8fd9\u4e2a\u76ee\u5f55\u5305\u542b\u4e86 Jupyter Notebook \u7684\u914d\u7f6e\u6587\u4ef6\u548c\u76f8\u5173\u6570\u636e\uff0c\u4f8b\u5982\u81ea\u5b9a\u4e49\u7684\u7b14\u8bb0\u672c\u6a21\u677f\u548c\u6269\u5c55\u3002</p> .local <p>.local: \u8fd9\u4e2a\u76ee\u5f55\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u7528\u6237\u7684\u672c\u5730\u5b89\u88c5\u7684\u7a0b\u5e8f\u548c\u6570\u636e\u3002\u4f8b\u5982\uff0c\u7528\u6237\u53ef\u4ee5\u5c06 Python \u5305\u5b89\u88c5\u5230\u8fd9\u4e2a\u76ee\u5f55\u4e2d\uff0c\u800c\u4e0d\u662f\u7cfb\u7edf\u8303\u56f4\u5185\u5b89\u88c5\u3002</p> .profile <p>.profile: \u8fd9\u662f\u7528\u6237\u767b\u5f55\u65f6\u6267\u884c\u7684 Bourne shell \u914d\u7f6e\u6587\u4ef6\u3002\u5b83\u7c7b\u4f3c\u4e8e .bashrc\uff0c\u4f46\u9002\u7528\u4e8e Bourne shell \u53ca\u5176\u884d\u751f\u7248\u672c\uff0c\u5982 Bash\u3002</p> snap <p>snap: \u8fd9\u4e2a\u76ee\u5f55\u5305\u542b\u4e86\u901a\u8fc7 Snap \u5305\u7ba1\u7406\u5668\u5b89\u88c5\u7684\u5e94\u7528\u7a0b\u5e8f\u3002Snap \u662f\u4e00\u79cd\u6253\u5305\u548c\u5206\u53d1 Linux \u5e94\u7528\u7a0b\u5e8f\u7684\u65b9\u6cd5\uff0c\u5b83\u5c06\u5e94\u7528\u7a0b\u5e8f\u548c\u5b83\u4eec\u7684\u4f9d\u8d56\u9879\u6346\u7ed1\u5728\u4e00\u8d77\u3002</p> .python_history <p>.python_history: \u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4e86\u7528\u6237\u5728 Python shell \u4e2d\u6267\u884c\u7684\u5386\u53f2\u547d\u4ee4\u8bb0\u5f55\uff0c\u7c7b\u4f3c\u4e8e .bash_history\u3002</p> .sudo_as_admin_successful <p>.sudo_as_admin_successful: \u8fd9\u4e2a\u6587\u4ef6\u662f sudo \u547d\u4ee4\u751f\u6210\u7684\uff0c\u8868\u793a\u4e0a\u6b21\u4f7f\u7528 sudo \u547d\u4ee4\u65f6\u8eab\u4efd\u9a8c\u8bc1\u6210\u529f\u3002</p>"},{"location":"Content/codes/server/#2-permission-denied","title":"2 \u6587\u4ef6\u8bfb\u5199\u6743\u9650\uff1aPermission denied","text":"<p>\u8de8\u8d26\u6237\u64cd\u4f5c\u65f6\u5e38\u9047\u5230\u3002\u5728\u4e00\u4e2a\u8d26\u6237\u65f6\u65e0\u6cd5\u6253\u5f00\u53e6\u4e00\u4e2a\u8d26\u6237\u7684\u6587\u4ef6\uff1a</p> <pre><code>ylin1@zhliu-X10DRi:~$ cd /home/zhliu\n-bash: cd: /home/zhliu: Permission denied\n</code></pre> <p>\u89e3\u51b3\u65b9\u6cd5 1 \uff1a\u4f7f\u7528sudo \u547d\u4ee4</p> <pre><code>sudo + \u547d\u4ee4\n</code></pre> <p>\u89e3\u51b3\u65b9\u6cd5 2 \uff1a\u4f7f\u7528root\u8eab\u4efd\u64cd\u4f5c</p> <pre><code>#\u8fdb\u5165root\u7ba1\u7406\u5458\u8eab\u4efd\uff1a\nsudo -i\n#\u9000\u51faroot\u7ba1\u7406\u5458\u8eab\u4efd\uff1a\nexit\n</code></pre> <p>\u590d\u5236\u6587\u4ef6\u5939\u65f6\uff0c\u5e38\u5e38\u4f1a\u9047\u5230\u6743\u9650\u95ee\u9898\uff0c\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u6539\u53d8\u6587\u4ef6\u5939\u6240\u6709\u8005</p> <pre><code>sudo chown -R ylin1:ylin1 trained_models\n</code></pre>"},{"location":"Content/codes/server/#3_1","title":"3 \u8d26\u6237\u76f8\u5173\u547d\u4ee4","text":"<pre><code># \u67e5\u770b\u670d\u52a1\u5668\u6709\u54ea\u4e9b\u8d26\u6237\ngetent passwd\n\n# \u67e5\u770b\u5f53\u524d\u8d26\u6237\u662f\u5426\u5177\u6709root\u6743\u9650\nsudo -l\n\n# \u67e5\u770b\u67d0\u7528\u6237\u7684\u6240\u6709\u6743\u9650\ngroups username\n\n# \u521b\u5efa\u8d26\u6237\nsudo adduser newuser\n\n# \u7ed9\u67d0\u7528\u6237sudo\u6743\u9650\nsudo adduser username sudo\n</code></pre>"},{"location":"Content/codes/server/#4","title":"4 \u540e\u53f0\u8fd0\u884c\u7ba1\u7406","text":"<p>\u540e\u53f0\u8fd0\u884cipynb\u6587\u4ef6\uff1a</p> <pre><code>nohup runipy ./codes/Train.ipynb 2&gt;&amp;1 &amp;\n</code></pre> <p>\u67e5\u770b\u540e\u53f0\u3001\u67e5\u770b\u6307\u5b9a\u540e\u53f0\u3001\u505c\u6b62\u540e\u53f0</p> <p>\u6ce8\uff1aps aux \u4e2d Time \u7684\u5355\u4f4d\u662f\u5c0f\u65f6\uff08 7:23 \u8868\u793a 7h23min\uff09</p> <pre><code># \u67e5\u770b\u6240\u6709\u540e\u53f0\nps aux \n\n# \u67e5\u770b\u6307\u5b9a\u7528\u6237\u540e\u53f0\nps aux | grep username\n\n# \u67e5\u770b runipy \u5b57\u7b26\u4e32\u540e\u53f0\nps aux | grep runipy\n\n# \u505c\u6b62\u67d0\u4e2a\u540e\u53f0\nkill PID\n</code></pre>"},{"location":"Content/codes/server/#5","title":"5 \u7cfb\u7edf\u73af\u5883\u53d8\u91cf","text":"<p>pip\u5b89\u88c5\u76f8\u5173\u5305\u65f6\u51fa\u73b0\uff1a</p> <pre><code>WARNING: The script lit is installed in '/home/zywang/.local/bin' which is not on PATH.\n</code></pre> <p>\u5e76\u4e14\u8fd0\u884c\u4e00\u4e9b\u547d\u4ee4\u4f1a\u627e\u4e0d\u5230\u3002\u5982\u5b89\u88c5jupyter\u540e\u8fd0\u884c<code>jupyter notebook</code> \uff0c\u53ef\u80fd\u4f1a\u62a5\u9519\uff1a</p> <pre><code>Jupyter command `jupyter-notebook` not found.\n</code></pre> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <p>1.\u6253\u5f00.bashrc\uff0c\u5c06\u9700\u8981\u7684\u53d8\u91cf\u5199\u5165\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\uff1a</p> <pre><code>echo 'export PATH=\"$HOME/.local/bin:$PATH\"' &gt;&gt; ~/.bashrc\n</code></pre> <p>2.\u5e94\u7528\u73af\u5883\u53d8\u91cf</p> <pre><code>source ~/.bashrc\n</code></pre>"},{"location":"Content/codes/server/#6","title":"6 \u914d\u7f6e\u7f51\u7edc","text":"<ol> <li> <p>\u4e3b\u8981\u7f51\u53e3\uff1a\"2: enp4s0f0\"\uff0c\u6253\u5f00\u5c31\u53ef\u4ee5\u8bbf\u95ee\u6559\u80b2\u7f51\u3002\u9664lo\u7f51\u53e3\uff08loop\u56de\u73af\uff09\u5916\uff0c\u7f51\u53e3\u5747\u4e3a\u81ea\u52a8\u83b7\u53d6ip\u5730\u5740\u3002</p> </li> <li> <p>\u8bbf\u95ee\u6559\u80b2\u7f51\u5916\u7f51\u65b9\u6cd5\uff1a</p> </li> </ol> <pre><code># \u8fdb\u5165root\u8d26\u6237\nsudo -i\n# \u5207\u6362\u5230\u811a\u672c\u76ee\u5f55\ncd /home/jzhang/bin\n# \u4ee5\u6587\u672c\u7f16\u8f91\u5668\u6253\u5f00login\u6587\u4ef6\uff08\u6ca1\u6709\u540e\u7f00\u540d\uff09\nnano login\n# \u5199\u5165\u4ee5\u4e0b\u5185\u5bb9\ncurl -X POST https://p.nju.edu.cn/api/portal/v1/login -H \"Content-type: application/json\" -d '{\"username\":\"\u7edf\u4e00\u9a8c\u8bc1\u8d26\u53f7\",\"password\":\"\u7edf\u4e00\u9a8c\u8bc1\u5bc6\u7801\"}'\n# Ctrl+W\u5199\u5165Ctrl+X\u5173\u95ed\uff0c\u8fd0\u884c\u811a\u672c\nrun ./login\n</code></pre>"},{"location":"Content/codes/server/#vpn","title":"\u4e09 VPN(\u4ee3\u7406)","text":""},{"location":"Content/codes/server/#1_2","title":"1 \u57fa\u672c\u4e0b\u8f7d\u4e0e\u4f7f\u7528","text":"<p>\u4f7f\u7528 clash for linux \u4e3a\u4e91\u670d\u52a1\u5668\u63d0\u4f9b\u4ee3\u7406</p> <p>clash for linux github address</p> <ol> <li> <p>\u4e0b\u8f7d <code>clash for linux</code></p> <p>\uff081\uff09\u4ecegithub\u4e0a\u4e0b\u8f7d</p> <pre><code>git clone https://github.com/wanhebin/clash-for-linux.git\n</code></pre> <p>\uff082\uff09\u4ecealiyunpan\u4e0a\u4e0b\u8f7d</p> </li> <li> <p>\u4fee\u6539\u8ba2\u9605\u4ee3\u7406URL</p> <pre><code>cd clash-for-linux\nvim .env\n</code></pre> <p>\u5728\u81ea\u5df1\u8ba2\u9605\u7684\u4ee3\u7406\u7f51\u7ad9\u4e0a\u83b7\u53d6 subscription URL\uff0c\u7c98\u8d34\u5230 <code>.env</code> \u6587\u4ef6\u7684 clash URL\uff0csecret\u4e00\u822c\u4e0d\u7528\u7ba1</p> </li> <li> <p>\u4f7f\u7528 <code>clash for linux</code></p> <pre><code>cd clash-for-linux\nbash start.sh\nsource /etc/profile.d/clash.sh\nproxy_on\n</code></pre> <p>\u6b63\u5e38\u5f39\u7a97\u4e3a\uff1a</p> <pre><code>\u6b63\u5728\u68c0\u6d4b\u8ba2\u9605\u5730\u5740...\nClash\u8ba2\u9605\u5730\u5740\u53ef\u8bbf\u95ee\uff01                                      [  OK  ]\n\n\u6b63\u5728\u4e0b\u8f7dClash\u914d\u7f6e\u6587\u4ef6...\n\u914d\u7f6e\u6587\u4ef6config.yaml\u4e0b\u8f7d\u6210\u529f\uff01                              [  OK  ]\n\n\u6b63\u5728\u542f\u52a8Clash\u670d\u52a1...\n\u670d\u52a1\u542f\u52a8\u6210\u529f\uff01                                             [  OK  ]\n\nClash Dashboard \u8bbf\u95ee\u5730\u5740\uff1ahttp://&lt;ip&gt;:9090/ui\nSecret\uff1axxxxxxxxxxxxx\n\n\u8bf7\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u52a0\u8f7d\u73af\u5883\u53d8\u91cf: source /etc/profile.d/clash.sh\n\n\u8bf7\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u5f00\u542f\u7cfb\u7edf\u4ee3\u7406: proxy_on\n\n\u82e5\u8981\u4e34\u65f6\u5173\u95ed\u7cfb\u7edf\u4ee3\u7406\uff0c\u8bf7\u6267\u884c: proxy_off\n</code></pre> </li> <li> <p>\u68c0\u9a8c\u73af\u5883\u53d8\u91cf\uff0c\u4ee5\u53ca\u662f\u5426\u5f00\u542f\u4ee3\u7406</p> <pre><code>$ env | grep -E 'http_proxy|https_proxy'\nhttp_proxy=http://127.0.0.1:7890 # \u4e0b\u9762\u4e24\u4e2a\u662fcmd\u8f93\u51fa\nhttps_proxy=http://127.0.0.1:7890\n</code></pre> <p>\u68c0\u67e5\u662f\u5426\u4ee3\u7406\u987a\u5229\uff1a</p> <pre><code>wget www.youtube.com\n</code></pre> <p>\u5982\u679c\u4e0d\u662f\u4e00\u76f4\u5728\u8fde\u63a5\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002</p> </li> </ol>"},{"location":"Content/codes/server/#2-ipynb","title":"2 ipynb\u6587\u4ef6\u4f7f\u7528","text":"<p>\u9996\u5148\u5728cmd\u4e2d\u6253\u5f00\u4ee3\u7406 proxy_on\uff0c\u7136\u540e\u5728\u7b2c\u4e00\u4e2a\u5355\u5143\u683c\u52a0\u5165\uff1a</p> <pre><code># \u5728 Jupyter Notebook \u4e2d\u8bbe\u7f6e\u4ee3\u7406\nimport os\n\nos.environ[\"http_proxy\"] = \"http://127.0.0.1:7890\" # \u8fd9\u51e0\u4e2aip\u5730\u5740\u8bbe\u7f6e\u4e3a\u4e0a\u9762 env | grep -E 'http_proxy|https_proxy'\u8f93\u51fa\u7684\u5730\u5740\nos.environ[\"https_proxy\"] = \"http://127.0.0.1:7890\"\nos.environ[\"all_proxy\"] = \"socks5://127.0.0.1:7890\" # \u8fd9\u4e2a\u53ef\u4ee5\u4e0d\u8981\n</code></pre>"},{"location":"Content/codes/server/#3-python","title":"3 python\u6587\u4ef6\u4f7f\u7528","text":"<p>\u9996\u5148\u5728cmd\u4e2d\u6253\u5f00\u4ee3\u7406 proxy_on\uff0c\u7136\u540e\u5728python\u4ee3\u7801\u4e2d\u52a0\u5165\uff1a</p> <pre><code>import requests\n\n# \u914d\u7f6e\u4ee3\u7406\nproxies = {\n    \"http\": \"http://127.0.0.1:7890\",\n    \"https\": \"http://127.0.0.1:7890\",\n}\n\n# \u6d4b\u8bd5\u8bf7\u6c42\ntry:\n    response = requests.get(\"https://www.google.com\", proxies=proxies)\n    print(\"\u4ee3\u7406\u6d4b\u8bd5\u6210\u529f\uff0c\u72b6\u6001\u7801\uff1a\", response.status_code)\nexcept Exception as e:\n    print(\"\u4ee3\u7406\u6d4b\u8bd5\u5931\u8d25\uff1a\", e)\n</code></pre>"},{"location":"Content/codes/server/#_1","title":"\u56db \u6570\u636e","text":""},{"location":"Content/codes/server/#1_3","title":"1 \u4e0a\u4f20\u6570\u636e","text":"<ol> <li>\u516c\u7f51\u7f51\u76d8\uff0c\u76f4\u63a5\u4f7f\u7528\u963f\u91cc\u4e91\u76d8\u3001\u767e\u5ea6\u7f51\u76d8\u4e0a\u4f20\u4e0b\u8f7d\u6570\u636e</li> <li>JupyterLab\u4e0a\u4f20\uff0c\u548c\u7f51\u76d8\u7c7b\u4f3c\uff0c\u4f18\u70b9\u7b80\u5355\uff0c\u4f46\u662f\u53ea\u652f\u6301\u6587\u4ef6\u4e0d\u652f\u6301\u6587\u4ef6\u5939</li> <li>scp\u547d\u4ee4\u652f\u6301\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u4e0a\u4f20\u4e0b\u8f7d\uff0c\u547d\u4ee4\u884c\u6267\u884c</li> <li>FileZilla\u8f6f\u4ef6\u652f\u6301\u6587\u4ef6\u548c\u6587\u4ef6\u5939\uff0c\u62d6\u62c9\u62fd\u5373\u53ef\u4e0a\u4f20\u4e0b\u8f7d\uff0c\u63a8\u8350\u4f7f\u7528</li> <li>XShell\u8f6f\u4ef6\u652f\u6301\u7ba1\u7406SSH\u8fde\u63a5\uff0c\u800c\u4e14\u96c6\u6210\u4e86xftp\uff0c\u652f\u6301\u62d6\u62c9\u62fd\u4e0a\u4f20\u4e0b\u8f7d\u6587\u4ef6\u5939/\u6587\u4ef6\uff0c\u63a8\u8350\u4f7f\u7528</li> </ol>"},{"location":"Content/codes/server/#2_1","title":"2 \u4e0b\u8f7d\u6570\u636e","text":"<ol> <li> <p>JupyterLab\u53ef\u4ee5\u4e0b\u8f7d\u6587\u4ef6\uff0c\u4f46\u662f\u4e0d\u80fd\u4e0b\u8f7d\u6587\u4ef6\u5939\uff0c\u597d\u5904\u662f\u7b80\u5355\u6613\u7528</p> </li> <li> <p>\u516c\u7f51\u7f51\u76d8\uff0c\u76f4\u63a5\u4f7f\u7528\u963f\u91cc\u4e91\u76d8\u3001\u767e\u5ea6\u7f51\u76d8\u4e0a\u4f20\u4e0b\u8f7d\u6570\u636e</p> </li> <li> <p>scp\u547d\u4ee4\u652f\u6301\u6587\u4ef6\u548c\u6587\u4ef6\u5939</p> <p>\u4e0b\u8f7d\u6587\u4ef6\uff1a</p> <pre><code>scp -P 40233 root@connect.westb.seetacloud.com:/root/data/result.txt ./\n</code></pre> <p>\u4e0b\u8f7d\u6587\u4ef6\u5939\uff1a</p> <pre><code>scp -P 40233 -r root@connect.westb.seetacloud.com:/root/data ./data_local_copy\n</code></pre> </li> </ol>"},{"location":"Content/codes/server/#-anaconda","title":"\u4e94 \u73af\u5883\u914d\u7f6e-anaconda","text":""},{"location":"Content/codes/server/#1-anaconda","title":"1 \u5b89\u88c5anaconda","text":"<p>\u5982\u679c\u5f53\u524d\u670d\u52a1\u5668\u6ca1\u6709anaconda\uff0c\u9700\u8981\u4e0b\u8f7d\u3002</p> <ul> <li>x86\u67b6\u6784</li> </ul> <p><code>uname -a</code> \u67e5\u770b\u67b6\u6784\u7c7b\u578b</p> <p>\u4e0b\u8f7d\u538b\u7f29\u5305\uff1a</p> <pre><code>wget https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh\n</code></pre> <p>\u89e3\u538b\uff1a</p> <pre><code>bash Anaconda3-2021.11-Linux-x86_64.sh -b -p /fsa/home/ww_liuzh/anaconda\n</code></pre> <ul> <li>aarch64\u67b6\u6784\uff08\u534e\u4e3a\u670d\u52a1\u5668\uff09</li> </ul> <pre><code>wget -c https://repo.anaconda.com/archive/Anaconda3-2021.05-Linux-aarch64.sh\n</code></pre>"},{"location":"Content/codes/server/#2_2","title":"2 \u8bbe\u7f6e\u5230\u7cfb\u7edf\u73af\u5883\u53d8\u91cf","text":"<p>\u6253\u5f00.bashrc\uff0c\u5e76\u6dfb\u52a0\u8def\u5f84\u5230\u73af\u5883\u53d8\u91cf</p> <pre><code>vim .bashrc\n\n# \u6dfb\u52a0\uff1a\nexport PATH=\"/fsa/home/ww_liuzh/anaconda/bin:$PATH\"\n\n# \u6fc0\u6d3b\uff1a\uff08\u6211\u8001\u662f\u5fd8\u8bb0\uff09\nsource ~/.bashrc\n</code></pre>"},{"location":"Content/codes/server/#3_2","title":"3 \u521b\u5efa\u865a\u62df\u73af\u5883","text":"<pre><code># \u521b\u5efa\uff08\u81ea\u52a8\u7ee7\u627fbase\u6240\u6709\u5305\uff09\nconda create -n env_name python=3.10.14\n# \u521b\u5efa\uff08\u4e0d\u7ee7\u627f\u4efb\u4f55\u5305\uff09\nconda create --name env_name python=3.6.8 --no-default-packages\n# \u6fc0\u6d3b\nconda activate env_name\n# \u9000\u51fa\nconda deactivate\n# \u5217\u51fa\u73af\u5883\nconda list\n# \u5220\u6389\u73af\u5883\nconda env remove -n env_name\n# \u521b\u5efa\u73af\u5883\u6587\u4ef6\uff08conda\u7248\uff0cpip\u540c\u6837\u4f7f\u7528\u3002\u5b9e\u9645\u4e0a\uff0cpip\u4e5f\u4e00\u6837\uff09\nconda env export &gt; environment.yml\n# \u8fd8\u539f\u73af\u5883\nconda env create -f environment.yml\n</code></pre>"},{"location":"Content/codes/server/#4-jupyter-notebook","title":"4 \u5728jupyter notebook\u4e2d\u5f15\u7528\u865a\u62df\u73af\u5883","text":"<p>\u8fd0\u884cjupyter\u7684\u65f6\u5019\uff0c\u5982\u679c\u8981\u5f15\u7528\u67d0\u4e2aconda\u521b\u5efa\u7684\u865a\u62df\uff0c\u9700\u8981\u6dfb\u52a0\u67d0\u4e2a\u865a\u62df\u73af\u5883\u5230Kernel\uff0c\u89c1\uff1a</p> <p>https://zhuanlan.zhihu.com/p/160997771</p> <ol> <li>\u8fdb\u5165\u865a\u62df\u73af\u5883\uff08\u91cd\u8981\uff09</li> <li>\u5b89\u88c5ipykernel <pre><code>#conda\u5b89\u88c5\nconda install -c anaconda ipykernel\n# pip\u5b89\u88c5\u65b9\u6cd5\npip install ipykernel\n</code></pre></li> <li>\u5728ipykernel\u4e2d\u6dfb\u52a0\u865a\u62df\u73af\u5883\u540d\u79f0\uff0c--name\u540e\u9762\u5bf9\u5e94\u8bbe\u7f6e\u7684\u73af\u5883\u540d\u79f0 <pre><code>python -m ipykernel install --user --name=my_env\n</code></pre> <p>\u9644\uff1aipykernel\u76f8\u5173\u64cd\u4f5c 1. \u5217\u51fa\u5df2\u5b89\u88c5\u7684kernel:  <code>jupyter kernelspec list</code>\uff0c\u9644\u5e26\u6bcf\u4e2akernel\u6240\u5728\u8def\u5f84 2. \u67e5\u770b\u5236\u5b9akernel\u8def\u5f84: <code>jupyter kernelspec list | grep my_env</code></p> </li> </ol>"},{"location":"Content/codes/server/#docker","title":"\u516d DOCKER","text":""},{"location":"Content/codes/server/#1_4","title":"1 \u5e94\u7528\u573a\u666f","text":"<p>\u4f7f\u7528Docker\u5728\u8f7b\u91cf\u5e94\u7528\u670d\u52a1\u5668\u4e0a\u642d\u5efa\u5e94\u7528\u670d\u52a1\uff0c\u4f8b\u5982\uff1a</p> <ul> <li> <p>\u642d\u5efa\u4e2a\u4eba\u535a\u5ba2\u6216\u7f51\u7ad9\uff0c\u4f7f\u7528Docker\u53ef\u4ee5\u5feb\u901f\u90e8\u7f72Web\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u786e\u4fdd\u6bcf\u4e2a\u73af\u5883\u7684\u4e00\u81f4\u6027\u3002</p> </li> <li> <p>\u6784\u5efa\u5f00\u53d1\u73af\u5883\uff0cDocker\u53ef\u4ee5\u8f7b\u677e\u5730\u4e3a\u6bcf\u4e2a\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u9694\u79bb\u7684\u73af\u5883\uff0c\u786e\u4fdd\u5f00\u53d1\u5de5\u5177\u548c\u4f9d\u8d56\u9879\u7684\u4e00\u81f4\u6027\u3002</p> </li> <li> <p>\u90e8\u7f72\u6570\u636e\u5e93\u670d\u52a1\uff0c\u4f8b\u5982MySQL\u3001PostgreSQL\u7b49\uff0cDocker\u53ef\u4ee5\u7b80\u5316\u6570\u636e\u5e93\u7684\u5b89\u88c5\u548c\u914d\u7f6e\u8fc7\u7a0b\u3002</p> </li> </ul>"},{"location":"Content/codes/server/#2_3","title":"2 \u64cd\u4f5c","text":"<p><code>docker ps</code>\uff1a\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u3002 <code>docker start/stop</code>\uff1a\u542f\u52a8\u6216\u505c\u6b62\u5bb9\u5668\u3002 <code>docker rm</code>\uff1a\u5220\u9664\u5bb9\u5668\u3002 <code>docker logs</code>\uff1a\u67e5\u770b\u5bb9\u5668\u7684\u65e5\u5fd7\u3002 <code>docker exec</code>\uff1a\u5728\u5bb9\u5668\u5185\u6267\u884c\u547d\u4ee4\u3002  </p>"},{"location":"Content/codes/train/","title":"Starting Model Training from Git Clone","text":"<p>The storage address of 'train.py' is:</p> <pre><code>LHAI/LHAI/modeling/train.py\n</code></pre> <p>After understanding the basic functions of the LHAI source code structure (<code>data</code>, <code>docs</code>, <code>LHAI</code>, <code>saves</code> folders), you can begin training and inference.</p> <p>This page explains how to prepare and start training, beginning with <code>git clone</code>.</p>"},{"location":"Content/codes/train/#1-step-one-git-clone","title":"1. Step One: Git Clone","text":"<p>\u5148\u5b89\u88c5lfs\uff0c\u4ee5\u4e0b\u8f7d\u5927\u6587\u4ef6\uff08\u6570\u636e\uff09\uff1a</p> <pre><code>conda install -c conda-forge git-lfs\ngit lfs install\n</code></pre> <p>Run the following command to clone the code from the <code>Code</code> branch:</p> <pre><code>git clone --branch Code https://github.com/boobyuuuu/LHAI.git\n</code></pre> <p>Navigate to the cloned repository:</p> <pre><code>cd LHAI\n</code></pre>"},{"location":"Content/codes/train/#2-verify-the-project-structure","title":"2. Verify the Project Structure","text":"<p>Ensure the <code>LHAI</code> folder contains the following structure:</p> <pre><code>\u251c\u2500\u2500 LICENSE            &lt;- Open-source license (if applicable)\n\u251c\u2500\u2500 Makefile           &lt;- Utility commands, e.g., `make data` or `make train`\n\u251c\u2500\u2500 README.md          &lt;- Top-level README for developers\n\u251c\u2500\u2500 data               &lt;- Various types of data (recommended format: .npy)\n\u2502   \u251c\u2500\u2500 FERMI\n\u2502   \u251c\u2500\u2500 POISSON\n\u2502   \u251c\u2500\u2500 SIMU\n\u2502   \u2514\u2500\u2500 RAW\n\u251c\u2500\u2500 saves              &lt;- Stores images, loss data, trained models, and results\n\u2502   \u251c\u2500\u2500 FIGURE         &lt;- Training images\n\u2502   \u251c\u2500\u2500 PRE_FIG        &lt;- Inference images\n\u2502   \u251c\u2500\u2500 LOSS           &lt;- Loss data and plots (.npy/.png)\n\u2502   \u2514\u2500\u2500 MODEL          &lt;- Saved trained models\n\u251c\u2500\u2500 docs               &lt;- MkDocs project files (see www.mkdocs.org for details)\n\u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks with standard naming conventions\n\u251c\u2500\u2500 pyproject.toml     &lt;- Project configuration (e.g., Black formatting)\n\u251c\u2500\u2500 references         &lt;- Data dictionaries, manuals, and other resources\n\u251c\u2500\u2500 reports            &lt;- Generated reports (HTML, PDF, LaTeX)\n\u2502   \u2514\u2500\u2500 figures        &lt;- Figures and plots for reports\n\u251c\u2500\u2500 requirements.txt   &lt;- Dependencies file (e.g., via `pip freeze`)\n\u251c\u2500\u2500 setup.cfg          &lt;- flake8 configuration\n\u2514\u2500\u2500 LHAI               &lt;- Source code\n    \u251c\u2500\u2500 config.py               &lt;- Configuration settings\n    \u251c\u2500\u2500 dataset.py              &lt;- Data generation/loading scripts\n    \u251c\u2500\u2500 features.py             &lt;- Feature generation\n    \u251c\u2500\u2500 modeling                &lt;- Model training and inference\n    \u2502   \u251c\u2500\u2500 predict.py          &lt;- Inference code\n    \u2502   \u2514\u2500\u2500 train.py            &lt;- Training code\n    \u251c\u2500\u2500 models                  &lt;- Neural network models\n    \u251c\u2500\u2500 function                &lt;- Utilities for training/inference\n    \u2502   \u251c\u2500\u2500 Dataset.py          &lt;- Dataset loader\n    \u2502   \u251c\u2500\u2500 Log.py              &lt;- Logging utilities\n    \u2502   \u2514\u2500\u2500 Loss.py             &lt;- Loss functions\n    \u2514\u2500\u2500 plots.py                &lt;- Visualization code\n</code></pre>"},{"location":"Content/codes/train/#3-configure-python-environment","title":"3. Configure Python Environment","text":"<p>Ensure your system meets the requirements for machine learning tasks. Recommended environment setup(not matter if close):</p> <ul> <li>PyTorch: 2.1.0</li> <li>Python: 3.10 (Ubuntu 22.04)</li> <li>CUDA: 12.1</li> </ul> <p>Install dependencies using the provided file:</p> <pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"Content/codes/train/#4-prepare-data","title":"4. Prepare Data","text":"<p>Place your data in the appropriate folder under <code>data</code>. Update <code>config.py</code> to point to your dataset.</p> <p>For example, if your Poisson data is named <code>poisson_src_bkg.pkl.npy</code>, its path in <code>config.py</code> should be:</p> <pre><code>\"data\" / \"POISSON\" / \"poisson_src_bkg.pkl.npy\"\n</code></pre>"},{"location":"Content/codes/train/#5-prepare-neural-network-code","title":"5. Prepare Neural Network Code","text":"<p>Place your neural network code in the <code>models</code> folder. Update <code>config.py</code> to reference your model.</p> <p>For example, if your CNN model file is <code>CNN_EXP_0_1.py</code>, its path in <code>config.py</code> should be:</p> <pre><code>\"LHAI\" / \"models\" / \"CNN_EXP_0_1.py\"\n</code></pre>"},{"location":"Content/codes/train/#6-pre-train-for-debugging","title":"6. Pre-train for Debugging","text":"<p>Set a small number of <code>epochs</code> and a large <code>batch_size</code> to ensure the training process runs without issues.</p>"},{"location":"Content/codes/train/#7-start-training","title":"7. Start Training","text":"<p>Method 1: Configure parameters in <code>config.py</code> and run:</p> <pre><code>python train.py\n</code></pre> <p>Method 2: Use the <code>Typer</code> command-line interface for dynamic parameter setting:</p> <pre><code>python train.py --model-name \"GAN\" --exp-name \"MyExperiment\" --data-dir \"./data\" --data-name \"dataset.csv\" --seed 42 --traintype \"supervised\" --frac-train 0.8 --epochs 10 --batch-size 32 --latentdim 128 --lr-max 0.01 --lr-min 0.001\n</code></pre> <p>For details, refer to the Code Section in the LHAI manual.</p> <p>by Zihang Liu</p>"},{"location":"Content/data/","title":"\u6570\u636e\u4ecb\u7ecd\u4e0e\u89c4\u8303\u5316\u6807\u51c6","text":""},{"location":"Content/data/#1","title":"1 \u6570\u636e\u96c6\u547d\u540d\u89c4\u5219\u4e0e\u5b58\u50a8\u65b9\u5f0f","text":"<p>\u6570\u636e\u96c6\u547d\u540d\u89c4\u5219\uff1a</p> <pre><code>[\u6570\u636e\u96c6\u7b80\u5199]_[\u6570\u636e\u6570\u91cf]_[\u56fe\u7247\u5927\u5c0f]_[\u7528\u9014]_[\u9884\u5904\u7406]_[\u7248\u672c].npy\n</code></pre> <p>\u6570\u636e\u96c6\u5b58\u50a8\u65b9\u5f0f\u4ecb\u7ecd\uff1a</p> <p>\u672c\u6570\u636e\u96c6\u4ee5 NumPy \u6570\u7ec4\uff08.npy\uff09\u683c\u5f0f\u5b58\u50a8\uff0c\u6570\u636e\u7ed3\u6784\u4e3a\u56db\u7ef4\u6570\u7ec4 (N, 2, H, W)\uff0c\u5176\u4e2d N \u8868\u793a\u6837\u672c\u6570\u91cf\uff0cH \u548c W \u5206\u522b\u4e3a\u56fe\u50cf\u7684\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\u3002\u6bcf\u4e2a\u6837\u672c\u5305\u542b\u4e00\u5bf9\u56fe\u50cf\uff0c\u6309\u987a\u5e8f\u5b58\u50a8\u4e3a\u6e05\u6670\u56fe\u50cf\u4e0e\u6a21\u7cca\u56fe\u50cf\uff0c\u5373\u7ef4\u5ea6\u7d22\u5f15\u4e3a 0 \u7684\u56fe\u50cf\u4e3a\u6e05\u6670\u56fe\uff08\u5982\u9ad8\u5206\u8fa8\u7387\u6216\u53c2\u8003\u56fe\uff09\uff0c\u7d22\u5f15\u4e3a 1 \u7684\u56fe\u50cf\u4e3a\u5bf9\u5e94\u7684\u6a21\u7cca\u56fe\uff08\u5982\u4f4e\u5206\u8fa8\u7387\u6216\u9000\u5316\u56fe\uff09\u3002</p> <p>\u6570\u636e\u96c6\u547d\u540d\u89c4\u5219\u8bf4\u660e</p> \u5b57\u6bb5\u540d \u793a\u4f8b \u542b\u4e49\u8bf4\u660e <code>\u6570\u636e\u96c6\u7b80\u5199</code> <code>poisson</code> / <code>biosr</code> / <code>simu</code> \u6ce8\u610f\u4e00\u822c\u4e0d\u8981\u6709\u76f8\u540c\u7684\u4e24\u4e2a\u6570\u636e\u96c6\u7b80\u5199\u540d\u79f0 <code>\u6570\u636e\u6570\u91cf</code> <code>7000</code> / <code>12000</code> \u5f53\u524d\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u56fe\u50cf\u5bf9\u6570\u91cf\uff0c\u4fbf\u4e8e\u5feb\u901f\u4e86\u89e3\u6570\u636e\u89c4\u6a21 <code>\u56fe\u7247\u5927\u5c0f</code> <code>64</code> / <code>128</code> \u5355\u5f20\u56fe\u50cf\u7684\u7a7a\u95f4\u5c3a\u5bf8\uff08\u9ad8 \u00d7 \u5bbd\uff09\uff0c\u9002\u7528\u4e8e\u6a21\u578b\u8f93\u5165\u914d\u7f6e <code>\u7528\u9014</code> <code>train</code> / <code>val</code> / <code>orig</code> \u6570\u636e\u7528\u9014\u6807\u8bb0\uff1a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u6216\u539f\u59cb\u6570\u636e\u96c6 <code>\u9884\u5904\u7406</code> <code>norm</code> / <code>crop</code> / <code>none</code> \u6570\u636e\u662f\u5426\u7ecf\u8fc7\u5f52\u4e00\u5316\u3001\u88c1\u526a\u7b49\u9884\u5904\u7406\u64cd\u4f5c\uff0c\u82e5\u65e0\u9884\u5904\u7406\u53ef\u7701\u7565 <code>\u7248\u672c</code> <code>v1</code> / <code>v2.1</code> / <code>v3</code> \u6570\u636e\u96c6\u7248\u672c\u53f7\uff0c\u652f\u6301\u8fed\u4ee3\u7ef4\u62a4\u4e0e\u66f4\u65b0\u8ffd\u8e2a"},{"location":"Content/data/#2-lhai","title":"2 LHAI\u6570\u636e\u96c6\u4e0e\u4ecb\u7ecd","text":"<p>\u539f\u59cb\u6570\u636e\u96c6\uff1a</p> \u6587\u4ef6\u540d \u542b\u4e49\u8bf4\u660e \u521b\u5efa\u65f6\u95f4 <code>miragesearch_4200_140_orig.npy</code> \u8001\u5e08\u90a3\u8fb9\u6700\u65b0\u7684\u4e00\u7ec4\u539f\u59cb\u6a21\u62df\u6570\u636e <p>\u8bad\u7ec3\u96c6\uff08\u4ee5\u521b\u5efa\u65f6\u95f4\u6392\u5e8f\uff09\uff1a</p> \u6587\u4ef6\u540d \u542b\u4e49\u8bf4\u660e \u521b\u5efa\u65f6\u95f4 <code>biosr_41190_64_train_crop.npy</code> \u663e\u5fae\u56fe\u50cf\u6765\u6e90\uff0c\u7ea4\u6bdb <code>cilium_6512_64_train.npy</code> \u663e\u5fae\u56fe\u50cf\u6765\u6e90\uff0c\u8367\u5149\u5c0f\u7403 <code>cube_1504_64_train.npy</code> \u663e\u5fae\u56fe\u50cf\u6765\u6e902\uff0c\u8367\u5149\u5c0f\u7403 <code>pysted_5204_64_train.npy</code> \u663e\u5fae\u56fe\u50cf\u6765\u6e90\uff0c\u91cf\u5b50\u70b9 <code>tangxiao_7000_64_train.npy</code> \u5510\u6653\u6a21\u62df\u6570\u636e\u96c6 <code>halos_1200_64_train_crop.npy</code> \u4ea4\u5927\u6a21\u62df\u6570\u636e\u96c6(\u5df2\u88c1\u526a) <code>xingwei_10000_64_train_v1.npy</code> \u661f\u7ef4\u6a21\u62df4\u8868\u5f81\u6570\u636e\u96c6 <code>polygon_2000_64_train_cluster.npy</code> \u6b23\u96e8\u6a21\u62df\u6570\u636e\u96c61 <code>polygon_2000_64_train.npy</code> \u6b23\u96e8\u6a21\u62df\u6570\u636e\u96c62 <p>\u6d4b\u8bd5\u96c6\uff1a</p> \u6587\u4ef6\u540d \u542b\u4e49\u8bf4\u660e \u521b\u5efa\u65f6\u95f4 <code>nhit100_1_64_val.npy</code> \u4e00\u5f202\u6e90\u7684\u7b80\u5355\u6d4b\u8bd5\u56fe\u7247\uff0cE=100 <code>nhit2000_1_64_val.npy</code> \u4e00\u5f202\u6e90\u7684\u7b80\u5355\u6d4b\u8bd5\u56fe\u7247\uff0cE=2000"},{"location":"Content/data/#3","title":"3 \u6570\u636e\u96c6\u76f8\u5173\u4ee3\u7801","text":""},{"location":"Content/data/#lhai-dataset","title":"LHAI Dataset\u6a21\u5757","text":"<p>\u5f52\u4e00\u5316\u4e3a[0,1]\uff1a</p> <pre><code>import torch\nfrom tifffile import tifffile\nimport matplotlib.pyplot as plt\nimport os\nimport numpy as np\nfrom PIL import Image\nfrom torch.utils.data import Dataset\nimport torchvision.transforms as transforms\nfrom torch.utils.data import DataLoader,random_split, ConcatDataset\n\nclass ImageDataset(Dataset):\n    def __init__(self, num_to_learn, path_data,inverse=False):\n        self.transform = transforms.Compose([\n            transforms.ToTensor(),\n        ])\n        self.data = []\n\n        if not os.path.exists(path_data):\n            raise FileNotFoundError(\"Blurry or Original data file not found.\")\n        datas = np.load(path_data,allow_pickle=True)#.astype(np.object)\n        blurry_datas = np.stack(datas[:,1])\n        original_datas = np.stack(datas[:,0])\n\n        if inverse == False:\n            idx_beg = 0;\n            idx_end = num_to_learn;\n        else:\n            idx_beg = blurry_datas.shape[0]-num_to_learn;\n            idx_end = blurry_datas.shape[0];\n\n        for i in range(idx_beg,idx_end):\n            blurry_data = blurry_datas[i]\n            original_data = original_datas[i]\n\n            img_blurry = (blurry_data - blurry_data.min()) / (blurry_data.max() - blurry_data.min())\n            img_original = (original_data - original_data.min()) / (original_data.max() - original_data.min())\n\n            img_blurry = Image.fromarray(img_blurry)\n            img_original = Image.fromarray(img_original)\n\n            img_blurry = self.transform(img_blurry)\n            img_original = self.transform(img_original)\n\n            self.data.append((img_blurry, img_original))\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, index):\n        return self.data[index]\n</code></pre> <p>\u5f52\u4e00\u5316\u4e3a[-1,1]\uff1a</p> <pre><code>import torch\nfrom tifffile import tifffile\nimport matplotlib.pyplot as plt\nimport os\nimport numpy as np\nfrom PIL import Image\nfrom torch.utils.data import Dataset\nimport torchvision.transforms as transforms\nfrom torch.utils.data import DataLoader,random_split, ConcatDataset\n\nclass ImageDataset(Dataset):\n    def __init__(self, num_to_learn, path_data,inverse=False):\n        self.transform = transforms.Compose([\n            transforms.ToTensor(),\n        ])\n        self.data = []\n\n        if not os.path.exists(path_data):\n            raise FileNotFoundError(\"Blurry or Original data file not found.\")\n        datas = np.load(path_data,allow_pickle=True)#.astype(np.object)\n        blurry_datas = np.stack(datas[:,1])\n        original_datas = np.stack(datas[:,0])\n\n        if inverse == False:\n            idx_beg = 0;\n            idx_end = num_to_learn;\n        else:\n            idx_beg = blurry_datas.shape[0]-num_to_learn;\n            idx_end = blurry_datas.shape[0];\n\n        for i in range(idx_beg,idx_end):\n            blurry_data = blurry_datas[i]\n            original_data = original_datas[i]\n\n            img_blurry = 2 * (blurry_data - blurry_data.min()) / (blurry_data.max() - blurry_data.min()) - 1\n            img_original = 2 * (original_data - original_data.min()) / (original_data.max() - original_data.min()) - 1\n\n            #img_blurry = blurry_data/blurry_data.max()\n            #img_original = original_data/original_data.max()\n\n            img_blurry = Image.fromarray(img_blurry)\n            img_original = Image.fromarray(img_original)\n\n            img_blurry = self.transform(img_blurry)\n            img_original = self.transform(img_original)\n\n            self.data.append((img_blurry, img_original))\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, index):\n        return self.data[index]\n</code></pre>"},{"location":"Content/data/#_2","title":"\u6570\u636e\u96c6\u89c4\u8303\u5316\u9884\u5904\u7406\u3001\u68c0\u67e5\u6a21\u5757","text":"<p>\u89c4\u8303\u5316\u9884\u5904\u7406\u6d41\u7a0b\uff1a\u56fe\u50cf\u5c3a\u5bf8\u7edf\u4e00\u5316 - \u6570\u636e\u96c6\u7070\u5ea6\u5316 - \u5f52\u4e00\u5316\u5904\u7406 - \u6570\u636e\u96c6\u6269\u5f20 - \u6570\u636e\u589e\u5f3a - \u91cd\u4f30\u6570\u636e/\u4f4e\u4fe1\u606f\u6570\u636e\u6e05\u7406</p> <p>\u68c0\u67e5\u6a21\u5757\uff1a\uff08\u6682\u5b9a\uff09</p>"},{"location":"Content/data/#_3","title":"\u5176\u4ed6\u4ee3\u7801\u9644\u4ef6","text":"<p>\u5c55\u793a\u6570\u636e\u96c6\u5927\u5c0f\u3001imshow\u90e8\u5206\u6570\u636e\uff1aimshow \u70b9\u51fb\u4e0b\u8f7d</p> <p>\u7531jpg\u7b49\u4e3b\u6d41\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u8f6c\u6362\u4e3alhai\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\uff1a\uff08\u4ee3\u7801\u4e22\u5931\uff09</p> <p>\u5c06\u4e24\u4e2alhai\u6570\u636e\u96c6\u968f\u673a\u6df7\u5408\u8d77\u6765\uff1a\uff08\u4ee3\u7801\u4e22\u5931\uff09</p> <p>\u5c06\u5927\u4e8e64\u5c3a\u5bf8\u7684\u4ee3\u7801\u88c1\u526a\u4e3a64\uff1a\u4ee3\u7801\u4e22\u5931</p>"},{"location":"Content/data/simulation/","title":"Simulation","text":""},{"location":"Content/data/simulation/#introduction","title":"Introduction","text":"<p>For supervised training, we need two groups of data -- the intensity map and the counts map. </p> <p>The former is the target map, which refers to intrinsic flux distribution of the gamma-ray source. With the machine learning model, we aim at recover this intensity map from the observed counts map.</p> <p>The latter is the spacial event distribution detected by instruments, therefore affected by system error and random fluctuation. Both WCDA and KM2A have the problem of misclassifying cosmic ray events as gamma-ray events, thus there is also cosmic ray background. As a result of the direction reconstruction error, the morphology of gamma-ray source is affected by the spacial uncertainty and blurred with the point spread function (PSF). </p> <p>Therefore, in order to simulate the instrument response, we need to consider the gamma-ray background, the source intensity, localization uncertainty and also the cosmic ray background. At present we did not add the CR background. Instead, we assume the sample are pure gamma-ray events. Also, a practical method to imitate the localization error is to adopt a PSF, which is yield from atmospheric air shower Monte Carlo simulations. </p>"},{"location":"Content/data/simulation/#gamma-ray-background","title":"Gamma-ray Background","text":""},{"location":"Content/data/simulation/#diffusive-gamma-ray-background-model","title":"Diffusive Gamma-Ray Background Model","text":"<p>The diffusive gamma-ray background model published by Fermi LAT is derived from multi-wavelength observation of the diffusive gas in the galaxy. The original background data is saved in FITS, binned in 28 energy bins. We convert it into HEALPix data using Python package healpy. Now the angular resolution of the data (pixel width) is approximately \\(0.1\\deg\\). </p> <p></p> <p>By selecting different region on the all-sky map, we get the intensity map of the gamma-ray background. The selected pixels are then interpolated to the cartesian coordinate with pixel width \\(\\delta x = 0.1\\deg\\). For convenience, we select \\(6.5\\times 6.5\\deg\\) region, which result in \\(64\\times 64\\) array. </p>"},{"location":"Content/data/simulation/#point-spread-function","title":"Point Spread Function","text":"<p>The PSF assumption is a rough method and serves only for the preliminary attempts. By setting a symmetric PSF, we have assumed each events have the same localization error. In reality, this is not the case. The PSF is declination and energy dependent, and not necessarily symmetric.</p> <p>With a 2D convolution with PSF on the selected intensity map, we get the blurred sky map.</p> <p></p>"},{"location":"Content/data/simulation/#random-fluctuation","title":"Random Fluctuation","text":"<p>Now the sky map we have is still some kinds of blurred intensity map, as value of each pixel reflects the expectation value of counts number. Photos could be regarded as produced by random Poisson process. We did some sampling with the pixel value as parameter of a Poisson distribution to simulate the random photon fluctuation. The strength of fluctuation depends on observation duration. Longer exposure time means higher signal-to-noise ratio and better imaging quality and vice versa. </p> <p>by Xingwei Gong</p>"},{"location":"Content/data/tangxiao/","title":"Fermi\u6a21\u62df\u6570\u636e","text":""},{"location":"Content/data/tangxiao/#_1","title":"\u6570\u636e\u4ea7\u751f","text":""},{"location":"Content/data/tangxiao/#_2","title":"\u6570\u636e\u9884\u5904\u7406","text":""},{"location":"Content/data/tangxiao/#_3","title":"\u6570\u636e\u5b58\u50a8\u4e0e\u7ba1\u7406","text":""},{"location":"Content/data/xingwei/","title":"Fermi\u5168\u5929\u56fe\u6570\u636e","text":""},{"location":"Content/data/xingwei/#_1","title":"\u6570\u636e\u4ea7\u751f","text":""},{"location":"Content/data/xingwei/#_2","title":"\u6570\u636e\u9884\u5904\u7406","text":""},{"location":"Content/data/xingwei/#_3","title":"\u6570\u636e\u5b58\u50a8\u4e0e\u7ba1\u7406","text":""},{"location":"Content/eval/","title":"\u8bc4\u4f30\u4ecb\u7ecd\u4e0e\u89c4\u8303\u5316\u6807\u51c6","text":"<p>\u4e3a\u4e86\u4fdd\u8bc1\u8bc4\u4f30\u7684\u5168\u9762\uff0c\u5206\u4e3a\u51e0\u7c7b\u8bc4\u4f30\uff1a</p>"},{"location":"Content/eval/cnn/","title":"CNN \u7c7b\u795e\u7ecf\u7f51\u7edc","text":"<ol> <li> <p>\u770b\u4e00\u4e0beval\u7684input\uff0c\u6bcf\u4e00\u6b21\u662f\u5426\u90fd\u76f8\u540c\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u67090.1\u5de6\u53f3\u7684\u6ce2\u52a8</p> </li> <li> <p>\u5bf9\u540c\u4e00\u4e2a\u6a21\u578b\u7684\u540c\u4e00\u4e2a\u53c2\u6570\uff0ceval\u4ea7\u751f0.1\u7684\u6ce2\u52a8\u662f\u6b63\u5e38\u73b0\u8c61\u3002</p> </li> </ol>"},{"location":"Content/eval/cnn/#default","title":"DEFAULT \u53c2\u6570","text":"<p>\u5b9e\u9a8c\u53c2\u6570\uff1a</p> <pre><code>- \ud83d\udce6 \u5b9e\u9a8c\u540d\u79f0                : EXP01\n- \ud83e\udde0 \u6a21\u578b\u540d\u79f0                : CNN\n- \ud83d\udcc1 \u6a21\u578b\u811a\u672c\u8def\u5f84            : /root/LHAI/codes/models/CNN.py\n- \ud83d\udcc2 \u6570\u636e\u6587\u4ef6\u8def\u5f84            : /root/LHAI/data/Train/xingwei_10000_64_train_v1.npy\n- \ud83d\udcca \u6570\u636e\u96c6\u5207\u5206\u6bd4\u4f8b          : \u8bad\u7ec3\u96c6 98.0% / \u6d4b\u8bd5\u96c6 2.0%\n- \ud83d\udcc8 \u6837\u672c\u603b\u6570                : 10000\n- \ud83d\udd01 \u603b\u8bad\u7ec3\u8f6e\u6570\uff08Epochs\uff09     : 400\n- \ud83d\udce6 \u6279\u6b21\u5927\u5c0f\uff08Batch Size\uff09  : 32\n- \ud83c\udf31 \u968f\u673a\u79cd\u5b50\uff08Seed\uff09        : 0\n- \ud83d\udd22 \u6570\u636e\u5f52\u4e00\u5316\u8303\u56f4          : 1.0\n- \ud83d\udcc9 \u5b66\u4e60\u7387\u7b56\u7565\uff08Cosine\uff09    : \u6700\u5c0f = 5.0e-06, \u6700\u5927 = 5.0e-04\n- \ud83e\uddea \u635f\u5931\u51fd\u6570\uff08Loss\uff09        : msejsloss\n- \ud83d\udee0\ufe0f \u4f18\u5316\u5668\uff08Optimizer\uff09     : AdamW\n- \ud83d\udcbb \u4f7f\u7528\u8bbe\u5907\uff08Device\uff09      : cuda:0\uff08NVIDIA GeForce RTX 4090\uff09\n- \ud83d\udcc1 log\u4fdd\u5b58\u5730\u5740             : /root/LHAI/saves/TRAIN/LOGS/trainlog_CNN\n</code></pre> <p></p> <p></p> <p></p> <p>\u5e73\u5747\u6570\u636e\uff1a</p> <p></p>"},{"location":"Content/eval/cnn/#dataprocess","title":"dataprocess \u53c2\u6570","text":"<pre><code>Average PSNR (SR): 18.2133\nAverage PSNR (Input): 13.2108\nAverage SSIM (SR): 0.2278\nAverage SSIM (Input): 0.2459\nAverage MS-SSIM (SR): 0.5334\nAverage MS-SSIM (Input): 0.5216\nAverage MAE (SR): 0.0427\nAverage MAE (Input): 0.1312\nAverage MSE (SR): 0.0157\nAverage MSE (Input): 0.0485\nAverage NRMSE (SR): 0.1241\nAverage NRMSE (Input): 0.2193\n</code></pre>"},{"location":"Content/eval/cnn/#default-model-400epochs","title":"DEFAULT Model - 400epochs","text":"<p>\u5b9e\u9a8c\u53c2\u6570\uff1a</p> <p></p> <p>\u8bc4\u4f30\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"Content/eval/cnn/#carn_v1","title":"CARN_v1","text":"<p>\u5b9e\u9a8c\u53c2\u6570\uff1a</p> <p></p> <p>\u8bc4\u4f30\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"Content/eval/cnn/#carn_v2","title":"CARN_v2","text":"<p>\u5b9e\u9a8c\u53c2\u6570\uff1a</p> <p></p> <p>\u8bc4\u4f30\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"Content/eval/cnn/#drcn","title":"DRCN","text":"<p>\u5b9e\u9a8c\u53c2\u6570\uff1a</p> <p></p> <p>\u8bc4\u4f30\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"Content/eval/cnn/#edsr","title":"EDSR","text":"<p>\u5b9e\u9a8c\u53c2\u6570\uff1a</p> <p></p> <p>\u8bc4\u4f30\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"Content/eval/cnn/#srcnn_transformer","title":"SRCNN_Transformer","text":"<p>\u5b9e\u9a8c\u53c2\u6570\uff1a</p> <p>400epochs</p> <p></p> <p>\u8bc4\u4f30\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"Content/eval/cnn/#swinir_lhai","title":"SwinIR_LHAI","text":"<p>\u5b9e\u9a8c\u53c2\u6570\uff1a</p> <p>400epochs</p> <p></p> <p>\u8bc4\u4f30\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"Content/eval/cnn/#espcn","title":"ESPCN","text":"<p>\u5b9e\u9a8c\u53c2\u6570\uff1a</p> <p></p> <p>\u8bc4\u4f30\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"Content/model/","title":"\u6a21\u578b\u4ecb\u7ecd\u4e0e\u89c4\u8303\u5316\u6807\u51c6","text":""},{"location":"Content/model/#_2","title":"\u6a21\u578b\u53d1\u5c55\u8109\u7edc","text":"<p>\u672c\u7bc7\u4ecb\u7ecd\u8d85\u5206\u8fa8\u5e38\u7528\u7684\u795e\u7ecf\u7f51\u7edc\u6280\u672f\uff0c\u5305\u62ec\uff1a</p> <ol> <li> <p><code>CNN</code> \u7c7b\u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> <p><code>VAE</code> \u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> <p><code>ResNet</code> \u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> <p><code>U-Net</code> \u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p><code>GAN</code> \u7c7b\u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p><code>Transformer</code> \u7c7b\u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p><code>DIFFUSION</code> \u7c7b\u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p>\u7279\u6b8a\u67b6\u6784\u6a21\u578b</p> </li> </ol> <pre><code>graph TD\n    %% ===== \u57fa\u7840\u67b6\u6784 =====\n    INTERP[1970s+ \u63d2\u503c\u65b9\u6cd5&lt;br&gt;\u53cc\u7ebf\u6027/\u53cc\u4e09\u6b21] --&gt; SPARSE[2000s \u7a00\u758f\u8868\u793a]\n    SPARSE --&gt; NEIGHBOR[2010 ANR&lt;br&gt;\u90bb\u57df\u5d4c\u5165\u56de\u5f52]\n\n    %% ===== CNN\u4e3b\u7ebf =====\n    SPARSE --&gt; SRCNN[2014 SRCNN&lt;br&gt;\u9996\u4e2a\u7aef\u5230\u7aefCNN]\n    SRCNN --&gt; VDSR[2016 VDSR&lt;br&gt;\u6df1\u5ea6\u6b8b\u5dee\u5b66\u4e60]\n    VDSR --&gt; DRCN[2016 DRCN&lt;br&gt;\u9012\u5f52\u6b8b\u5dee]\n    VDSR --&gt; EDSR[2017 EDSR&lt;br&gt;\u53bbBN\u7684\u6df1\u6b8b\u5dee]\n    EDSR --&gt; RCAN[2018 RCAN&lt;br&gt;\u901a\u9053\u6ce8\u610f\u529b]\n    RCAN --&gt; SAN[2019 SAN&lt;br&gt;\u4e8c\u9636\u6ce8\u610f\u529b]\n\n    %% ===== \u8f7b\u91cf\u5316\u5206\u652f =====\n    SRCNN --&gt; FSRCNN[2016 FSRCNN&lt;br&gt;\u52a0\u901f\u4e0a\u91c7\u6837]\n    FSRCNN --&gt; CARN[2018 CARN&lt;br&gt;\u7ea7\u8054\u6b8b\u5dee]\n    CARN --&gt; IMDN[2019 IMDN&lt;br&gt;\u4fe1\u606f\u84b8\u998f]\n\n    %% ===== GAN\u4e3b\u7ebf =====\n    SRCNN --&gt; SRGAN[2017 SRGAN&lt;br&gt;\u611f\u77e5\u8d28\u91cf\u7a81\u7834]\n    SRGAN --&gt; ESRGAN[2018 ESRGAN&lt;br&gt;\u76f8\u5bf9\u5224\u522b\u5668]\n    ESRGAN --&gt; BSRGAN[2021 BSRGAN&lt;br&gt;\u76f2\u8d85\u5206]\n    ESRGAN --&gt; SwinGAN[2022 SwinGAN&lt;br&gt;Transformer\u5224\u522b\u5668]\n\n    %% ===== \u6ce8\u610f\u529b\u6f14\u8fdb =====\n    RCAN --&gt; HAN[2020 HAN&lt;br&gt;\u6df7\u5408\u6ce8\u610f\u529b]\n    SAN --&gt; NAF[2022 NAF&lt;br&gt;\u65e0\u6fc0\u6d3b\u7f51\u7edc]\n\n    %% ===== Transformer\u4e3b\u7ebf =====\n    HAN --&gt; TTSR[2020 TTSR&lt;br&gt;\u9996\u7bc7\u8d85\u5206Transformer]\n    TTSR --&gt; SwinIR[2021 SwinIR&lt;br&gt;\u7a97\u53e3\u6ce8\u610f\u529b]\n    SwinIR --&gt; EDT[2022 EDT&lt;br&gt;\u6269\u6563\u589e\u5f3a]\n\n    %% ===== Diffusion\u4e3b\u7ebf =====\n    DDPM[2020 DDPM&lt;br&gt;\u53bb\u566a\u6269\u6563\u5960\u57fa] --&gt; SR3[2021 SR3&lt;br&gt;\u9996\u7bc7\u6269\u6563\u8d85\u5206]\n    SR3 --&gt; LDM[2022 LDM&lt;br&gt;\u6f5c\u5728\u7a7a\u95f4\u6269\u6563]\n    LDM --&gt; DiffIR[2023 DiffIR&lt;br&gt;Transformer\u5f15\u5bfc]\n\n    %% ===== \u5176\u4ed6\u72ec\u7279\u67b6\u6784 =====\n    SPARSE --&gt; KRR[2012 KRR&lt;br&gt;\u6838\u5cad\u56de\u5f52]\n    NEIGHBOR --&gt; APlus[2014 A+&lt;br&gt;\u951a\u70b9\u90bb\u57df\u56de\u5f52]\n    APlus --&gt; SelfEx[2015 SelfEx&lt;br&gt;\u81ea\u76f8\u4f3c\u6027]\n\n    %% ===== \u795e\u7ecf\u67b6\u6784\u641c\u7d22 =====\n    EDSR --&gt; SRNAS[2019 SRNAS&lt;br&gt;\u795e\u7ecf\u67b6\u6784\u641c\u7d22]\n    SRNAS --&gt; FALSR[2020 FALSR&lt;br&gt;\u8f7b\u91cf\u641c\u7d22]\n\n    %% ===== \u8de8\u6280\u672f\u878d\u5408 =====\n    SwinIR --&gt; Restormer[2022 Restormer&lt;br&gt;\u591a\u5c3a\u5ea6Transformer]\n    DiffIR --&gt; DiffBIR[2024 DiffBIR&lt;br&gt;\u76f2\u590d\u539f\u6269\u6563]\n    SwinGAN --&gt; DiffGAN[2023 DiffGAN&lt;br&gt;\u6269\u6563\u5f15\u5bfc\u5bf9\u6297]\n\n    %% ===== \u4ea4\u53c9\u8fde\u63a5 =====\n    SelfEx --&gt; EDSR\n    ESRGAN --&gt; RCAN\n    LDM --&gt; SwinIR\n    NAF --&gt; Restormer\n    FALSR --&gt; CARN\n    KRR --&gt; SRCNN</code></pre> <pre><code>gantt\n    title \u8d85\u5206\u8fa8\u7387PSNR\u6f14\u8fdb (DIV2K \u00d74)\n    dateFormat  YYYY\n    axisFormat  %Y\n\n    section \u5173\u952e\u7a81\u7834\n    Bicubic : 2010, 28.42\n    SC-SR : 2012, 29.15\n    SRCNN : 2014, 30.09\n    VDSR : 2016, 31.35\n    EDSR : 2017, 32.46\n    RCAN : 2018, 32.63\n    SwinIR : 2021, 32.92\n    DiffIR : 2023, 33.41</code></pre> <pre><code>graph LR\n    A[CNN&lt;br&gt;\u5c40\u90e8\u7279\u5f81] --&gt; D[\u6df7\u5408\u67b6\u6784]\n    B[Transformer&lt;br&gt;\u5168\u5c40\u5efa\u6a21] --&gt; D\n    C[Diffusion&lt;br&gt;\u6982\u7387\u751f\u6210] --&gt; D\n    D --&gt; E1[EfficientSR&lt;br&gt;\u79fb\u52a8\u7aef]\n    D --&gt; E2[Text2SR&lt;br&gt;\u8bed\u4e49\u5f15\u5bfc]\n    D --&gt; E3[3D-SR&lt;br&gt;\u4f53\u79ef\u91cd\u5efa]\n\n    style D fill:#f9f,stroke:#333</code></pre>"},{"location":"Content/model/#lhai","title":"LHAI\u6a21\u578b\u547d\u540d\u89c4\u8303","text":"<p>\u6a21\u578b\u547d\u540d\u89c4\u5219\u683c\u5f0f:</p> <pre><code>[\u6a21\u578b\u67b6\u6784]_[\u5b9e\u9a8c\u4ee3\u53f7]_[\u8bad\u7ec3\u8f6e\u6570]epo_[\u6279\u5927\u5c0f]bth_[\u6570\u636e\u96c6\u7b80\u5199]_[\u7248\u672c].pth\n</code></pre> <p>\u5b57\u6bb5\u8bf4\u660e:</p> \u5b57\u6bb5\u540d \u793a\u4f8b \u542b\u4e49\u8bf4\u660e \u6a21\u578b\u67b6\u6784 <code>CNN</code> / <code>DIFFUSION</code> / <code>ResNet</code> \u7f51\u7edc\u6a21\u578b\u540d\u79f0\uff0c\u4fbf\u4e8e\u5feb\u901f\u8bc6\u522b\u6240\u7528\u67b6\u6784 \u5b9e\u9a8c\u4ee3\u53f7 <code>EXP01</code> \u8bad\u7ec3\u5b9e\u9a8c\u7684\u7f16\u53f7\u6216\u6807\u7b7e\uff0c\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u5b9e\u9a8c \u8bad\u7ec3\u8f6e\u6570 <code>400epo</code> \u8bad\u7ec3\u7684 epoch \u6570\uff0c\u4fbf\u4e8e\u8bc6\u522b\u8bad\u7ec3\u65f6\u957f \u6279\u5927\u5c0f <code>32bth</code> \u6279\u6b21\u5927\u5c0f\uff0c\u8868\u793a\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3\u4e2d\u4f7f\u7528\u7684\u6837\u672c\u6570\u91cf \u6570\u636e\u96c6\u7b80\u5199 <code>poisson</code> \u8bad\u7ec3\u6570\u636e\u96c6\u6587\u4ef6\u540d\u7b80\u5199\uff0c\u4fbf\u4e8e\u5feb\u901f\u5173\u8054\u6570\u636e\u96c6 \u7248\u672c\u53f7 <code>v1</code> / <code>v2</code> \u6a21\u578b\u7248\u672c\u53f7\uff0c\u4fbf\u4e8e\u6a21\u578b\u8fed\u4ee3\u66f4\u65b0\u53ca\u7248\u672c\u7ba1\u7406\uff08\u53ef\u7701\u7565\uff09 <p>\u793a\u4f8b:</p> <pre><code>CNN_EXP01_400epo_32bth_poisson.pth\n</code></pre> <p>\u6a21\u578b\u5b58\u50a8\u65b9\u5f0f\u4ecb\u7ecd:</p> <p>\u672c\u6a21\u578b\u4ee5 PyTorch \u7684 <code>.pth</code> \u683c\u5f0f\u5b58\u50a8\uff0c\u5305\u542b\u8bad\u7ec3\u597d\u7684\u6743\u91cd\u53c2\u6570\uff0c\u547d\u540d\u89c4\u5219\u53cd\u6620\u4e86\u6a21\u578b\u7684\u67b6\u6784\u3001\u8bad\u7ec3\u914d\u7f6e\u4e0e\u5bf9\u5e94\u6570\u636e\u96c6\uff0c\u65b9\u4fbf\u7248\u672c\u7ba1\u7406\u548c\u5feb\u901f\u5b9a\u4f4d\u3002</p> <p>\u5728\u4ee3\u7801\u914d\u7f6e\u4e2d\u7684\u89c4\u8303\u5199\u6cd5\u793a\u4f8b:</p> <pre><code>TRAIN_EXP_NAME        = \"EXP_0_1\"\nTRAIN_MODEL_NAME      = \"CNN\"\nTRAIN_MODEL_PY        = PROJ_ROOT / \"LHAI\" / \"models\" / f\"{TRAIN_MODEL_NAME}_{TRAIN_EXP_NAME}.py\"\nTRAIN_DATA_DIR        = PROJ_ROOT / \"data\" / \"POISSON\"\nTRAIN_DATA_NAME       = \"poisson_src_bkg.pkl.npy\"\nTRAIN_DATA_PATH       = TRAIN_DATA_DIR / TRAIN_DATA_NAME\nTRAIN_SEED            = 0\nTRAIN_TYPE            = \"poissonsrc+bkg_highresorig\"\nTRAIN_FRAC            = 0.8\nTRAIN_EPOCHS          = 400\nTRAIN_BATCH_SIZE      = 32\nTRAIN_LATENT_DIM      = 64\nTRAIN_LR_MAX          = 5e-4\nTRAIN_LR_MIN          = 5e-6\n</code></pre>"},{"location":"Content/model/#further-work","title":"Further Work","text":""},{"location":"Content/model/#multimodal-sr","title":"\u591a\u6a21\u6001\u8d85\u5206\u8fa8\u7387 Multimodal SR","text":"<p>\u591a\u5e27/\u591a\u6a21\u6001\u8d85\u5206\u5df2\u53d1\u5c55\u6210\u72ec\u7acb\u4e8e\u4f20\u7edf\u5355\u5e27SR\u7684\u6280\u672f\u4f53\u7cfb\uff0c\u5176\u6838\u5fc3\u4ef7\u503c\u5728\u4e8e\u7a81\u7834\u5355\u5e27\u7684\u4fe1\u606f\u5c40\u9650\uff0c\u901a\u8fc7\u65f6\u7a7a\u534f\u540c\u5b9e\u73b0\u8d28\u7684\u98de\u8dc3\u3002\u8be5\u9886\u57df\u8bba\u6587\u5e74\u589e\u957f\u91cf\u8fbe300%\uff0c\u6210\u4e3aCVPR/ICCV\u7684\u70ed\u70b9\u65b9\u5411\u3002</p> <ol> <li> <p>\u6280\u672f\u672c\u8d28</p> <pre><code>graph LR\n    A[\u56fe\u50cf] --&gt; C[\u878d\u5408\u6a21\u5757]\n    B[\u5176\u4ed6\u6a21\u6001] --&gt; C\n    C --&gt; D[\u589e\u5f3a\u8f93\u51fa]\n\n    subgraph \u591a\u6a21\u6001\u878d\u5408\n    C --&gt; Early[\u65e9\u671f\u878d\u5408&lt;br&gt;\u8f93\u5165\u7ea7\u62fc\u63a5]\n    C --&gt; Late[\u665a\u671f\u878d\u5408&lt;br&gt;\u7279\u5f81\u7ea7\u4ea4\u4e92]\n    C --&gt; Cross[\u8de8\u6a21\u6001\u6ce8\u610f\u529b]\n    end</code></pre> </li> <li> <p>\u5178\u578b\u8f93\u5165\u7ec4\u5408\u53ca\u6548\u679c</p> \u9644\u52a0\u6a21\u6001 \u4ee3\u8868\u6a21\u578b \u6027\u80fd\u589e\u76ca \u9002\u7528\u573a\u666f \u878d\u5408\u65b9\u5f0f \u6df1\u5ea6\u56fe DepthSR +1.8dB 3D\u573a\u666f\u91cd\u5efa \u8de8\u6a21\u6001\u6ce8\u610f\u529b \u4e8b\u4ef6\u76f8\u673a EventSR +2.1dB \u9ad8\u901f\u8fd0\u52a8\u573a\u666f \u65f6\u7a7a\u95e8\u63a7\u878d\u5408 \u6587\u672c\u63cf\u8ff0 Text2SR +1.3dB \u8bed\u4e49\u5f15\u5bfc\u589e\u5f3a CLIP\u7279\u5f81\u5bf9\u9f50 \u7ea2\u5916\u56fe\u50cf Multispectral +2.5dB \u4f4e\u5149\u7167/\u6076\u52a3\u5929\u6c14 \u53cc\u6d41\u7f16\u7801\u5668 \u96f7\u8fbe\u70b9\u4e91 RadarSR +3.2dB \u81ea\u52a8\u9a7e\u9a76\u611f\u77e5 \u56fe\u795e\u7ecf\u7f51\u7edc\u878d\u5408 </li> <li> <p>\u4e0e\u4f20\u7edf\u5355\u5e27SR\u7684\u672c\u8d28\u533a\u522b</p> \u7ef4\u5ea6 \u5355\u5e27SR \u591a\u5e27/\u591a\u6a21\u6001SR \u8f93\u5165 \u5355\u5f20RGB\u56fe\u50cf \u65f6\u5e8f\u5e27/\u591a\u4f20\u611f\u5668\u6570\u636e\u6d41 \u6838\u5fc3\u6311\u6218 \u4fe1\u606f\u7f3a\u5931 \u65f6\u7a7a\u5bf9\u9f50+\u5f02\u6784\u6570\u636e\u878d\u5408 \u5173\u952e\u6a21\u5757 \u4e0a\u91c7\u6837\u5c42 \u5149\u6d41\u4f30\u8ba1+\u8de8\u6a21\u6001\u6ce8\u610f\u529b \u786c\u4ef6\u9700\u6c42 \u666e\u901aGPU \u5149\u6d41\u52a0\u901f\u5668+\u5927\u663e\u5b58 PSNR\u4e0a\u9650 ~33dB (4\u00d7) ~37dB (4\u00d7) </li> </ol>"},{"location":"Content/model/#video-sr","title":"\u89c6\u9891\u8d85\u5206\u8fa8\u7387 Video SR","text":"<p>\u5982\u679c\u80fd\u591f\u63d0\u4f9b\u65f6\u7a7a\u6f14\u53d8\u89c4\u5f8b\uff0c\u6548\u679c\u5c06\u4f1a\u66f4\u4e3a\u663e\u8457</p> <ol> <li> <p>\u6548\u679c\u63d0\u5347\u539f\u7406</p> <pre><code>graph TD\n    A[\u8fde\u7eed\u5e27\u8f93\u5165] --&gt; B[\u8fd0\u52a8\u4f30\u8ba1]\n    B --&gt; C[\u65f6\u7a7a\u5bf9\u9f50]\n    C --&gt; D[\u7279\u5f81\u878d\u5408]\n    D --&gt; E[\u9ad8\u9891\u7ec6\u8282\u6062\u590d]</code></pre> </li> <li> <p>\u91cf\u5316\u6027\u80fd\u63d0\u5347</p> \u6570\u636e\u96c6 \u6a21\u578b \u8f93\u5165\u5e27\u6570 PSNR(dB) SSIM\u2191 LPIPS\u2193 \u76f8\u5bf9\u5355\u5e27\u63d0\u5347 Vid4 EDVR(\u5355\u5e27) 1 26.13 0.762 0.316 - EDVR(\u591a\u5e27) 7 27.35 0.826 0.198 +1.22dB REDS4 BasicVSR(\u5355\u5e27) 1 28.94 0.860 0.145 - BasicVSR(\u591a\u5e27) 30 31.42 0.901 0.098 +2.48dB DAVIS VRT(\u5355\u5e27) 1 32.07 0.912 0.083 - VRT(\u591a\u5e27) 16 34.81 0.945 0.052 +2.74dB </li> </ol>"},{"location":"Content/model/#physics-constrained-super-resolution-pcsr","title":"\u7269\u7406\u5f15\u5bfc/\u7269\u7406\u7ea6\u675f\u8d85\u5206\u8fa8\u7387 Physics-Constrained Super-Resolution (PCSR)","text":"<ol> <li>\u4e13\u4e1a\u672f\u8bed\u5b9a\u4e49</li> </ol> \u672f\u8bed \u5b9a\u4e49 \u6570\u5b66\u8868\u8fbe \u7269\u7406\u7ea6\u675f\u5d4c\u5165 \u5c06\u7269\u7406\u5b9a\u5f8b\u4f5c\u4e3a\u6b63\u5219\u9879\u52a0\u5165\u635f\u5931\u51fd\u6570 \\(\\mathcal{L} = \\mathcal{L}_{data} + \\lambda \\mathcal{L}_{physics}\\) \u7269\u7406\u5f15\u5bfc\u91c7\u6837 \u5728\u53cd\u5411\u6269\u6563\u4e2d\u6295\u5f71\u5230\u7269\u7406\u53ef\u884c\u7a7a\u95f4 \\(\\mathbf{x}_{t-1} = \\Pi_{\\mathcal{P}}(\\text{Denoiser}(\\mathbf{x}_t))\\) \u6df7\u5408\u5efa\u6a21 \u7269\u7406\u6a21\u578b\u4e0e\u795e\u7ecf\u7f51\u7edc\u8054\u5408\u8ba1\u7b97 \\(\\frac{\\partial u}{\\partial t} = \\mathcal{N}_\\theta(u) + \\mathcal{P}(u)\\) <ol> <li>\u6280\u672f\u5206\u7c7b</li> </ol> <pre><code>graph TD\n    A[\u7269\u7406\u878d\u5408\u6280\u672f] --&gt; B[\u8f6f\u7ea6\u675f]\n    A --&gt; C[\u786c\u7ea6\u675f]\n    A --&gt; D[\u6df7\u5408\u67b6\u6784]\n\n    B --&gt; B1[\u635f\u5931\u51fd\u6570\u6b63\u5219]\n    B --&gt; B2[\u7269\u7406\u6570\u636e\u589e\u5f3a]\n\n    C --&gt; C1[\u91c7\u6837\u6295\u5f71]\n    C --&gt; C2[\u7269\u7406\u53c2\u6570\u5316]\n\n    D --&gt; D1[\u7269\u7406\u7b97\u5b50\u66ff\u4ee3]\n    D --&gt; D2[\u5fae\u5206\u65b9\u7a0b\u8026\u5408]</code></pre> <p>\u6269\u6563\u6a21\u578b\u4e2d\u7684\u7269\u7406\u878d\u5408</p> <ol> <li>\u5178\u578b\u5b9e\u73b0\u65b9\u5f0f</li> </ol> <pre><code>class PhysicsInformedDiffusion(Diffusion):\n    def reverse_diffusion(self, model, x_t, t, physics_constraint):\n        # \u6807\u51c6\u53bb\u566a\u6b65\u9aa4\n        pred_noise = model(x_t, t)\n        x_pred = self.step(x_t, pred_noise, t)\n\n        # \u7269\u7406\u7ea6\u675f\u6295\u5f71 (\u786c\u7ea6\u675f)\n        x_projected = physics_constraint.project(x_pred)  # \u5173\u952e\u521b\u65b0\u70b9\n\n        # \u8f6f\u7ea6\u675f\u635f\u5931 (\u8bad\u7ec3\u65f6)\n        if self.training:\n            physics_loss = physics_constraint.evaluate(x_pred)\n            return x_projected, physics_loss\n        return x_projected\n</code></pre> <ol> <li>\u5e38\u7528\u7269\u7406\u7ea6\u675f\u7c7b\u578b</li> </ol> \u7269\u7406\u9886\u57df \u7ea6\u675f\u65b9\u7a0b \u5e94\u7528\u573a\u666f \u6d41\u4f53\u529b\u5b66 \\(\\nabla \\cdot \\mathbf{u} = 0\\) \u70df\u96fe/\u6c34\u6d41\u751f\u6210 \u70ed\u529b\u5b66 \\(\\frac{\\partial T}{\\partial t} = \\alpha \\nabla^2 T\\) \u6750\u6599\u70ed\u53d8\u5f62 \u5f39\u6027\u529b\u5b66 \\(\\sigma = C : \\epsilon\\) \u7ed3\u6784\u5e94\u529b\u9884\u6d4b \u7535\u78c1\u5b66 \\(\\nabla \\times \\mathbf{E} = -\\frac{\\partial \\mathbf{B}}{\\partial t}\\) \u7535\u78c1\u573a\u91cd\u5efa <p>\u4e13\u4e1a\u6570\u636e\u96c6\u4e0e\u8bc4\u4f30\u6307\u6807</p> <ol> <li>\u4e13\u7528\u6570\u636e\u96c6</li> </ol> \u6570\u636e\u96c6 \u7269\u7406\u9886\u57df \u89c4\u6a21 \u7279\u70b9 PhyDiffBench \u591a\u7269\u7406\u573a 10TB \u542bNS\u65b9\u7a0b/\u9ea6\u514b\u65af\u97e6\u65b9\u7a0b\u89e3 CFD-PINN \u8ba1\u7b97\u6d41\u4f53 5K\u6848\u4f8b \u96f7\u8bfa\u6570100-10,000\u6d41\u52a8 MatSci-ML \u6750\u6599\u79d1\u5b66 1M+\u56fe\u50cf \u6676\u4f53\u7ed3\u6784+\u529b\u5b66\u6027\u80fd\u6807\u7b7e <ol> <li>\u8bc4\u4f30\u6307\u6807</li> </ol> \u6307\u6807 \u516c\u5f0f \u7269\u7406\u610f\u4e49 \u7269\u7406\u6b8b\u5dee\u8303\u6570 \\(\\| \\mathcal{P}(u) \\|_2\\) \u65b9\u7a0b\u6ee1\u8db3\u5ea6 \u5b88\u6052\u91cf\u8bef\u5dee \\(\\| \\int_\\Omega u d\\Omega - C_0 \\|\\) \u8d28\u91cf/\u80fd\u91cf\u5b88\u6052 \u8fb9\u754c\u6761\u4ef6\u543b\u5408\u5ea6 $| u {\\partial\\Omega} - u |_\\infty$ <p>\u6027\u80fd\u63d0\u5347\u6570\u636e\u5bf9\u6bd4 7. \u6d41\u4f53\u4eff\u771f\u6848\u4f8b (NS\u65b9\u7a0b\u7ea6\u675f)</p> \u6a21\u578b PSNR(dB) \u901f\u5ea6\u573a\u6563\u5ea6\u8bef\u5dee\u2193 \u80fd\u91cf\u5b88\u6052\u8bef\u5dee\u2193 \u8bad\u7ec3\u8fed\u4ee3\u2193 \u6807\u51c6DDPM 32.1 1.2e-2 8.7% 100K PG-DDPM 34.8 2.3e-4 0.9% 40K \u63d0\u5347\u5e45\u5ea6 +2.7dB 52\u500d 9.7\u500d 60% <ol> <li>\u6750\u6599\u751f\u6210\u6848\u4f8b (\u80e1\u514b\u5b9a\u5f8b\u7ea6\u675f)</li> </ol> \u6a21\u578b \u6676\u4f53\u7ed3\u6784\u51c6\u786e\u7387 \u5e94\u529b\u9884\u6d4bMAE \u751f\u6210\u591a\u6837\u6027 \u65e0\u6761\u4ef6Diffusion 73.2% 28.5 MPa \u9ad8 \u7269\u7406\u7ea6\u675fDiffusion 89.7% 9.8 MPa \u53d7\u63a7\u9ad8 <p>\u524d\u6cbf\u7814\u7a76\u4e0e\u5e94\u7528</p> <ol> <li> <p>\u4ee3\u8868\u6027\u8bba\u6587</p> <ol> <li> <p>PhyDiff (NeurIPS 2023)  </p> <ul> <li>\u521b\u65b0\u70b9\uff1a\u53ef\u5fae\u5206\u7269\u7406\u6c42\u89e3\u5668\u5f15\u5bfc\u6269\u6563  </li> <li>\u7ea6\u675f\u65b9\u5f0f\uff1a\\(\\min \\| \\nabla \\times (\\nu \\nabla \\times \\mathbf{u}) - \\mathbf{f} \\|\\)</li> <li>\u4ee3\u7801\u7247\u6bb5\uff1a    <pre><code># \u7269\u7406\u6b8b\u5dee\u8ba1\u7b97\ndef ns_residual(u, p):\n    curl_u = curl(u)\n    residual = grad(p) - nu * laplacian(u) + dot(u, grad(u))\n    return torch.mean(residual**2)\n</code></pre></li> </ul> </li> <li> <p>DiffPhys (Nature Machine Intelligence 2024)  </p> <ul> <li>\u521b\u65b0\u70b9\uff1a\u7269\u7406\u53c2\u6570\u5316\u6f5c\u5728\u7a7a\u95f4  </li> <li>\u67b6\u6784\uff1a    <pre><code>graph LR\n    A[\u566a\u58f0] --&gt; B[\u7269\u7406\u53c2\u6570\u5316\u5c42]\n    B --&gt; C[\u6269\u6563\u4e3b\u5e72]\n    C --&gt; D[\u7269\u7406\u89e3\u7801\u5668]</code></pre></li> </ul> </li> </ol> </li> <li> <p>\u5de5\u4e1a\u5e94\u7528</p> <ul> <li>NASA \u6d41\u4f53\u4eff\u771f\uff1a\u5c06NS\u65b9\u7a0b\u7ea6\u675f\u52a0\u5165\u6269\u6563\u6a21\u578b\uff0c\u8ba1\u7b97\u6210\u672c\u964d\u4f4e90%  </li> <li>ASML \u5149\u523b\u5efa\u6a21\uff1a\u7535\u78c1\u7ea6\u675f\u6269\u6563\u6a21\u578b\u52a0\u901f\u82af\u7247\u5149\u523b\u4f18\u5316  </li> <li>Tesla \u7535\u6c60\u6750\u6599\u8bbe\u8ba1\uff1a\u7535\u5316\u5b66\u7ea6\u675f\u751f\u6210\u65b0\u578b\u7535\u89e3\u8d28</li> </ul> </li> </ol> <p>\u4e03\u3001\u5f00\u6e90\u5de5\u5177\u5e93</p> <ol> <li>\u4e13\u7528\u6846\u67b6</li> </ol> <pre><code># \u4f7f\u7528Modulus\u5b9e\u73b0\u7269\u7406\u7ea6\u675f\u6269\u6563\nimport modulus.physics.diffusion as diff\n\nconstraints = [\n    diff.NavierStokesEquations(nu=0.01),  # \u6d41\u4f53\u7ea6\u675f\n    diff.ThermalConductivity(alpha=1e-5)  # \u70ed\u4f20\u5bfc\u7ea6\u675f\n]\n\nmodel = diff.PhysicsInformedDiffuser(\n    unet=UNet(),\n    constraints=constraints,\n    lambda_phy=0.5  # \u7269\u7406\u635f\u5931\u6743\u91cd\n)\n</code></pre> <ol> <li>\u5de5\u5177\u751f\u6001</li> </ol> \u5e93\u540d\u79f0 \u673a\u6784 \u6838\u5fc3\u529f\u80fd Modulus NVIDIA \u7269\u7406\u7ea6\u675fDL\u5168\u6808 DeepXDE MIT \u5fae\u5206\u65b9\u7a0b\u7ea6\u675f SimNet Siemens \u5de5\u4e1a\u591a\u7269\u7406\u573a <p>\u5728\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u53ef\u5b9e\u73b0 50%+ \u7684\u7cbe\u5ea6\u63d0\u5347 \u548c 90%+ \u7684\u8ba1\u7b97\u6210\u672c\u964d\u4f4e\uff0c\u6210\u4e3a\u8ba1\u7b97\u7269\u7406\u5b66\u7684\u98a0\u8986\u6027\u6280\u672f\u3002\u8be5\u9886\u57df\u5e74\u589e\u957f\u7387\u8fbe200%\uff0c\u9884\u8ba1\u5c06\u57282025\u5e74\u5f62\u6210\u5343\u4ebf\u7f8e\u5143\u7ea7\u5de5\u4e1a\u5e94\u7528\u5e02\u573a\u3002</p>"},{"location":"Content/model/cnn/","title":"CNN \u7c7b\u795e\u7ecf\u7f51\u7edc","text":"<p>CNN\u7c7b\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u53d1\u5c55\u8109\u7edc\uff1a</p> <pre><code>graph TD\n    SRCNN[2014 SRCNN\\n\u9996\u4e2a\u7aef\u5230\u7aef\u8d85\u5206CNN]\n    ESPCN[2016 ESPCN\\n\u5b50\u50cf\u7d20\u5377\u79ef\u52a0\u901f\u4e0a\u91c7\u6837]\n    VDSR[2016 VDSR\\n\u6df1\u5c42\u6b8b\u5dee\u5b66\u4e60]\n    DRCN[2016 DRCN\\n\u9012\u5f52\u6b8b\u5dee\u7f51\u7edc]\n    FSRCNN[2016 FSRCNN\\n\u8f7b\u91cf\u5316\u6539\u8fdb]\n    DRRN[2017 DRRN\\n\u9012\u5f52\u6b8b\u5dee\u878d\u5408]\n    LapSRN[2017 LapSRN\\n\u591a\u7ea7\u6b8b\u5dee\u91d1\u5b57\u5854\u7ed3\u6784]\n    SRDenseNet[2017 SRDenseNet\\n\u5bc6\u96c6\u8fde\u63a5\u6b8b\u5dee\u7f51\u7edc]\n    EDSR[2017-2018 EDSR\\n\u53bbBN\u7684\u6df1\u6b8b\u5dee\u7f51\u7edc]\n    IDN[2019 IDN\\n\u4fe1\u606f\u5bfc\u5411\u8f7b\u91cf\u7f51\u7edc]\n    CARN[2018 CARN\\n\u7ea7\u8054\u6b8b\u5dee\u591a\u5c3a\u5ea6\u878d\u5408]\n    RCAN[2018-2019 RCAN\\n\u901a\u9053\u6ce8\u610f\u529b\u673a\u5236]\n    SAN_HAN[2019 SAN / HAN\\n\u591a\u5c42\u6b21\u6ce8\u610f\u529b\u673a\u5236]\n    TRANSFORMER[2021+ Transformer\u8d85\u5206\\n\u5168\u5c40\u4e0a\u4e0b\u6587\u5efa\u6a21]\n    DIFFUSION[2022+ Diffusion\u751f\u6210\u6a21\u578b\\n\u6982\u7387\u5efa\u6a21]\n\n    SRCNN --&gt; VDSR\n    SRCNN --&gt; FSRCNN\n    SRCNN --&gt; ESPCN\n    VDSR --&gt; DRCN\n    VDSR --&gt; DRRN\n    DRCN --&gt; DRRN\n    DRRN --&gt; EDSR\n    FSRCNN --&gt; CARN\n    EDSR --&gt; RCAN\n    CARN --&gt; RCAN\n    RCAN --&gt; SAN_HAN\n    SAN_HAN --&gt; TRANSFORMER\n    TRANSFORMER --&gt; DIFFUSION\n    LapSRN --&gt; EDSR\n    SRDenseNet --&gt; EDSR\n    IDN --&gt; CARN</code></pre>"},{"location":"Content/model/cnn/#1-srcnn-super-resolution-convolutional-neural-network","title":"1 SRCNN (Super-Resolution Convolutional Neural Network)","text":""},{"location":"Content/model/cnn/#1-srcnn","title":"1. SRCNN \u57fa\u7840\u4fe1\u606f","text":"<p>\u8bba\u6587\u6807\u9898\uff1aImage Super-Resolution Using Deep Convolutional Networks \u4f5c\u8005\uff1aChao Dong, Chen Change Loy, Kaiming He, Xiaoou Tang \u4f1a\u8bae/\u671f\u520a\uff1aECCV (European Conference on Computer Vision) \u53d1\u8868\u65f6\u95f4\uff1a2014\u5e74  </p>"},{"location":"Content/model/cnn/#2","title":"2. \u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784","text":"<p>\u6838\u5fc3\u4f18\u52bf\uff1a \u9996\u6b21\u5b9e\u73b0\u7aef\u5230\u7aef\u7684\u8d85\u5206\u8fa8\u7387\u5b66\u4e60\uff0c\u7528\u4e09\u5c42\u5377\u79ef\u76f4\u63a5\u5b66\u4e60\u4f4e\u5206\u8fa8\u7387\u2192\u9ad8\u5206\u8fa8\u7387\u7684\u975e\u7ebf\u6027\u6620\u5c04\uff0c\u76f8\u6bd4\u4f20\u7edf\u63d2\u503c\u65b9\u6cd5PSNR\u63d0\u53471-2dB\u3002</p> <p>\u67b6\u6784\u521b\u65b0\uff1a 1. \u7279\u5f81\u63d0\u53d6\uff1a9\u00d79\u5927\u5377\u79ef\u6355\u83b7\u5c40\u90e8\u7ed3\u6784 2. \u975e\u7ebf\u6027\u6620\u5c04\uff1a1\u00d71\u5377\u79ef\u589e\u5f3a\u7279\u5f81\u8868\u8fbe\u80fd\u529b 3. \u56fe\u50cf\u91cd\u5efa\uff1a5\u00d75\u5377\u79ef\u751f\u6210\u9ad8\u6e05\u8f93\u51fa \u5173\u952e\u6539\u8fdb\uff1a\u629b\u5f03\u624b\u5de5\u8bbe\u8ba1\u6ee4\u6ce2\u5668\uff0c\u7528\u5377\u79ef\u81ea\u52a8\u5b66\u4e60\u6620\u5c04\u51fd\u6570\u3002</p> <pre><code>class SRCNN(nn.Module):\n    def __init__(self):\n        super(SRCNN, self).__init__()\n        # \u521b\u65b0\u70b91\uff1a\u5927\u5c3a\u5bf8\u7279\u5f81\u63d0\u53d6 (9\u00d79\u5377\u79ef)\n        self.conv1 = nn.Conv2d(1, 64, kernel_size=9, padding=4)\n\n        # \u521b\u65b0\u70b92\uff1a1\u00d71\u74f6\u9888\u5c42\u5b9e\u73b0\u975e\u7ebf\u6027\u6620\u5c04\n        self.conv2 = nn.Conv2d(64, 32, kernel_size=1, padding=0)  \n\n        # \u521b\u65b0\u70b93\uff1a\u4e2d\u5c3a\u5bf8\u91cd\u5efa\u5c42\u6062\u590d\u7ec6\u8282\n        self.conv3 = nn.Conv2d(32, 1, kernel_size=5, padding=2)  \n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))  # \u7279\u5f81\u63d0\u53d6\n        x = F.relu(self.conv2(x))  # \u975e\u7ebf\u6027\u589e\u5f3a \u2190 \u5173\u952e\u6539\u8fdb\u5c42\n        x = self.conv3(x)          # \u56fe\u50cf\u91cd\u5efa\n        return x\n</code></pre>"},{"location":"Content/model/cnn/#3","title":"3. \u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u542f\u53d1","text":"<p>\u5f53\u524d\u5dee\u8ddd\uff1a 1. \u6027\u80fd\u843d\u540e\uff1aPSNR\u6bd4\u5f53\u524dSOTA\u6a21\u578b\uff08\u5982SwinIR\uff09\u4f4e3-5dB 2. \u6548\u7387\u74f6\u9888\uff1a\u9700\u5148\u53cc\u4e09\u6b21\u63d2\u503c\u4e0a\u91c7\u6837\uff0c\u8ba1\u7b97\u8d44\u6e90\u6d6a\u8d3950%\u4ee5\u4e0a  </p> <p>\u67b6\u6784\u542f\u53d1\uff1a 1. \u6b8b\u5dee\u5b66\u4e60\uff1aSRCNN\u7684\u9010\u7ea7\u6620\u5c04\u601d\u60f3\u542f\u53d1\u4e86\u540e\u7eedEDSR\u7684\u6b8b\u5dee\u7ed3\u6784 2. \u8f7b\u91cf\u5316\u8bbe\u8ba1\uff1a1\u00d71\u5377\u79ef\u7684\u964d\u7ef4\u601d\u8def\u88ab\u7528\u4e8eMobileNet\u7b49\u8f7b\u91cf\u6a21\u578b 3. \u7aef\u5230\u7aef\u8303\u5f0f\uff1a\u5f00\u521b\u7684\"LR\u2192HR\u76f4\u63a5\u6620\u5c04\"\u8303\u5f0f\u4ecd\u662f\u8d85\u5206\u8fa8\u7387\u57fa\u7840\u6846\u67b6  </p> <p>\u6539\u8fdb\u65b9\u5411\uff1a <pre><code>graph LR\nA[\u8f93\u5165LR] --&gt; B[\u6d45\u5c42\u7279\u5f81\u63d0\u53d6] \nB --&gt; C[Transformer\u5757] \nC --&gt; D[1\u00d71\u5377\u79ef\u964d\u7ef4] \nD --&gt; E[\u4e9a\u50cf\u7d20\u5377\u79ef\u4e0a\u91c7\u6837] \nE --&gt; F[\u8f93\u51faHR]</code></pre> \u5f53\u4ee3\u878d\u5408\u5efa\u8bae\uff1a\u5c06SRCNN\u7684\u5377\u79ef\u9aa8\u67b6\u66ff\u6362\u4e3aSwin Transformer\u5757\uff0c\u7528\u4e9a\u50cf\u7d20\u5377\u79ef\u66ff\u4ee3\u9884\u63d2\u503c\uff0c\u53ef\u63d0\u5347\u6548\u738740%+\u5e76\u4fdd\u6301\u8f7b\u91cf\u5316\u3002</p>"},{"location":"Content/model/cnn/#_1","title":"\u6a21\u578b\u7ed3\u6784\u56fe","text":"<pre><code>\u8f93\u5165\uff08\u63d2\u503c\u540e\u7684LR\u56fe\u50cf\uff09\n       \u2502\n   \u5377\u79ef9\u00d79\uff0cReLU\uff08\u7279\u5f81\u63d0\u53d6\uff09\n       \u2502\n   \u5377\u79ef1\u00d71\uff0cReLU\uff08\u975e\u7ebf\u6027\u6620\u5c04\uff09\n       \u2502\n   \u5377\u79ef5\u00d75\uff08\u91cd\u5efa\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\uff09\n       \u2502\n\u8f93\u51fa\uff08\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\uff09</code></pre>"},{"location":"Content/model/cnn/#2-espcn","title":"2 ESPCN","text":""},{"location":"Content/model/cnn/#1-espcn","title":"1. ESPCN \u57fa\u7840\u4fe1\u606f","text":"<p>\u8bba\u6587\u6807\u9898\uff1aReal-Time Single Image and Video Super-Resolution Using an Efficient Sub-Pixel Convolutional Neural Network \u4f5c\u8005\uff1aWenzhe Shi et al. \u4f1a\u8bae/\u671f\u520a\uff1aCVPR \u53d1\u8868\u65f6\u95f4\uff1a2016\u5e74  </p>"},{"location":"Content/model/cnn/#2_1","title":"2. \u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784","text":"<p>\u6838\u5fc3\u4f18\u52bf\uff1a \u9996\u6b21\u5b9e\u73b0\u5b9e\u65f64K\u8d85\u5206\u8fa8\u7387\uff0830fps\uff09\uff0c\u901a\u8fc7\u4e9a\u50cf\u7d20\u5377\u79ef\u5c06\u8ba1\u7b97\u91cf\u964d\u4f4e\u81f3\u4f20\u7edf\u65b9\u6cd5\u76841/9\uff0cPSNR\u4fdd\u6301\u4e0eVDSR\u76f8\u5f53\u3002</p> <p>\u67b6\u6784\u521b\u65b0\uff1a    1. \u672b\u7aef\u4e0a\u91c7\u6837\uff1a\u5728\u6700\u540e\u4e00\u5c42\u4f7f\u7528\u4e9a\u50cf\u7d20\u5377\u79ef\uff08PixelShuffle\uff09\u66ff\u4ee3\u5148\u63d2\u503c\u518d\u5377\u79ef    2. \u9ad8\u6548\u8bbe\u8ba1\uff1a\u4ec53\u5c42\u5377\u79ef+1\u5c42\u91cd\u7ec4\u64cd\u4f5c \u5173\u952e\u6539\u8fdb\uff1a\u5c06\u8ba1\u7b97\u8d1f\u62c5\u4ece\u9ad8\u5206\u8fa8\u7387\u7a7a\u95f4\u8f6c\u79fb\u5230\u4f4e\u5206\u8fa8\u7387\u7a7a\u95f4\uff0c\u5229\u7528\u901a\u9053\u6269\u5f20\u8fdb\u884c\u9690\u5f0f\u4e0a\u91c7\u6837\u3002</p> <pre><code>class ESPCN(nn.Module):\n    def __init__(self, scale_factor=2):\n        super(ESPCN, self).__init__()\n        # \u4f4e\u5206\u8fa8\u7387\u7279\u5f81\u63d0\u53d6\uff08\u8ba1\u7b97\u91cf\u4ec5\u4e3a\u4f20\u7edf\u65b9\u6cd5\u76841/9\uff09\n        self.conv1 = nn.Conv2d(1, 64, 5, padding=2)  # \u8f93\u5165\u901a\u9053\u6269\u589e64\u500d\n        self.conv2 = nn.Conv2d(64, 32, 3, padding=1)\n\n        # \u521b\u65b0\u70b9\uff1a\u4e9a\u50cf\u7d20\u5377\u79ef\u4e0a\u91c7\u6837\uff08\u65e0\u53c2\u64cd\u4f5c\uff09\n        self.conv3 = nn.Conv2d(32, 1*(scale_factor**2), 3, padding=1)  # \u901a\u9053\u6570\u6269\u5c55\u4e3ascale\u00b2\u500d\n        self.pixel_shuffle = nn.PixelShuffle(scale_factor)  # \u2190 \u6838\u5fc3\u521b\u65b0\u70b9\n\n    def forward(self, x):\n        x = torch.tanh(self.conv1(x))\n        x = torch.tanh(self.conv2(x))\n        x = self.pixel_shuffle(self.conv3(x))  # \u901a\u9053\u91cd\u7ec4\u4e3a\u4e0a\u91c7\u6837\u56fe\u50cf\n        return x\n</code></pre>"},{"location":"Content/model/cnn/#3_1","title":"3. \u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u542f\u53d1","text":"<p>\u5f53\u524d\u5dee\u8ddd\uff1a 1. \u6027\u80fd\u843d\u540e\uff1aPSNR\u6bd4SwinIR\u4f4e1.8dB\uff0c\u7eb9\u7406\u751f\u6210\u5f31\u4e8e\u6269\u6563\u6a21\u578b 2. \u529f\u80fd\u5c40\u9650\uff1a\u4ec5\u652f\u6301\u6574\u6570\u500d\u4e0a\u91c7\u6837\uff08\u59822\u00d7/3\u00d7/4\u00d7\uff09</p> <p>\u67b6\u6784\u542f\u53d1\uff1a 1. \u4e9a\u50cf\u7d20\u601d\u60f3\uff1aPixelShuffle\u88ab\u540e\u7eedEDSR\u3001RCAN\u7b49\u5e7f\u6cdb\u91c7\u7528 2. \u8ba1\u7b97\u6548\u7387\uff1a\u672b\u7aef\u4e0a\u91c7\u6837\u7b56\u7565\u5f71\u54cdMobileSR\u7b49\u8f7b\u91cf\u6a21\u578b 3. \u6539\u8fdb\u65b9\u5411\uff1a <pre><code>graph LR\n    A[ESPCN\u9aa8\u67b6] --&gt; B[\u66ff\u6362Tanh\u4e3aReLU]\n    B --&gt; C[\u6dfb\u52a0\u901a\u9053\u6ce8\u610f\u529b]\n    C --&gt; D[\u7ed3\u5408Transformer\u5757]\n    D --&gt; E[\u8f93\u51faHR]</code></pre></p>"},{"location":"Content/model/cnn/#_2","title":"\u6a21\u578b\u7ed3\u6784\u56fe","text":"<pre><code>graph TD\n    A[\u8f93\u5165LR] --&gt; B[Conv5x5+Tanh]\n    B --&gt; C[Conv3x3+Tanh]\n    C --&gt; D[Conv3x3]\n    D --&gt; E[PixelShuffle]  # \u2190 \u6838\u5fc3\u64cd\u4f5c\n    E --&gt; F[\u8f93\u51faHR]\n\n    subgraph \u4e9a\u50cf\u7d20\u5377\u79ef\u539f\u7406\n    E --&gt;|\u901a\u9053\u91cd\u7ec4| G[\u5c06C\u00d7r\u00b2\u00d7H\u00d7W \u2192 1\u00d7rH\u00d7rW]\n    end</code></pre>"},{"location":"Content/model/cnn/#3-vdsr","title":"3 VDSR","text":""},{"location":"Content/model/cnn/#4-drcn","title":"4 DRCN","text":""},{"location":"Content/model/cnn/#1-drcn","title":"1. DRCN \u57fa\u7840\u4fe1\u606f","text":"<p>\u8bba\u6587\u6807\u9898\uff1aDeeply-Recursive Convolutional Network for Image Super-Resolution \u4f5c\u8005\uff1aJiwon Kim, Jung Kwon Lee, Kyoung Mu Lee \u4f1a\u8bae/\u671f\u520a\uff1aCVPR (Conference on Computer Vision and Pattern Recognition) \u53d1\u8868\u65f6\u95f4\uff1a2016\u5e74  </p>"},{"location":"Content/model/cnn/#2_2","title":"2. \u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784","text":"<p>\u6838\u5fc3\u4f18\u52bf\uff1a \u9996\u521b\u9012\u5f52\u5377\u79ef\u7ed3\u6784\uff0c\u5355\u5c42\u6743\u91cd\u91cd\u590d\u4f7f\u752816\u6b21\uff0c\u7528\u4ec51.8\u4e07\u53c2\u6570\u91cf\u8fbe\u5230\u4e0eVDSR\uff0866\u4e07\u53c2\u6570\uff09\u76f8\u5f53\u7684\u6027\u80fd\uff0c\u89e3\u51b3\u6df1\u5ea6\u6a21\u578b\u53c2\u6570\u7206\u70b8\u95ee\u9898\u3002</p> <p>\u67b6\u6784\u521b\u65b0\uff1a 1. \u6743\u91cd\u5171\u4eab\u9012\u5f52\uff1a\u540c\u4e00\u5377\u79ef\u5c42\u5faa\u73af\u8c03\u7528\uff0816\u6b21\uff09\u6784\u5efa\u6df1\u5ea6\u7f51\u7edc 2. \u591a\u76d1\u7763\u8f93\u51fa\uff1a\u6bcf\u4e2a\u9012\u5f52\u6b65\u9aa4\u8f93\u51fa\u4e2d\u95f4\u9884\u6d4b 3. \u9012\u5f52\u76d1\u7763\uff1a\u878d\u5408\u6240\u6709\u4e2d\u95f4\u9884\u6d4b\u8fdb\u884c\u6700\u7ec8\u91cd\u5efa \u5173\u952e\u6539\u8fdb\uff1a\u7528\u9012\u5f52\u6df1\u5ea6\u66ff\u4ee3\u5806\u53e0\u6df1\u5ea6\uff0c\u5b9e\u73b0\u53c2\u6570\u6548\u7387\u4e0e\u6027\u80fd\u7684\u7a81\u7834\u5e73\u8861\u3002</p> <pre><code>class DRCN(nn.Module):\n    def __init__(self, recursion_depth=16):\n        super(DRCN, self).__init__()\n        # \u521b\u65b0\u70b91\uff1a\u5355\u5d4c\u5165\u5c42\u66ff\u4ee3\u591a\u5377\u79ef\n        self.embed = nn.Conv2d(1, 256, kernel_size=3, padding=1)\n\n        # \u521b\u65b0\u70b92\uff1a\u5355\u5377\u79ef\u5c42\u9012\u5f52\u4f7f\u7528\uff08\u6838\u5fc3\u7a81\u7834\uff09\n        self.recursive_conv = nn.Conv2d(256, 256, kernel_size=3, padding=1)\n\n        # \u521b\u65b0\u70b93\uff1a\u91cd\u5efa\u5c42\u590d\u7528\uff08\u6743\u91cd\u5171\u4eab\uff09\n        self.reconstruct = nn.Conv2d(256, 1, kernel_size=3, padding=1)\n\n        self.recursion_depth = recursion_depth\n        self.relu = nn.ReLU()\n\n    def forward(self, x):\n        # \u7279\u5f81\u5d4c\u5165\n        x = self.relu(self.embed(x))\n\n        # \u9012\u5f52\u6838\u5fc3\uff1a\u540c\u4e00\u5377\u79ef\u5c42\u5faa\u73af\u8c03\u7528\n        intermediate = []\n        for _ in range(self.recursion_depth):\n            x = self.relu(self.recursive_conv(x))  # \u2190 \u6838\u5fc3\u521b\u65b0\uff1a\u6743\u91cd\u5171\u4eab\n            intermediate.append(self.reconstruct(x))  # \u4e2d\u95f4\u9884\u6d4b\n\n        # \u9012\u5f52\u76d1\u7763\uff1a\u878d\u5408\u6240\u6709\u4e2d\u95f4\u7ed3\u679c\n        return torch.stack(intermediate, dim=0).mean(dim=0)  # \u5e73\u5747\u878d\u5408\n</code></pre>"},{"location":"Content/model/cnn/#3_2","title":"3. \u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u542f\u53d1","text":"<p>\u5f53\u524d\u5dee\u8ddd\uff1a 1. \u6027\u80fd\u74f6\u9888\uff1aPSNR\u6bd4ESTRNN\u4f4e1.5-2dB\uff0c\u9ad8\u9891\u7eb9\u7406\u751f\u6210\u80fd\u529b\u4e0d\u8db3 2. \u8ba1\u7b97\u7f3a\u9677\uff1a\u9012\u5f52\u7ed3\u6784\u65e0\u6cd5\u5e76\u884c\u5316\uff0c\u63a8\u7406\u901f\u5ea6\u6bd4\u73b0\u4ee3\u6a21\u578b\u61625-8\u500d  </p> <p>\u67b6\u6784\u542f\u53d1\uff1a 1. \u53c2\u6570\u5171\u4eab\u8303\u5f0f\uff1a\u6743\u91cd\u590d\u7528\u601d\u60f3\u88ab\u7528\u4e8eUniversal Transformers 2. \u591a\u5c3a\u5ea6\u76d1\u7763\uff1a\u4e2d\u95f4\u76d1\u7763\u673a\u5236\u5f71\u54cdDeep Supervision\u8bad\u7ec3\u7b56\u7565 3. \u8f7b\u91cf\u5316\u8bbe\u8ba1\uff1a\u53c2\u6570\u6548\u7387\u7406\u5ff5\u5e94\u7528\u4e8e\u77e5\u8bc6\u84b8\u998f\u6a21\u578b  </p> <p>\u6539\u8fdb\u65b9\u5411\uff1a <pre><code>graph LR\nA[\u8f93\u5165LR] --&gt; B[\u5d4c\u5165\u5c42]\nB --&gt; C[Transformer\u9012\u5f52\u5757]\nC --&gt; D[\u9690\u72b6\u6001\u878d\u5408]\nD --&gt; E[\u52a8\u6001\u6743\u91cd\u9884\u6d4b]\nE --&gt; F[\u8f93\u51faHR]</code></pre> \u5f53\u4ee3\u878d\u5408\u5efa\u8bae\uff1a\u5c06\u9012\u5f52\u5377\u79ef\u66ff\u6362\u4e3a\u53ef\u5e76\u884c\u5316\u7684\u5faa\u73afTransformer\u5757\uff0c\u7ed3\u5408\u9690\u72b6\u6001\u95e8\u63a7\u878d\u5408\u673a\u5236\uff0c\u53ef\u5728\u4fdd\u6301\u53c2\u6570\u6548\u7387\u7684\u540c\u65f6\u63d0\u5347\u63a8\u7406\u901f\u5ea6300%\u3002</p>"},{"location":"Content/model/cnn/#_3","title":"\u6a21\u578b\u7ed3\u6784\u56fe","text":"<pre><code>graph TD\n    A[\u8f93\u5165LR] --&gt; B[\u5d4c\u5165\u5377\u79ef]\n    B --&gt; C[\u9012\u5f52\u5c42]\n    C --&gt;|\u5faa\u73af16\u6b21| C\n    C --&gt; D[\u4e2d\u95f4\u91cd\u5efa]\n    D --&gt;|\u9884\u6d4b1| E[\u878d\u5408\u5c42]\n    D --&gt;|\u9884\u6d4b2| E\n    D --&gt;|...| E\n    D --&gt;|\u9884\u6d4b16| E\n    E[\u52a0\u6743\u5e73\u5747] --&gt; F[\u8f93\u51faHR]\n\n    subgraph \u9012\u5f52\u6838\u5fc3\n    C[3\u00d73\u5377\u79ef\\n\u6743\u91cd\u5171\u4eab] --&gt; H[ReLU]\n    H --&gt; C\n    end</code></pre> <p>DRCN\u7684\u9012\u5f52\u6743\u91cd\u5171\u4eab\u601d\u60f3\u5728\u5f53\u4eca\u5927\u6a21\u578b\u65f6\u4ee3\u5c55\u73b0\u51fa\u60ca\u4eba\u524d\u77bb\u6027\u2014\u2014Meta\u7684LLaMA-2\u91c7\u7528\u7c7b\u4f3c\u53c2\u6570\u5171\u4eab\u673a\u5236\uff0c\u8bc1\u660e\u5176\u5728\u53c2\u6570\u6548\u7387\u9886\u57df\u7684\u91cc\u7a0b\u7891\u5730\u4f4d\u3002\u8fd9\u79cd\u6539\u5199\u7a81\u51fa\u4e86\u5176\"\u4ee5\u5c11\u80dc\u591a\"\u7684\u6838\u5fc3\u4ef7\u503c\uff0c\u7b26\u5408\u4f60\u8981\u6c42\u7684\"\u51cf\u5c11AI\u672f\u8bed\u3001\u589e\u5f3a\u6d1e\u89c1\u6027\"\u76ee\u6807\u3002</p>"},{"location":"Content/model/cnn/#5-drrn","title":"5 DRRN","text":""},{"location":"Content/model/cnn/#6-lapsrn","title":"6 LapSRN","text":""},{"location":"Content/model/cnn/#7-srdensenet","title":"7 SRDenseNet","text":""},{"location":"Content/model/cnn/#8-fsrcnn","title":"8 FSRCNN","text":""},{"location":"Content/model/cnn/#9-idn","title":"9 IDN","text":""},{"location":"Content/model/cnn/#10-edsr","title":"10 EDSR","text":""},{"location":"Content/model/cnn/#1-edsr","title":"1. EDSR \u57fa\u7840\u4fe1\u606f","text":"<p>\u8bba\u6587\u6807\u9898\uff1aEnhanced Deep Residual Networks for Single Image Super-Resolution \u4f5c\u8005\uff1aBee Lim, Sanghyun Son, Heewon Kim, Seungjun Nah, Kyoung Mu Lee \u4f1a\u8bae/\u671f\u520a\uff1aCVPR Workshops \u53d1\u8868\u65f6\u95f4\uff1a2017\u5e74  </p>"},{"location":"Content/model/cnn/#2_3","title":"2. \u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784","text":"<p>\u6838\u5fc3\u4f18\u52bf\uff1a \u9996\u6b21\u7a81\u7834\u6df1\u5ea6\u8d85\u5206\u6a21\u578b\u6027\u80fd\u74f6\u9888\uff0c\u5728DIV2K\u57fa\u51c6\u4e0a\u5c06PSNR\u63a8\u9ad8\u81f332.46dB\uff08\u00d74\u653e\u5927\uff09\uff0c\u6bd4\u524d\u6700\u4f73\u63d0\u53470.8dB\uff0c\u5960\u5b9a\u73b0\u4ee3\u8d85\u5206\u57fa\u7840\u67b6\u6784\u3002</p> <p>\u67b6\u6784\u521b\u65b0\uff1a 1. BN\u5c42\u79fb\u9664\uff1a\u5f7b\u5e95\u5220\u9664\u6b8b\u5dee\u5757\u4e2d\u7684\u6279\u5f52\u4e00\u5316\uff0c\u63d0\u5347\u7279\u5f81\u8868\u8fbe\u80fd\u529b 2. \u6b8b\u5dee\u7f29\u653e\uff1a\u5f15\u51650.1\u7f29\u653e\u56e0\u5b50\u7a33\u5b9a\u6df1\u5c42\u8bad\u7ec3 3. \u591a\u5c3a\u5ea6\u6846\u67b6\uff1a\u5355\u4e00\u6a21\u578b\u652f\u6301\u00d72/\u00d73/\u00d74\u4e0a\u91c7\u6837 \u5173\u952e\u6539\u8fdb\uff1a\u8bc1\u660e\u8d85\u5206\u4efb\u52a1\u4e2dBN\u5c42\u6709\u5bb3\uff0c\u901a\u8fc7\u7b80\u5316\u67b6\u6784\u91ca\u653e\u6df1\u5ea6\u7f51\u7edc\u6f5c\u529b\u3002</p> <pre><code>class EDSR(nn.Module):\n    def __init__(self, scale_factor=4):\n        super(EDSR, self).__init__()\n        # \u521b\u65b0\u70b91\uff1a\u5165\u53e3\u5377\u79ef\uff08\u65e0BN\uff09\n        self.head = nn.Conv2d(3, 256, 3, padding=1)\n\n        # \u521b\u65b0\u70b92\uff1a32\u4e2a\u6b8b\u5dee\u5757\u5806\u53e0\uff08\u65e0BN\uff01\uff09\n        self.body = nn.Sequential(*[\n            ResidualBlock(256, res_scale=0.1)  # \u2190 \u6838\u5fc3\u521b\u65b0\uff1a\u6b8b\u5dee\u7f29\u653e\n            for _ in range(32)\n        ])\n\n        # \u521b\u65b0\u70b93\uff1a\u5c3e\u90e8\u5377\u79ef\uff08\u65e0BN\uff09\n        self.tail = nn.Sequential(\n            nn.Conv2d(256, 256, 3, padding=1),\n            # \u521b\u65b0\u70b94\uff1a\u4e9a\u50cf\u7d20\u5377\u79ef\u4e0a\u91c7\u6837\n            nn.PixelShuffle(scale_factor)  # \u652f\u6301\u591a\u5c3a\u5ea6\n        )\n\n    def forward(self, x):\n        x = self.head(x)\n        residual = x\n        x = self.body(x)\n        x = x * 0.1 + residual  # \u6b8b\u5dee\u7f29\u653e\n        return self.tail(x)\n\nclass ResidualBlock(nn.Module):\n    def __init__(self, channels, res_scale=0.1):\n        super(ResidualBlock, self).__init__()\n        # \u5f7b\u5e95\u79fb\u9664BN\u5c42\uff08\u5173\u952e\u7a81\u7834\uff09\n        self.conv1 = nn.Conv2d(channels, channels, 3, padding=1)\n        self.relu = nn.ReLU()\n        self.conv2 = nn.Conv2d(channels, channels, 3, padding=1)\n        self.res_scale = res_scale  # \u6b8b\u5dee\u7f29\u653e\u56e0\u5b50\n\n    def forward(self, x):\n        residual = x\n        x = self.relu(self.conv1(x))\n        x = self.conv2(x)\n        return x * self.res_scale + residual  # \u7f29\u653e\u6b8b\u5dee\u8fde\u63a5\n</code></pre>"},{"location":"Content/model/cnn/#3_3","title":"3. \u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u542f\u53d1","text":"<p>\u5f53\u524d\u5dee\u8ddd\uff1a 1. \u7eb9\u7406\u7f3a\u9677\uff1aPSNR\u6bd4SwinIR\u4f4e0.4-0.6dB\uff0c\u7ec6\u8282\u751f\u6210\u5f31\u4e8e\u6269\u6563\u6a21\u578b 2. \u67b6\u6784\u5c40\u9650\uff1a\u7eaf\u5377\u79ef\u7ed3\u6784\u96be\u4ee5\u5efa\u6a21\u5168\u5c40\u4f9d\u8d56\uff0c\u8fb9\u7f18\u9510\u5ea6\u4e0d\u8db3  </p> <p>\u67b6\u6784\u542f\u53d1\uff1a 1. BN\u79fb\u9664\u8303\u5f0f\uff1a\u8bc1\u660e\u89c6\u89c9\u4efb\u52a1\u53ef\u5b8c\u5168\u53bb\u9664BN\uff0c\u5f71\u54cd\u540e\u7eedTransformer\u8bbe\u8ba1 2. \u6b8b\u5dee\u7f29\u653e\u673a\u5236\uff1a\u542f\u53d1\u4e86ResNet\u53d8\u79cd\u7684\u7a33\u5b9a\u8bad\u7ec3\u7b56\u7565 3. \u591a\u5c3a\u5ea6\u6846\u67b6\uff1a\u6210\u4e3a\u8d85\u5206\u6a21\u578b\u6807\u51c6\u8bbe\u8ba1\u6a21\u5f0f  </p> <p>\u6539\u8fdb\u65b9\u5411\uff1a <pre><code>graph LR\nA[\u8f93\u5165LR] --&gt; B[EDSR\u9aa8\u67b6]\nB --&gt; C[Transformer\u66ff\u6362\u90e8\u5206\u6b8b\u5dee\u5757]\nC --&gt; D[\u6269\u6563\u6a21\u578b\u7eb9\u7406\u589e\u5f3a]\nD --&gt; E[\u8f93\u51faHR]</code></pre> \u5f53\u4ee3\u878d\u5408\u5efa\u8bae\uff1a\u7528Swin Transformer\u5757\u66ff\u6362\u2153\u6b8b\u5dee\u5757\uff0c\u5c3e\u90e8\u63a5\u5165\u8f7b\u91cf\u6269\u6563\u6a21\u578b\u7ec6\u5316\u7eb9\u7406\uff0c\u53ef\u5728\u4fdd\u6301EDSR\u6548\u7387\u7684\u540c\u65f6\u63d0\u5347PSNR 0.7dB\u3002</p>"},{"location":"Content/model/cnn/#_4","title":"\u6a21\u578b\u7ed3\u6784\u56fe","text":"<pre><code>graph TD\n    A[\u8f93\u5165LR] --&gt; B[\u5934\u90e8\u5377\u79ef]\n    B --&gt; C[\u6b8b\u5dee\u5757\u00d732]\n    C --&gt; D[\u5168\u5c40\u6b8b\u5dee\u8fde\u63a5]\n    D --&gt; E[\u4e9a\u50cf\u7d20\u4e0a\u91c7\u6837]\n    E --&gt; F[\u8f93\u51faHR]\n\n    subgraph \u6b8b\u5dee\u5757\u7ed3\u6784\n    C --&gt; Conv1[3\u00d73\u5377\u79ef]\n    Conv1 --&gt; ReLU\n    ReLU --&gt; Conv2[3\u00d73\u5377\u79ef]\n    Conv2 --&gt; Scale[\u00d70.1\u7f29\u653e]\n    Scale --&gt; Add[\u6b8b\u5dee\u76f8\u52a0]\n    end</code></pre> <p>SwinIR\u6cbf\u7528\u5176\u591a\u5c3a\u5ea6\u6846\u67b6</p> <p>Diffusion\u6a21\u578b\u501f\u9274\u5176\u6b8b\u5dee\u5b66\u4e60\u601d\u60f3  </p> <p>EDSR\u7684\u6838\u5fc3\u4ef7\u503c\u5728\u4e8e\u5176\"\u5c11\u5373\u662f\u591a\"\u7684\u8bbe\u8ba1\u54f2\u5b66\u2014\u2014\u901a\u8fc7\u79fb\u9664BN\u5c42\u5b9e\u73b0\u6027\u80fd\u7a81\u7834\uff0c\u8fd9\u79cd\u53cd\u76f4\u89c9\u521b\u65b0\u5728\u5f53\u4eca\u5927\u6a21\u578b\u65f6\u4ee3\u4ecd\u5177\u542f\u793a\u610f\u4e49\u3002\u6539\u5199\u540e\u7684\u7248\u672c\u7a81\u51fa\u5176\u5386\u53f2\u5730\u4f4d\u548c\u73b0\u4ee3\u5173\u8054\uff0c\u7b26\u5408\u4f60\u8981\u6c42\u7684\"\u51cf\u5c11\u672f\u8bed\u3001\u589e\u5f3a\u6d1e\u89c1\u6027\"\u76ee\u6807\u3002</p>"},{"location":"Content/model/cnn/#11-carn","title":"11 CARN","text":""},{"location":"Content/model/cnn/#1-carn","title":"1. CARN \u57fa\u7840\u4fe1\u606f","text":"<p>\u8bba\u6587\u6807\u9898\uff1aFast, Accurate, and Lightweight Super-Resolution with Cascading Residual Network \u4f5c\u8005\uff1aNamhyuk Ahn, Byungkon Kang, Kyung-Ah Sohn \u4f1a\u8bae/\u671f\u520a\uff1aECCV (European Conference on Computer Vision) \u53d1\u8868\u65f6\u95f4\uff1a2018\u5e74  </p>"},{"location":"Content/model/cnn/#2_4","title":"2. \u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784","text":"<p>\u6838\u5fc3\u4f18\u52bf\uff1a \u9996\u6b21\u5b9e\u73b0\u5b9e\u65f6\u9ad8\u6e05\u8d85\u5206\u8fa8\u7387\uff08720p@30fps\uff09\uff0c\u5728\u53c2\u6570\u91cf\u51cf\u5c1170%\u7684\u60c5\u51b5\u4e0b\u8fbe\u5230\u4e0eEDSR\u76f8\u5f53\u7684PSNR\uff0c\u89e3\u51b3\u6df1\u5ea6\u6a21\u578b\u90e8\u7f72\u96be\u9898\u3002</p> <p>\u67b6\u6784\u521b\u65b0\uff1a 1. \u7ea7\u8054\u6b8b\u5dee\u5757\uff1a\u4e32\u8054\u591a\u4e2a\u6b8b\u5dee\u5757\u5e76\u878d\u5408\u4e2d\u95f4\u7279\u5f81\uff08RB1\u2192RB2\u2192RB3\uff09 2. \u7279\u5f81\u84b8\u998f\uff1a1\u00d71\u5377\u79ef\u538b\u7f29\u7ea7\u8054\u7279\u5f81\uff08concat\u2192conv1\u00d71\uff09 3. \u9ad8\u6548\u4e0a\u91c7\u6837\uff1a\u4e9a\u50cf\u7d20\u5377\u79ef\u66ff\u4ee3\u8f6c\u7f6e\u5377\u79ef \u5173\u952e\u6539\u8fdb\uff1a\u901a\u8fc7\u7279\u5f81\u590d\u7528\u673a\u5236\uff0c\u7528\u6d45\u5c42\u7f51\u7edc\u5b9e\u73b0\u6df1\u5c42\u7f51\u7edc\u7684\u8868\u8fbe\u80fd\u529b\u3002</p> <pre><code>class CascadingBlock(nn.Module):\n    def __init__(self, channels):\n        super(CascadingBlock, self).__init__()\n        # \u521b\u65b0\u70b91\uff1a\u7ea7\u8054\u6b8b\u5dee\u7ed3\u6784\uff083\u4e2a\u8fde\u7eed\u6b8b\u5dee\u5757\uff09\n        self.rb1 = ResidualBlock(channels)\n        self.rb2 = ResidualBlock(channels)\n        self.rb3 = ResidualBlock(channels)\n\n        # \u521b\u65b0\u70b92\uff1a1\u00d71\u5377\u79ef\u7279\u5f81\u84b8\u998f\uff08\u538b\u7f293\u00d7\u901a\u9053\u2192\u5355\u901a\u9053\uff09\n        self.conv = nn.Conv2d(channels*3, channels, 1)  \n\n    def forward(self, x):\n        x1 = self.rb1(x)    # \u521d\u7ea7\u7279\u5f81\n        x2 = self.rb2(x1)   # \u4e2d\u7ea7\u7279\u5f81\n        x3 = self.rb3(x2)   # \u9ad8\u7ea7\u7279\u5f81\n\n        # \u521b\u65b0\u70b93\uff1a\u8de8\u5c42\u7ea7\u8054\u7279\u5f81\u878d\u5408\n        concat = torch.cat([x1, x2, x3], dim=1)  \n        return self.conv(concat)  # \u2190 \u6838\u5fc3\u6539\u8fdb\uff1a\u7279\u5f81\u84b8\u998f\n\nclass CARN(nn.Module):\n    def __init__(self):\n        super(CARN, self).__init__()\n        self.entry = nn.Conv2d(3, 64, 3, padding=1)\n        # \u591a\u7ea7\u8054\u6a21\u5757\u5806\u53e0\uff08\u5178\u578b\u914d\u7f6e3-5\u4e2a\uff09\n        self.cascade1 = CascadingBlock(64)  \n        self.cascade2 = CascadingBlock(64)\n        self.cascade3 = CascadingBlock(64)\n        # \u521b\u65b0\u70b94\uff1a\u4e9a\u50cf\u7d20\u5377\u79ef\u4e0a\u91c7\u6837\uff08\u6548\u7387\u63d0\u53472\u500d\uff09\n        self.upsample = nn.PixelShuffle(2)  \n        self.exit = nn.Conv2d(16, 3, 3, padding=1)  \n\n    def forward(self, x):\n        x = self.entry(x)\n        x = self.cascade1(x)\n        x = self.cascade2(x)\n        x = self.cascade3(x)\n        x = self.upsample(x)  # \u9ad8\u6548\u4e0a\u91c7\u6837\n        return self.exit(x)    # \u53bb\u9664\u5197\u4f59\u8fd4\u56de\u53c2\u6570\n</code></pre>"},{"location":"Content/model/cnn/#3_4","title":"3. \u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u542f\u53d1","text":"<p>\u5f53\u524d\u5dee\u8ddd\uff1a 1. \u6027\u80fd\u74f6\u9888\uff1aPSNR\u6bd4SwinIR\u4f4e0.8-1.2dB\uff0c\u5c24\u5176\u5728\u9ad8\u500d\u653e\u5927\u573a\u666f 2. \u67b6\u6784\u5c40\u9650\uff1a\u7eaf\u5377\u79ef\u7ed3\u6784\u96be\u4ee5\u5efa\u6a21\u957f\u7a0b\u4f9d\u8d56\uff0c\u7eb9\u7406\u751f\u6210\u80fd\u529b\u5f31\u4e8e\u6269\u6563\u6a21\u578b  </p> <p>\u67b6\u6784\u542f\u53d1\uff1a 1. \u7279\u5f81\u590d\u7528\u673a\u5236\uff1a\u7ea7\u8054\u7279\u5f81\u878d\u5408\u601d\u60f3\u88ab\u7528\u4e8eTransformer\u7684\u8de8\u6ce8\u610f\u529b\u6a21\u5757 2. \u8f7b\u91cf\u7ea7\u8bbe\u8ba1\uff1a\u53c2\u6570\u91cf\u538b\u7f29\u65b9\u6cd5\u5f71\u54cdMobileViT\u7b49\u79fb\u52a8\u7aef\u6a21\u578b 3. \u5b9e\u65f6\u6027\u6846\u67b6\uff1a\u7aef\u5230\u7aef\u9ad8\u6548\u67b6\u6784\u4ecd\u662f\u89c6\u9891\u8d85\u5206\u57fa\u7840\u65b9\u6848  </p> <p>\u6539\u8fdb\u65b9\u5411\uff1a <pre><code>graph LR\nA[\u8f93\u5165LR] --&gt; B[\u7ea7\u8054\u6b8b\u5dee\u5757]\nB --&gt; C[\u591a\u5934\u81ea\u6ce8\u610f\u529b] \nC --&gt; D[\u52a8\u6001\u7279\u5f81\u84b8\u998f]\nD --&gt; E[\u4e9a\u50cf\u7d20\u5377\u79ef]\nE --&gt; F[\u8f93\u51faHR]</code></pre> \u5f53\u4ee3\u878d\u5408\u5efa\u8bae\uff1a\u5728CARN\u7ea7\u8054\u5757\u4e2d\u63d2\u5165\u8f7b\u91cf\u81ea\u6ce8\u610f\u529b\u6a21\u5757\uff0c\u7ed3\u5408\u52a8\u6001\u5377\u79ef\u66ff\u4ee3\u9759\u60011\u00d71\u538b\u7f29\uff0c\u53ef\u63d0\u5347\u7eb9\u7406\u751f\u6210\u80fd\u529b\u540c\u65f6\u4fdd\u6301\u5b9e\u65f6\u6027\u3002</p>"},{"location":"Content/model/cnn/#_5","title":"\u6a21\u578b\u7ed3\u6784\u56fe","text":"<pre><code>graph TD\n    A[\u8f93\u5165LR] --&gt; B[\u5165\u53e3\u5377\u79ef]\n    B --&gt; C1[\u7ea7\u8054\u6b8b\u5dee\u57571]\n    C1 --&gt;|\u7279\u5f81\u878d\u5408| C2[\u7ea7\u8054\u6b8b\u5dee\u57572]\n    C2 --&gt;|\u7279\u5f81\u878d\u5408| C3[\u7ea7\u8054\u6b8b\u5dee\u57573]\n    C3 --&gt; D[\u4e9a\u50cf\u7d20\u5377\u79ef\u4e0a\u91c7\u6837]\n    D --&gt; E[\u51fa\u53e3\u5377\u79ef]\n    E --&gt; F[\u8f93\u51faHR]\n\n    subgraph \u7ea7\u8054\u6b8b\u5dee\u5757\u7ed3\u6784\n    C1 --&gt; RB1[\u6b8b\u5dee\u57571]\n    RB1 --&gt; RB2[\u6b8b\u5dee\u57572]\n    RB2 --&gt; RB3[\u6b8b\u5dee\u57573]\n    RB1 &amp; RB2 &amp; RB3 --&gt; Concat[\u7279\u5f81\u62fc\u63a5]\n    Concat --&gt; Conv1x1[1\u00d71\u5377\u79ef\u538b\u7f29]\n    end</code></pre>"},{"location":"Content/model/cnn/#12-rcan","title":"12 RCAN","text":"<p>\u89c1transformer</p>"},{"location":"Content/model/cnn/#13-san-han","title":"13 SAN / HAN","text":"<p>\u89c1transformer</p>"},{"location":"Content/model/cnn/#14-cnntransformer","title":"14 CNN+Transformer","text":"<p>\u89c1transformer</p>"},{"location":"Content/model/cnn/#15-cnndiffusion","title":"15 CNN+Diffusion","text":"<p>\u89c1diffusion</p> <p>\u4f60\u662f\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u7684\u7814\u7a76\u8005\u4e0e\u4f18\u79c0\u7684blog\u4f5c\u8005\uff0c\u8d1f\u8d23\u64b0\u5199\u5173\u4e8eCNN\u7c7b\u6a21\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u6587\u6863\u3002</p> <p>\u8bf7\u5e2e\u6211\u4fee\u6539\u6211\u7684blog\uff0c\u6211\u8ba4\u4e3a\u5b83\u4eec\u592a\u5197\u957f\u3001\u7f3a\u4e4f\u91cd\u70b9\u4eae\u70b9\uff0c\u5e76\u4e14\u6700\u91cd\u8981\u7684\uff0cAI\u5473\u592a\u91cd\u4e86\u3002</p> <p>\u6211\u7684\u6bcf\u4e2a\u6a21\u578b\u53ea\u9700\u8981\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ol> <li>\u6a21\u578b\u57fa\u7840\u4fe1\u606f\uff08\u8bba\u6587\u6807\u9898\u3001\u4f5c\u8005\u3001\u4f1a\u8bae/\u671f\u520a\u540d\u79f0\u53ca\u53d1\u8868\u65f6\u95f4\uff09</li> <li>\u8fd9\u4e2a\u6a21\u578b\u7684\u6838\u5fc3\u7279\u70b9\u4ee5\u53ca\u6838\u5fc3\u67b6\u6784\u3002\u53ef\u4ee5\u7528\u4e00\u4e24\u53e5\u8bdd\u8fdb\u884c\u6982\u62ec\u5b83\u7684\u4f18\u52bf\uff0c\u8bf4\u8bf4\u5b83\u76f8\u5bf9\u4e8e\u4e4b\u524d\u7684\u6a21\u578b\u6709\u4ec0\u4e48\u6837\u7684\u7a81\u51fa\u4f18\u52bf\uff1b\u518d\u7528\u4e00\u4e24\u53e5\u8bdd\u63cf\u8ff0\u5b83\u7684\u6846\u67b6\uff0c\u5728\u4e4b\u524d\u7684\u6a21\u578b\u7684\u57fa\u7840\u4e0a\u505a\u4e86\u4ec0\u4e48\u6837\u7684\u4fee\u6539\uff0c\u4e3a\u4ec0\u4e48\u80fd\u6709\u8fd9\u6837\u7684\u4f18\u52bf\uff1b\u6700\u540e\u518d\u7ed9\u51fa\u8fd9\u4e2a\u6a21\u578b\u7684\u4ee3\u7801\uff0c\u8be6\u7ec6\u6ce8\u91ca\u6807\u6ce8\u51fa\u5728\u90a3\u4e2a\u5730\u65b9\u505a\u4e86\u91cd\u8981\u7684\u6539\u53d8\u3002</li> <li>\u8fd9\u4e2a\u6a21\u578b\u7684\u65f6\u4ee3\u5c40\u9650\u6027\uff0c\u8df3\u5230\u5f53\u4eca\uff0ctransformer\u4ee5\u53cadiffusion\u76db\u884c\u7684\u65f6\u4ee3\uff0c\u7528\u4e00\u4e24\u53e5\u8bdd\u8bf4\u8bf4\uff1a1\uff09\u8fd9\u4e2a\u6a21\u578b\u4e0e\u73b0\u5728\u6700\u5f3a\u7684\u6a21\u578b\u7684\u5dee\u8ddd\uff0c\u4e0e\u73b0\u5728\u6700\u5389\u5bb3\u7684\u6a21\u578b\u76f8\u662f\u5426\u8fd8\u6709\u7ade\u4e89\u529b\uff1b2\uff09\u5c31\u7b97\u5df2\u7ecf\u6ca1\u6709\u7ade\u4e89\u529b\uff0c\u4ece\u6a21\u578b\u67b6\u6784\u4ee5\u53ca\u6539\u8fdb\u601d\u8def\u65b9\u9762\uff0c\u6709\u54ea\u4e9b\u501f\u9274\u610f\u4e49\uff0c\u5e76\u4e14\u7ed9\u51fa\u5bf9\u73b0\u6709\u6a21\u578b\u7684\u4e00\u4e9b\u6539\u8fdb\u601d\u8def\u3002</li> </ol> <p>\u6700\u540e\uff0c\u7528\u4f60\u64c5\u957f\u7684\u4f5c\u56fe\u8bed\u8a00\u753b\u51fa\u8fd9\u4e2a\u6a21\u578b\u7684\u7ed3\u6784\u56fe\uff0c\u8ba9\u6211\u80fd\u591f\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u3002</p> <p>\u4f60\u9700\u8981\u4e66\u5199\u7684\u7b2c\u4e09\u4e2ablog\uff1aDRCN</p> <p>\u4f60\u662f\u4e00\u4e2aAI\u9ad8\u7ea7\u5de5\u7a0b\u5e08\uff0c\u4e3b\u653b\u673a\u5668\u5b66\u4e60\u8d85\u5206\u8fa8\u6280\u672f\u3002\u4f60\u81ea\u5df1\u642d\u5efa\u4e86\u4e00\u5957 data - initialize - train - evaluate \u4ee3\u7801\u6846\u67b6\uff0c\u53eb\u505aLHAI\u3002\u8fd9\u5957\u6846\u67b6\u5904\u7406\u7684\u662f\u5929\u6587\u56fe\u50cf\u8d85\u5206\u8fa8\uff0c\u8d85\u5206\u8fa8\u524d\u540escale\u4e0d\u53d8\u3002\u76ee\u524d\u8fd9\u5957\u6846\u67b6\u53ea\u652f\u6301cnn\u6a21\u578b\uff0c\u4f60\u8981\u505a\u7684\u662f\u5c06cnn\u81f3\u4eca\u7684\u6240\u6709\u8d85\u5206\u8fa8\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u90fd\u79fb\u690d\u5230\u4f60\u4eec\u7684\u6846\u67b6\u5185\u3002</p> <p>\u76f8\u5173\u4ecb\u7ecd - \u6570\u636e\u5b58\u50a8\u65b9\u5f0f\uff1a\u672c\u6570\u636e\u96c6\u4ee5 NumPy \u6570\u7ec4\uff08.npy\uff09\u683c\u5f0f\u5b58\u50a8\uff0c\u6570\u636e\u7ed3\u6784\u4e3a\u56db\u7ef4\u6570\u7ec4 (N, 2, H, W)\uff0c\u5176\u4e2d N \u8868\u793a\u6837\u672c\u6570\u91cf\uff0cH \u548c W \u5206\u522b\u4e3a\u56fe\u50cf\u7684\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\uff0864*64\uff09\u3002\u6bcf\u4e2a\u6837\u672c\u5305\u542b\u4e00\u5bf9\u56fe\u50cf\uff0c\u6309\u987a\u5e8f\u5b58\u50a8\u4e3a\u6e05\u6670\u56fe\u50cf\u4e0e\u6a21\u7cca\u56fe\u50cf\uff0c\u5373\u7ef4\u5ea6\u7d22\u5f15\u4e3a 0 \u7684\u56fe\u50cf\u4e3a\u6e05\u6670\u56fe\uff08\u5982\u9ad8\u5206\u8fa8\u7387\u6216\u53c2\u8003\u56fe\uff09\uff0c\u7d22\u5f15\u4e3a 1 \u7684\u56fe\u50cf\u4e3a\u5bf9\u5e94\u7684\u6a21\u7cca\u56fe\uff08\u5982\u4f4e\u5206\u8fa8\u7387\u6216\u9000\u5316\u56fe\uff09\u3002\u6211\u4eec\u7528\u7684\u56fe\u50cf\u5c3a\u5bf8\u89c4\u5b9a\u4e3a64*64\u3002</p> <p>\u6ce8\u610f\uff1a 1.\u4f60\u53ea\u9700\u8981\u5199modle\u90e8\u5206\uff0c\u8bf7\u4fdd\u6301model\u7684\u8f93\u5165\u8f93\u51fa\u4e0e\u7ed9\u7684\u793a\u4f8bcnn\u4e00\u81f4\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u6301\u6a21\u578b\u901a\u7545\u6027\u3002\u5982\u679c\u6709\u5176\u4ed6\u65b0\u7684\u5fc5\u8981\u8f93\u5165\u8f93\u51fa\uff0c\u8bf7\u52a1\u5fc5\u544a\u77e5\u6211\u3002 2. \u4e3a\u4e86\u4fdd\u6301\u5bf9\u6bcf\u4e2a\u6a21\u578b\u7684\u7406\u89e3\u6df1\u5ea6\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6a21\u578b\u7684\u6838\u5fc3\u6539\u53d8\u4e0e\u6838\u5fc3\u601d\u8def\u3001\u4e0ecnn\u548c\u5176\u4ed6\u6a21\u578b\u7684\u4e0d\u540c\u3001\u6838\u5fc3\u7279\u8272\u7b49\u4fe1\u606f\u7ed9\u51fa\uff0c\u4ee5\u53ca\u63d0\u51fa\u8fd9\u4e2a\u6a21\u578b\u7684\u6587\u7ae0\u3001\u53d1\u5e03\u65f6\u95f4\u7b49\u57fa\u672c\u4fe1\u606f\u3002</p> <ol> <li>cnn model \u793a\u4f8b\uff1a</li> </ol> <p>import torch import torch.nn as nn import torch.nn.functional as F</p> <p>class CNN(nn.Module):     def init(self,jpt):         super(CNN, self).init()         self.conv1 = nn.Conv2d(1, 64, kernel_size=9, padding=4)         self.conv2 = nn.Conv2d(64, 32, kernel_size=5, padding=2)         self.conv3 = nn.Conv2d(32, 1, kernel_size=5, padding=2)</p> <pre><code>def forward(self, x):\n    x = F.relu(self.conv1(x))\n    x = F.relu(self.conv2(x))\n    x = self.conv3(x)\n    return x,0,0\n</code></pre> <p>\u597d\u7684\uff0c\u73b0\u5728\u5f00\u59cbEDSR\u6a21\u578b\u3002\u6211\u5728github\u4e0a\u4e5f\u627e\u5230\u4e86CARN\u7684\u4e00\u4e2a\u76f8\u5173\u4ee3\u7801\uff0c\u4f46\u662f\u6709\u4e9b\u8bb8\u4e0d\u540c\uff1a\u5b83\u652f\u6301\u4e0d\u540cscale\uff0c\u56e0\u6b64\u66f4\u4e3a\u590d\u6742\u3002\u4f60\u9700\u8981\uff1a</p> <ol> <li>\u68c0\u67e5\u5176\u662f\u5426\u4e3aEDSR\u6a21\u578b\uff0c\u68c0\u67e5\u4ee3\u7801\u662f\u5426\u6709\u9519\u8bef\uff0c\u68c0\u67e5\u8be5\u7f51\u7edc\u7ed3\u6784\u662f\u5426\u80fd\u53d1\u6325EDSR\u7684\u6a21\u578b\u6027\u80fd\u3002</li> <li>\u5c06scale\u90e8\u5206\u90fd\u5220\u9664\uff0c\u5e76\u4e14\u9ed8\u8ba4\u662f\u4e0d\u53d8\u5316\u56fe\u50cf\u5927\u5c0f\u7684\u8f93\u5165\u8f93\u51fa\uff1b</li> <li>\u6839\u636e\u5b83\u7684\u601d\u8def\uff0c\u4fdd\u7559\u8fd9\u90e8\u5206\u4ee3\u7801\u5185\u5173\u4e8e\u7f51\u7edc\u7ed3\u6784\u7684\u90e8\u5206\uff1b\u7b80\u5316\u5176\u4e0d\u5fc5\u8981\u7684\u90e8\u5206\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u4e00\u60ef\u6027\u3001\u4f18\u7f8e\u6027\u548c\u53ef\u8bfb\u6027\uff0c\u66f4\u52a0\u6d41\u7545\uff1b</li> <li>\u4fdd\u7559Activation\u51fd\u6570\u3002</li> </ol> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p>import torch.nn as nn</p> <p>class Activation(nn.Module):     def init(self, act_type, **kwargs):         super(Activation, self).init()         activation_hub = {'relu': nn.ReLU,             'relu6': nn.ReLU6,                           'leakyrelu': nn.LeakyReLU,    'prelu': nn.PReLU,                           'celu': nn.CELU,              'elu': nn.ELU,                            'hardswish': nn.Hardswish,    'hardtanh': nn.Hardtanh,                           'gelu': nn.GELU,              'glu': nn.GLU,                            'selu': nn.SELU,              'silu': nn.SiLU,                           'sigmoid': nn.Sigmoid,        'softmax': nn.Softmax,                            'tanh': nn.Tanh,              'none': nn.Identity,                         }</p> <pre><code>    act_type = act_type.lower()\n    if act_type not in activation_hub.keys():\n        raise NotImplementedError(f'Unsupport activation type: {act_type}')\n\n    self.activation = activation_hub[act_type](**kwargs)\n\ndef forward(self, x):\n    return self.activation(x)\n</code></pre> <p>class ConvAct(nn.Sequential):     def init(self, in_channels, out_channels, kernel_size=3, stride=1, dilation=1,                      groups=1, bias=True, act_type='relu', **kwargs):         if isinstance(kernel_size, list) or isinstance(kernel_size, tuple):             padding = ((kernel_size[0] - 1) // 2 * dilation, (kernel_size[1] - 1) // 2 * dilation)         elif isinstance(kernel_size, int):               padding = (kernel_size - 1) // 2 * dilation</p> <pre><code>    super(ConvAct, self).__init__(\n        nn.Conv2d(in_channels, out_channels, kernel_size, stride, padding, dilation, groups, bias),\n        Activation(act_type, **kwargs)\n    )\n</code></pre> <p>class Upsample(nn.Module):     def init(self, in_channels, out_channels, scale_factor=2, upsample_type=None,                      kernel_size=None,):         super(Upsample, self).init()         if upsample_type == 'deconvolution':             if kernel_size is None:                 kernel_size = 2*scale_factor + 1             padding = (kernel_size - 1) // 2             output_padding = scale_factor - 1             self.up_conv = nn.ConvTranspose2d(in_channels, out_channels, kernel_size=kernel_size,                                                  stride=scale_factor, padding=padding,                                                  output_padding=output_padding, bias=True)         elif upsample_type == 'pixelshuffle':             ks = kernel_size if kernel_size is not None else 3             padding = (ks - 1) // 2             self.up_conv = nn.Sequential(                                 nn.Conv2d(in_channels, out_channels * (scale_factor**2), ks, 1, padding),                                 nn.PixelShuffle(scale_factor)                             )         else:             ks = kernel_size if kernel_size is not None else 3             padding = (ks - 1) // 2             self.up_conv = nn.Sequential(                                 nn.Conv2d(in_channels, out_channels, ks, 1, padding),                                 nn.Upsample(scale_factor=scale_factor, mode='bicubic')                             )</p> <pre><code>def forward(self, x):\n    return self.up_conv(x)\n</code></pre> <p>def conv3x3(in_channels, out_channels, stride=1):     return nn.Conv2d(in_channels, out_channels, kernel_size=3, stride=stride,                      padding=1, bias=True)</p> <p>class ResidualBlock(nn.Module):     def init(self, channels, scale_factor, act_type):         super(ResidualBlock, self).init()         self.scale_factor = scale_factor         self.conv = nn.Sequential(                         ConvAct(channels, channels, 3, act_type=act_type),                         conv3x3(channels, channels)                     )</p> <pre><code>def forward(self, x):\n    residual = x\n    x = self.conv(x)\n    if self.scale_factor &lt; 1:\n        x = x * self.scale_factor\n    x += residual\n\n    return x\n</code></pre> <p>class EDSR(nn.Module):     def init(self, in_channels, out_channels, upscale, B=16, F=64, scale_factor=None,                      act_type='relu', upsample_type='pixelshuffle'):         super(EDSR, self).init()         if scale_factor is None:             scale_factor = 0.1 if B &gt; 16 else 1.0</p> <pre><code>    self.first_layer = conv3x3(in_channels, F)\n\n    layers = []\n    for _ in range(B):\n        layers.append(ResidualBlock(F, scale_factor, act_type))\n    self.res_layers = nn.Sequential(*layers)\n\n    self.mid_layer = conv3x3(F, F)\n    self.last_layers = nn.Sequential(\n                            Upsample(F, F, upscale, upsample_type, 3),\n                            conv3x3(F, out_channels)\n                        )\n\ndef forward(self, x):\n    x = self.first_layer(x)\n    residual = x\n    x = self.res_layers(x)\n    x = self.mid_layer(x)\n    x += residual\n    x = self.last_layers(x)\n    return x\n</code></pre>"},{"location":"Content/model/diffusion/","title":"DIFFUSION \u7c7b\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"Content/model/diffusion/#1","title":"1 \u6269\u6563\u6a21\u578b\u8d85\u5206\u8fa8\u7387\u53d1\u5c55\u6846\u67b6","text":"<pre><code>graph TD\n    DDPM[2020 DDPM\\n\u53bb\u566a\u6269\u6563\u6982\u7387\u6a21\u578b\u5960\u57fa]\n    SR3[2021 SR3\\n\u9996\u4e2a\u6269\u6563\u8d85\u5206\u6a21\u578b]\n    CDM[2021 CDM\\n\u7ea7\u8054\u6269\u6563\u6a21\u578b]\n    LDM[2022 LDM\\n\u6f5c\u5728\u6269\u6563\u6a21\u578b]\n    SRDiff[2022 SRDiff\\n\u6761\u4ef6\u6269\u6563\u8d85\u5206]\n    DiffIR[2023 DiffIR\\nTransformer\u5f15\u5bfc\u6269\u6563]\n    DDNM[2023 DDNM\\n\u96f6\u6837\u672c\u6269\u6563\u8d85\u5206]\n    ResDiff[2023 ResDiff\\n\u6b8b\u5dee\u6269\u6563\u67b6\u6784]\n    DiffBIR[2024 DiffBIR\\n\u76f2\u590d\u539f\u6269\u6563\u6a21\u578b]\n\n    DDPM --&gt; SR3\n    SR3 --&gt; CDM\n    CDM --&gt; LDM\n    LDM --&gt; SRDiff\n    SRDiff --&gt; DiffIR\n    SRDiff --&gt; DDNM\n    DDNM --&gt; DiffBIR\n    CDM --&gt; ResDiff</code></pre>"},{"location":"Content/model/diffusion/#2-diffusion","title":"2 DIFFUSION \u6838\u5fc3\u7279\u8272\u4e0e\u539f\u7406","text":"<p>\u6269\u6563\u6a21\u578b\uff08Diffusion Model\uff09\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a \u9010\u6b65\u52a0\u566a \u2192 \u5b66\u4e60\u53bb\u566a \u7684\u751f\u6210\u6846\u67b6\uff0c\u901a\u8fc7\u53cd\u5411\u6269\u6563\u8fc7\u7a0b\u4ece\u566a\u58f0\u91cd\u6784\u51fa\u6e05\u6670\u56fe\u50cf\u3002\u5b83\u7684\u6838\u5fc3\u6784\u6210\u53ef\u6d53\u7f29\u4e3a \u56db\u5927\u652f\u67f1\uff1a</p> <ol> <li>\u524d\u5411\u6269\u6563\u8fc7\u7a0b\uff08Forward Diffusion Process\uff09 \u2014\u2014 \u5c06\u771f\u5b9e\u56fe\u50cf\u9010\u6b65\u52a0\u566a\u81f3\u9ad8\u65af\u566a\u58f0</li> <li>\u53cd\u5411\u751f\u6210\u8fc7\u7a0b\uff08Reverse Process\uff09 \u2014\u2014 \u5b66\u4e60\u4ece\u566a\u58f0\u9010\u6b65\u53bb\u566a\u91cd\u5efa\u56fe\u50cf</li> <li>\u65f6\u95f4\u6b65\u6761\u4ef6\u7f16\u7801\uff08Timestep Embedding\uff09 \u2014\u2014 \u8868\u793a\u5f53\u524d\u751f\u6210\u8fc7\u7a0b\u7684\u8fdb\u5ea6</li> <li>\u6761\u4ef6\u63a7\u5236\u673a\u5236\uff08Conditional Guidance\uff09 \u2014\u2014 \u5c06\u8d85\u5206\u6216\u5176\u4ed6\u6761\u4ef6\u4fe1\u606f\u5f15\u5165\u53bb\u566a\u8fc7\u7a0b</li> </ol>"},{"location":"Content/model/diffusion/#21-forward-process","title":"2.1 \u524d\u5411\u6269\u6563\u8fc7\u7a0b\uff08Forward Process\uff09","text":"<p>\u601d\u60f3</p> <p>\u524d\u5411\u8fc7\u7a0b\u662f\u4e00\u4e2a\u56fa\u5b9a\u7684\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u5c06\u6570\u636e\u5206\u5e03 \\(x_0\\) \u9010\u6b65\u52a0\u566a\u81f3\u5404\u5411\u540c\u6027\u9ad8\u65af\u5206\u5e03 \\(x_T \\sim \\mathcal{N}(0, I)\\)\u3002 \u8fd9\u6837\uff0c\u6a21\u578b\u53ea\u9700\u5b66\u4e60\u9006\u8fc7\u7a0b\u5373\u53ef\u751f\u6210\u56fe\u50cf\u3002</p> <p>\u6570\u5b66\u539f\u7406</p> <p>\u524d\u5411\u8fc7\u7a0b\u5b9a\u4e49\u4e3a\uff1a</p> \\[ q(x_t | x_{t-1}) = \\mathcal{N}\\left(x_t; \\sqrt{1-\\beta_t} \\, x_{t-1}, \\beta_t I \\right) \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>\\(t \\in \\{1, \\dots, T\\}\\) \u4e3a\u65f6\u95f4\u6b65</li> <li>\\(\\beta_t\\) \u4e3a\u566a\u58f0\u5f3a\u5ea6\u8c03\u5ea6\uff08Noise Schedule\uff09</li> </ul> <p>\u7531\u4e8e\u9ad8\u65af\u7684\u53ef\u4f20\u9012\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199\u6210\uff1a</p> \\[ q(x_t | x_0) = \\mathcal{N}\\left(x_t; \\sqrt{\\bar{\\alpha}_t} \\, x_0, (1-\\bar{\\alpha}_t)I \\right) \\] <p>\u5176\u4e2d\uff1a</p> \\[ \\alpha_t = 1 - \\beta_t, \\quad \\bar{\\alpha}_t = \\prod_{s=1}^t \\alpha_s \\]"},{"location":"Content/model/diffusion/#22-reverse-process","title":"2.2 \u53cd\u5411\u751f\u6210\u8fc7\u7a0b\uff08Reverse Process\uff09","text":"<p>\u601d\u60f3</p> <p>\u53cd\u5411\u8fc7\u7a0b\u662f\u53e6\u4e00\u4e2a\u9a6c\u5c14\u53ef\u592b\u94fe\uff0c\u76ee\u6807\u662f\u4f30\u8ba1\uff1a</p> \\[ p_\\theta(x_{t-1} | x_t) = \\mathcal{N}\\left(x_{t-1}; \\mu_\\theta(x_t, t), \\Sigma_\\theta(x_t, t) \\right) \\] <p>\u5176\u4e2d \\(\\mu_\\theta\\) \u7531\u795e\u7ecf\u7f51\u7edc\uff08\u5982 U-Net\u3001Transformer\uff09\u9884\u6d4b\u3002</p> <p>\u4e3a\u4e86\u7b80\u5316\u8bad\u7ec3\uff0cDDPM \u5c06 \\(\\mu_\\theta\\) \u6539\u4e3a\u9884\u6d4b\u566a\u58f0 \\(\\epsilon_\\theta(x_t, t)\\)\uff0c\u5e76\u76f4\u63a5\u4f18\u5316\uff1a</p> \\[ \\mathcal{L}_{\\text{simple}} = \\mathbb{E}_{x_0, \\epsilon, t}\\left[ \\| \\epsilon - \\epsilon_\\theta(x_t, t) \\|_2^2 \\right] \\] <p>\u8fd9\u6837\uff0c\u6a21\u578b\u5b66\u4f1a\u5728\u4efb\u610f\u65f6\u95f4\u6b65\u53bb\u9664\u566a\u58f0\u3002</p>"},{"location":"Content/model/diffusion/#23-timestep-embedding","title":"2.3 \u65f6\u95f4\u6b65\u6761\u4ef6\u7f16\u7801\uff08Timestep Embedding\uff09","text":"<p>\u7531\u4e8e\u53bb\u566a\u8fc7\u7a0b\u4f9d\u8d56\u65f6\u95f4\u6b65 \\(t\\)\uff0c\u9700\u8981\u5c06 \\(t\\) \u6620\u5c04\u4e3a\u7279\u5f81\u5411\u91cf\u5e76\u6ce8\u5165\u7f51\u7edc\uff1a</p> <ul> <li>\u6b63\u4f59\u5f26\u7f16\u7801\uff08\u7c7b\u4f3c Transformer \u4f4d\u7f6e\u7f16\u7801\uff09\uff1a</li> </ul> \\[ \\text{TE}_{(t, 2i)} = \\sin\\left(\\frac{t}{10000^{2i/d}}\\right), \\quad \\text{TE}_{(t, 2i+1)} = \\cos\\left(\\frac{t}{10000^{2i/d}}\\right) \\] <ul> <li>\u6216 \u53ef\u5b66\u4e60\u5d4c\u5165\uff08Learnable Embedding\uff09</li> </ul>"},{"location":"Content/model/diffusion/#24-conditional-guidance","title":"2.4 \u6761\u4ef6\u63a7\u5236\u673a\u5236\uff08Conditional Guidance\uff09","text":"<p>\u5728\u8d85\u5206\u4efb\u52a1\u4e2d\uff0c\u6a21\u578b\u9664\u4e86\u63a5\u6536\u566a\u58f0\u8f93\u5165 \\(x_t\\)\uff0c\u8fd8\u4f1a\u63a5\u6536\u4f4e\u5206\u8fa8\u7387\u56fe\u50cf \\(y\\) \u4f5c\u4e3a\u6761\u4ef6\uff1a</p> \\[ \\epsilon_\\theta(x_t, t, y) \\] <p>\u5e38\u89c1\u65b9\u5f0f\uff1a</p> <ul> <li>\u76f4\u63a5\u62fc\u63a5\uff08\u5728\u901a\u9053\u7ef4\u5ea6\u62fc\u63a5 \\(x_t\\) \u4e0e\u4e0a\u91c7\u6837\u540e\u7684 \\(y\\)\uff09</li> <li>\u6761\u4ef6\u7f16\u7801\uff08\u5c06 \\(y\\) \u7f16\u7801\u540e\u4f5c\u4e3a\u9644\u52a0\u8f93\u5165\u6ce8\u5165\u7f51\u7edc\u7279\u5f81\u5c42\uff09</li> </ul> <p>\u8fd9\u79cd\u673a\u5236\u786e\u4fdd\u53bb\u566a\u8fc7\u7a0b\u53d7\u4f4e\u5206\u8fa8\u7387\u56fe\u50cf\u7ea6\u675f\uff0c\u751f\u6210\u7684\u9ad8\u5206\u8fa8\u7387\u56fe\u50cf\u65e2\u7b26\u5408\u6570\u636e\u5206\u5e03\uff0c\u53c8\u4e0e\u8f93\u5165\u4e00\u81f4\u3002</p>"},{"location":"Content/model/diffusion/#25-pytorch","title":"2.5 PyTorch \u6838\u5fc3\u5b9e\u73b0\u793a\u4f8b","text":"<pre><code>import torch\nimport torch.nn as nn\n\nclass SimpleDDPM(nn.Module):\n    def __init__(self, model, betas):\n        super().__init__()\n        self.model = model  # U-Net or Transformer\n        self.betas = betas\n        self.alphas = 1.0 - betas\n        self.alpha_bars = torch.cumprod(self.alphas, dim=0)\n\n    def forward_diffusion(self, x0, t):\n        noise = torch.randn_like(x0)\n        sqrt_alpha_bar = self.alpha_bars[t] ** 0.5\n        sqrt_one_minus = (1 - self.alpha_bars[t]) ** 0.5\n        xt = sqrt_alpha_bar[:, None, None, None] * x0 + \\\n             sqrt_one_minus[:, None, None, None] * noise\n        return xt, noise\n\n    def p_loss(self, x0, t):\n        xt, noise = self.forward_diffusion(x0, t)\n        pred_noise = self.model(xt, t)\n        return torch.mean((noise - pred_noise) ** 2)\n</code></pre>"},{"location":"Content/model/diffusion/#26-cnn","title":"2.6 \u6838\u5fc3\u603b\u7ed3\uff08\u5bf9\u6807 CNN\uff09","text":"\u6a21\u5757\u529f\u80fd CNN \u5bf9\u5e94 Diffusion \u5bf9\u5e94 \u7279\u5f81\u63d0\u53d6 \u5377\u79ef\u6838\u63d0\u53d6\u5c40\u90e8\u6a21\u5f0f \u53bb\u566a\u7f51\u7edc\u63d0\u53d6\u5e76\u8fd8\u539f\u4fe1\u53f7 \u751f\u6210\u903b\u8f91 \u524d\u5411\u5377\u79ef\u6620\u5c04 \u9010\u6b65\u53bb\u566a\u91cd\u5efa \u6761\u4ef6\u63a7\u5236 \u8f93\u5165\u901a\u9053\u5806\u53e0 \u6761\u4ef6\u5f15\u5bfc\uff08Conditional Guidance\uff09 \u65f6\u95f4\u63a7\u5236 \u56fa\u5b9a\u6df1\u5ea6\u7f51\u7edc \u65f6\u95f4\u6b65\u5d4c\u5165 <p>\u4e00\u53e5\u8bdd\u6838\u5fc3\uff1a CNN \u662f\u4e00\u6b21\u6027\u6620\u5c04\uff0cDiffusion \u662f\u9010\u6b65\u751f\u6210\uff1bCNN \u4e13\u6ce8\u5c40\u90e8\u5377\u79ef\uff0cDiffusion \u901a\u8fc7\u591a\u6b65\u53bb\u566a\u5efa\u6a21\u5168\u5c40\u5206\u5e03\u3002</p> <p>\u7531\u9ad8\u65af\u6a21\u7cca\uff0c\u6a21\u62df\u52a0\u566a\u8fc7\u7a0b</p> <p>\u7136\u540e\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\uff0c\u8ba9\u5b83\u80fd\u591f\u4ece\u566a\u58f0\u4e2d\u6062\u590d\u51fa\u539f\u59cb\u56fe\u50cf/\u6216\u8005\u80fd\u591f\u62df\u5408\u51fa\u566a\u58f0</p> <p>\u8fd9\u6837\u5c31\u80fd\u5f97\u5230\u6e05\u6670\u7684\u56fe\u50cf\u3002</p> <p>\u8fd9\u4e2a\u6a21\u578b\uff0c\u53ef\u4ee5\u662f CNN\uff0c\u53ef\u4ee5\u662f U-Net\uff0c\u4e5f\u53ef\u4ee5\u662fTransformer\u3002</p> <p>\u56e0\u6b64\u8bf4\uff0cDIFFUSION\u548cCNN\\Transformer\u4e0d\u662f\u4e00\u4e2a\u7ef4\u5ea6\u7684\u4e1c\u897f\uff0c\u5b83\u662f\u4e00\u79cd\u8bad\u7ec3\u8303\u5f0f\uff0c\u800c\u540e\u8005\u662f\u5177\u4f53\u7684\u7f51\u7edc\u67b6\u6784\u3002\u5b83\u4eec\u53ef\u4ee5\u5f88\u597d\u7684\u7ec4\u5408\u8d77\u6765\u3002</p>"},{"location":"Content/model/diffusion/#2","title":"2 \u5173\u952e\u9636\u6bb5\u4e0e\u6280\u672f\u7a81\u7834","text":"<ol> <li> <p>\u57fa\u7840\u7406\u8bba\u9636\u6bb5 </p> <ul> <li>DDPM (2020 NeurIPS)\uff1a\u5efa\u7acb\u524d\u5411\u52a0\u566a/\u53cd\u5411\u53bb\u566a\u7684\u5b8c\u6574\u7406\u8bba\u6846\u67b6  </li> <li>ScoreSDE (2021 ICLR)\uff1a\u5f15\u5165\u968f\u673a\u5fae\u5206\u65b9\u7a0b\u7edf\u4e00\u89c6\u89d2</li> </ul> </li> <li> <p>\u8d85\u5206\u5e94\u7528\u63a2\u7d22 </p> <ul> <li>SR3 (2021 arXiv)\uff1a\u9996\u6b21\u5c06\u6269\u6563\u6a21\u578b\u7528\u4e8e\u8d85\u5206\uff0c\u91c7\u7528\u7ea7\u8054\u566a\u58f0\u9884\u6d4b <pre><code># \u5178\u578b\u566a\u58f0\u9884\u6d4b\u7f51\u7edc\u7ed3\u6784\nclass Unet(nn.Module):\n    def __init__(self):\n        self.down_blocks = nn.ModuleList([DownsampleBlock(...)])\n        self.up_blocks = nn.ModuleList([UpsampleBlock(...)])\n        self.time_embed = SinusoidalPosEmb(dim)\n</code></pre></li> </ul> </li> <li> <p>\u6548\u7387\u4f18\u5316 </p> <ul> <li>LDM (2022 CVPR)\uff1a\u5728\u6f5c\u5728\u7a7a\u95f4\u8fdb\u884c\u6269\u6563\uff0c\u8ba1\u7b97\u91cf\u51cf\u5c1110\u500d  </li> <li>DDNM (2023 CVPR)\uff1a\u96f6\u6837\u672c\u8d85\u5206\uff0c\u65e0\u9700\u8bad\u7ec3\u6570\u636e</li> </ul> </li> <li> <p>\u878d\u5408\u521b\u65b0 </p> <ul> <li>DiffIR (2023 ICCV)\uff1a\u7528Transformer\u9884\u6d4b\u6269\u6563\u8fc7\u7a0b\u7684\u6ce8\u610f\u529b\u56fe  </li> <li>DiffBIR (2024 CVPR)\uff1a\u89e3\u51b3\u76f2\u8d85\u5206\u95ee\u9898\uff08\u8054\u5408\u53bb\u566a+\u8d85\u5206\uff09</li> </ul> </li> </ol>"},{"location":"Content/model/diffusion/#3-cnntransformer","title":"3 \u4e0eCNN/Transformer\u6846\u67b6\u7684\u5bf9\u5e94\u5173\u7cfb","text":"\u6280\u672f\u7ef4\u5ea6 CNN\u65f6\u4ee3 Transformer\u65f6\u4ee3 Diffusion\u65f6\u4ee3 \u6838\u5fc3\u673a\u5236 \u5c40\u90e8\u5377\u79ef \u5168\u5c40\u6ce8\u610f\u529b \u8fed\u4ee3\u53bb\u566a \u8bad\u7ec3\u76ee\u6807 \u50cf\u7d20\u7ea7MSE \u611f\u77e5\u635f\u5931 \u53d8\u5206\u4e0b\u754c(ELBO) \u751f\u6210\u65b9\u5f0f \u786e\u5b9a\u6027\u6620\u5c04 \u786e\u5b9a\u6027\u751f\u6210 \u968f\u673a\u8fc7\u7a0b \u4f18\u52bf\u573a\u666f \u5b9e\u65f6\u5904\u7406 \u7eb9\u7406\u91cd\u5efa \u9ad8\u4fdd\u771f\u751f\u6210"},{"location":"Content/model/diffusion/#4-div2k-4","title":"4 \u6027\u80fd\u5bf9\u6bd4\uff08DIV2K \u00d74 \u76f2\u8d85\u5206\uff09","text":"\u6a21\u578b \u53c2\u6570\u91cf \u63a8\u7406\u6b65\u6570 FID \u6838\u5fc3\u521b\u65b0 SR3 256M 1000 18.7 \u6761\u4ef6\u6269\u6563 LDM 134M 200 15.2 \u6f5c\u5728\u7a7a\u95f4\u6269\u6563 DiffIR 89M 50 12.3 Transformer\u5f15\u5bfc DiffBIR 210M 25 9.8 \u9000\u5316\u6a21\u578b\u8054\u5408\u8bad\u7ec3"},{"location":"Content/model/diffusion/#5","title":"5 \u5f53\u524d\u7814\u7a76\u70ed\u70b9\u65b9\u5411","text":"<pre><code>graph LR\n    A[\u6269\u6563\u8d85\u5206] --&gt; B[\u52a0\u901f\u91c7\u6837]\n    A --&gt; C[\u591a\u6a21\u6001\u63a7\u5236]\n    A --&gt; D[\u4e09\u7ef4\u8d85\u5206]\n\n    B --&gt; B1[\u84b8\u998f\u52a0\u901f]\n    B --&gt; B2[\u9690\u5f0f\u6269\u6563]\n\n    C --&gt; C1[\u6587\u672c\u5f15\u5bfc]\n    C --&gt; C2[\u8bed\u4e49\u7f16\u8f91]\n\n    D --&gt; D1[\u89c6\u9891\u8d85\u5206]\n    D --&gt; D2[CT/MRI\u589e\u5f3a]</code></pre>"},{"location":"Content/model/diffusion/#6","title":"6 \u5178\u578b\u6539\u8fdb\u8def\u5f84\u793a\u4f8b","text":"<ol> <li> <p>\u91c7\u6837\u52a0\u901f <pre><code>graph LR\n    DDPM --&gt; DDIM[DDIM\\n\u786e\u5b9a\u6027\u91c7\u6837]\n    DDIM --&gt; PNDM[PNDM\\n\u4f2a\u6570\u503c\u65b9\u6cd5]\n    PNDM --&gt; LCM[LCM\\n\u4e00\u81f4\u6027\u6a21\u578b]</code></pre></p> </li> <li> <p>\u67b6\u6784\u6f14\u8fdb <pre><code>graph LR\n    Unet --&gt; DiT[DiT\\nTransformer\u4e3b\u5e72]\n    DiT --&gt; U-ViT[U-ViT\\n\u5168\u5c40\u5efa\u6a21]\n    U-ViT --&gt; LDM[LDM\\n\u6f5c\u5728\u7a7a\u95f4]</code></pre></p> </li> </ol>"},{"location":"Content/model/gan/","title":"GAN \u7c7b\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"Content/model/gan/#1-gan","title":"1 GAN\u8d85\u5206\u8fa8\u7387\u53d1\u5c55\u6846\u67b6","text":"<pre><code>graph TD\n    GAN[2014 GAN\\n\u751f\u6210\u5bf9\u6297\u7f51\u7edc\u5960\u57fa]\n    SRGAN[2017 SRGAN\\n\u9996\u4e2a\u8d85\u5206GAN]\n    ESRGAN[2018 ESRGAN\\n\u589e\u5f3a\u578bSRGAN]\n    SPSR[2019 SPSR\\n\u7a7a\u95f4\u91d1\u5b57\u5854\u5bf9\u6297]\n    RankSRGAN[2019 RankSRGAN\\n\u6392\u5e8f\u5b66\u4e60GAN]\n    USRGAN[2020 USRGAN\\n\u975e\u914d\u5bf9\u8bad\u7ec3]\n    BSRGAN[2021 BSRGAN\\n\u76f2\u8d85\u5206GAN]\n    SwinGAN[2022 SwinGAN\\nTransformer\u5224\u522b\u5668]\n    DiffGAN[2023 DiffGAN\\n\u6269\u6563\u5f15\u5bfcGAN]\n    UltraGAN[2024 UltraGAN\\n\u591a\u6a21\u6001\u5bf9\u6297]\n\n    GAN --&gt; SRGAN\n    SRGAN --&gt; ESRGAN\n    ESRGAN --&gt; SPSR\n    ESRGAN --&gt; RankSRGAN\n    RankSRGAN --&gt; USRGAN\n    USRGAN --&gt; BSRGAN\n    BSRGAN --&gt; SwinGAN\n    SwinGAN --&gt; DiffGAN\n    DiffGAN --&gt; UltraGAN\n    SPSR --&gt; BSRGAN</code></pre>"},{"location":"Content/model/gan/#2","title":"2 \u5173\u952e\u9636\u6bb5\u4e0e\u6280\u672f\u7a81\u7834","text":""},{"location":"Content/model/gan/#_1","title":"\u57fa\u7840\u67b6\u6784\u9636\u6bb5","text":"<ul> <li>SRGAN (2017 CVPR) </li> <li>\u9996\u6b21\u5c06GAN\u5f15\u5165\u8d85\u5206\u4efb\u52a1</li> <li>\u521b\u65b0\u70b9\uff1a  <ul> <li>\u611f\u77e5\u635f\u5931\uff08VGG\u7279\u5f81\u5339\u914d\uff09  </li> <li>\u5bf9\u6297\u8bad\u7ec3\u6846\u67b6 <pre><code># \u5178\u578b\u635f\u5931\u51fd\u6570\u7ec4\u6210\nloss = content_loss(vgg(gen), vgg(hr)) +  # \u5185\u5bb9\u635f\u5931\n       \u03bb_adv * D(gen).mean() +           # \u5bf9\u6297\u635f\u5931\n       \u03bb_tv * total_variation(gen)        # \u5e73\u6ed1\u6b63\u5219\n</code></pre></li> </ul> </li> </ul>"},{"location":"Content/model/gan/#_2","title":"\u6027\u80fd\u7a81\u7834\u9636\u6bb5","text":"<ul> <li>ESRGAN (2018 ECCV) </li> <li>\u6838\u5fc3\u6539\u8fdb\uff1a  <ul> <li>RRDB\u6b8b\u5dee\u5757\uff08\u53bbBN+\u6b8b\u5dee\u7f29\u653e\uff09  </li> <li>\u76f8\u5bf9\u5224\u522b\u5668\uff08Relativistic Discriminator\uff09  </li> <li>\u7f51\u7edc\u63d2\u503c\u7a33\u5b9a\u8bad\u7ec3  </li> </ul> </li> <li>\u6548\u679c\uff1aPSNR\u21911.2dB\uff0c\u7eb9\u7406\u8d28\u91cf\u663e\u8457\u63d0\u5347</li> </ul>"},{"location":"Content/model/gan/#_3","title":"\u7ed3\u6784\u521b\u65b0\u9636\u6bb5","text":"\u6a21\u578b \u521b\u65b0\u70b9 \u6548\u679c\u63d0\u5347 SPSR \u7a7a\u95f4\u91d1\u5b57\u5854\u5bf9\u6297\u5b66\u4e60 \u591a\u5c3a\u5ea6\u7eb9\u7406\u751f\u6210 RankSRGAN \u6392\u5e8f\u4e00\u81f4\u6027\u635f\u5931 \u907f\u514d\u8fc7\u5ea6\u5e73\u6ed1 USRGAN \u975e\u914d\u5bf9\u8bad\u7ec3\uff08CycleGAN\u5f0f\uff09 \u771f\u5b9e\u573a\u666f\u9002\u5e94\u80fd\u529b"},{"location":"Content/model/gan/#_4","title":"\u73b0\u4ee3\u878d\u5408\u9636\u6bb5","text":"<ul> <li>SwinGAN (2022)\uff1a  </li> <li>\u5c06\u5224\u522b\u5668\u66ff\u6362\u4e3aSwin Transformer  </li> <li>\u5173\u952e\u4ee3\u7801\uff1a <pre><code>class SwinDiscriminator(nn.Module):\n    def __init__(self):\n        self.layers = SwinTransformerBlock(\n            dim=128,\n            num_heads=4,\n            window_size=8\n        )\n</code></pre></li> <li>DiffGAN (2023)\uff1a  </li> <li>\u7528\u6269\u6563\u6a21\u578b\u751f\u6210\u5bf9\u6297\u6837\u672c  </li> <li>\u8bad\u7ec3\u6d41\u7a0b\uff1a <pre><code>graph LR\n    A[LR] --&gt; B[Generator] --&gt; C[HR_fake]\n    A --&gt; D[Diffusion] --&gt; E[HR_noisy]\n    C &amp; E --&gt; F[Discriminator]</code></pre></li> </ul>"},{"location":"Content/model/gan/#3-div2k-4","title":"3 \u6027\u80fd\u6f14\u8fdb\u5bf9\u6bd4\uff08DIV2K \u00d74\uff09","text":"\u6a21\u578b PSNR LPIPS\u2193 \u53c2\u6570\u91cf \u5173\u952e\u521b\u65b0 SRGAN 26.02 0.253 1.5M \u9996\u6b21GAN\u8d85\u5206 ESRGAN 27.25 0.187 16.7M RRDB\u5757+\u76f8\u5bf9\u5224\u522b\u5668 BSRGAN 28.11 0.152 18.3M \u76f2\u8d85\u5206\u9000\u5316\u5efa\u6a21 SwinGAN 28.47 0.136 23.1M Transformer\u5224\u522b\u5668 DiffGAN 29.03 0.121 41.5M \u6269\u6563\u5148\u9a8c\u5f15\u5bfc"},{"location":"Content/model/gan/#4","title":"4 \u6280\u672f\u5206\u652f\u6f14\u8fdb","text":"<pre><code>graph TB\n    A[GAN] --&gt; B[\u635f\u5931\u51fd\u6570\u521b\u65b0]\n    A --&gt; C[\u7f51\u7edc\u7ed3\u6784\u521b\u65b0]\n    A --&gt; D[\u8bad\u7ec3\u7b56\u7565\u521b\u65b0]\n\n    B --&gt; B1[\u611f\u77e5\u635f\u5931]\n    B --&gt; B2[\u6392\u5e8f\u635f\u5931]\n    B --&gt; B3[\u6269\u6563\u635f\u5931]\n\n    C --&gt; C1[RRDB\u5757]\n    C --&gt; C2[Swin\u5224\u522b\u5668]\n    C --&gt; C3[\u591a\u5c3a\u5ea6\u751f\u6210]\n\n    D --&gt; D1[\u7f51\u7edc\u63d2\u503c]\n    D --&gt; D2[\u81ea\u9002\u5e94\u5bf9\u6297]\n    D --&gt; D3[\u96f6\u6837\u672c\u5b66\u4e60]</code></pre>"},{"location":"Content/model/gan/#5-cnntransformer","title":"5 \u4e0eCNN/Transformer\u6846\u67b6\u7684\u5173\u8054","text":"<pre><code>graph LR\n    CNN --&gt;|\u63d0\u4f9b\u751f\u6210\u5668\u57fa\u7840| GAN\n    Transformer --&gt;|\u6539\u8fdb\u5224\u522b\u5668| GAN\n    GAN --&gt;|\u5bf9\u6297\u8bad\u7ec3\u601d\u60f3| Diffusion</code></pre>"},{"location":"Content/model/gan/#6","title":"6 \u5178\u578b\u4ee3\u7801\u6f14\u8fdb\u793a\u4f8b","text":""},{"location":"Content/model/gan/#_5","title":"\u751f\u6210\u5668\u67b6\u6784\u53d8\u5316","text":"<pre><code># SRGAN (2017)\nGenerator = ResNetWithBNBlocks()\n\n# ESRGAN (2018)\nGenerator = RRDBNet(block_num=23)  # \u53bbBN+\u6b8b\u5dee\u7f29\u653e\n\n# SwinGAN (2022)\nGenerator = SwinGenerator(win_size=8)\n</code></pre>"},{"location":"Content/model/gan/#_6","title":"\u5224\u522b\u5668\u6539\u8fdb\u8def\u5f84","text":"<pre><code>graph LR\n    PatchGAN --&gt; RelativePatchGAN\n    RelativePatchGAN --&gt; SwinDiscriminator\n    SwinDiscriminator --&gt; DiffusionDiscriminator</code></pre>"},{"location":"Content/model/gan/#7","title":"7 \u5f53\u524d\u7814\u7a76\u70ed\u70b9","text":"<ol> <li>\u591a\u6a21\u6001\u5bf9\u6297 </li> <li>\u6587\u672c\u5f15\u5bfc\u8d85\u5206\uff08CLIP+GAN\uff09</li> <li> <p>\u793a\u4f8b\uff1a <pre><code>text_feat = CLIP.encode_text(\"sharp edges\")\ngen_img = Generator(lr_img, text_feat)\n</code></pre></p> </li> <li> <p>\u8f7b\u91cf\u5316\u65b9\u5411 </p> </li> <li> <p>\u77e5\u8bc6\u84b8\u998fGAN\uff08\u5982ESRGAN-Lite\uff09</p> </li> <li> <p>\u4e09\u7ef4\u8d85\u5206 </p> </li> <li>\u89c6\u9891\u8d85\u5206GAN\uff08BasicVSR++\uff09</li> </ol>"},{"location":"Content/model/transformer/","title":"\u6ce8\u610f\u529b\u673a\u5236/Transformer \u7c7b\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"Content/model/transformer/#1-transformer","title":"1 Transformer\u8d85\u5206\u8fa8\u7387\u6a21\u578b\u53d1\u5c55\u8109\u7edc","text":"<pre><code>graph TD\n    ViT[2017 Vision Transformer\\n\u9996\u6b21\u5c06Transformer\u5f15\u5165\u89c6\u89c9\u4efb\u52a1]\n    TTSR[2020 TTSR\\n\u9996\u4e2a\u57fa\u4e8eTransformer\u7684\u8d85\u5206\u6a21\u578b]\n    IPT[2021 IPT\\n\u591a\u4efb\u52a1\u9884\u8bad\u7ec3Transformer]\n    SwinIR[2021 SwinIR\\n\u7a97\u53e3\u6ce8\u610f\u529b+\u79fb\u4f4d\u7a97\u53e3]\n    ESRT[2021 ESRT\\n\u8f7b\u91cf\u7ea7Transformer-CNN\u6df7\u5408]\n    EDT[2022 EDT\\n\u6269\u6563\u6a21\u578b+Transformer\u878d\u5408]\n    DAT[2022 DAT\\n\u53ef\u53d8\u5f62\u6ce8\u610f\u529b\u673a\u5236]\n    LAM[2023 LAM\\n\u5c40\u90e8\u81ea\u9002\u5e94\u8c03\u5236]\n    DiffIR[2023 DiffIR\\n\u6269\u6563\u5f15\u5bfc\u7684Transformer]\n    Restormer[2023 Restormer\\n\u591a\u5c3a\u5ea6Transformer]\n\n    ViT --&gt; TTSR\n    TTSR --&gt; IPT\n    IPT --&gt; SwinIR\n    SwinIR --&gt; ESRT\n    SwinIR --&gt; DAT\n    SwinIR --&gt; Restormer\n    DAT --&gt; LAM\n    IPT --&gt; EDT\n    EDT --&gt; DiffIR</code></pre>"},{"location":"Content/model/transformer/#2-transformer","title":"2 Transformer\u6838\u5fc3\u7279\u8272\u4e0e\u539f\u7406","text":"<p>Transformer \u7684\u6838\u5fc3\u6784\u6210\u53ef\u4ee5\u6d53\u7f29\u4e3a \u56db\u5927\u652f\u67f1\uff1a</p> <ol> <li>\u81ea\u6ce8\u610f\u529b\u673a\u5236\uff08Self-Attention\uff09 \u2014\u2014 \u4ee3\u66ff\u5377\u79ef\u611f\u53d7\u91ce\uff0c\u6355\u6349\u5168\u5c40\u4f9d\u8d56</li> <li>\u591a\u5934\u673a\u5236\uff08Multi-Head Attention\uff09 \u2014\u2014 \u591a\u7ec4\u6ce8\u610f\u529b\u5e76\u884c\uff0c\u5b66\u4e60\u4e0d\u540c\u7684\u7279\u5f81\u5b50\u7a7a\u95f4</li> <li>\u4f4d\u7f6e\u7f16\u7801\uff08Positional Encoding\uff09 \u2014\u2014 \u8865\u8db3\u5e8f\u5217\u7684\u4f4d\u7f6e\u4fe1\u606f</li> <li>\u524d\u9988\u7f51\u7edc\uff08Feed-Forward Network, FFN\uff09 \u2014\u2014 \u5c40\u90e8\u975e\u7ebf\u6027\u6620\u5c04\uff0c\u589e\u5f3a\u7279\u5f81\u8868\u8fbe</li> </ol>"},{"location":"Content/model/transformer/#21-self-attention","title":"2.1 \u81ea\u6ce8\u610f\u529b\u673a\u5236\uff08Self-Attention\uff09","text":"<p>\u4f20\u7edf CNN \u4f9d\u8d56\u5c40\u90e8\u5377\u79ef\u6838\u6355\u6349\u7279\u5f81\uff0c\u800c\u81ea\u6ce8\u610f\u529b\u5141\u8bb8 \u4efb\u610f\u4e24\u4e2a\u4f4d\u7f6e \u76f4\u63a5\u5efa\u7acb\u8054\u7cfb\uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u76f8\u5173\u6027\u6743\u91cd\uff0c\u4ece\u800c\u5b9e\u73b0\u5168\u5c40\u4fe1\u606f\u5efa\u6a21\u3002</p> <p>\u2460 Q/K/V \u7684\u6765\u6e90\u4e0e\u4f5c\u7528</p> <p>\u7ed9\u5b9a\u8f93\u5165\u5e8f\u5217\uff08\u6216\u56fe\u50cf\u7279\u5f81\uff09\u77e9\u9635 \\(X \\in \\mathbb{R}^{n \\times d}\\) \uff08 \\(n\\) \u4e3a\u5e8f\u5217\u957f\u5ea6\uff0c\u6216\u5c55\u5f00\u540e\u7684\u50cf\u7d20\u6570\uff0c\\(d\\) \u4e3a\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7279\u5f81\u7ef4\u5ea6\uff09\uff0c\u901a\u8fc7\u4e09\u4e2a\u7ebf\u6027\u6620\u5c04\u5f97\u5230\uff1a</p> \\[ Q = XW_Q, \\quad K = XW_K, \\quad V = XW_V \\] <p>\u5176\u4e2d\uff1a</p> <ul> <li>Query\uff08Q\uff09\uff1a\u8868\u793a\u201c\u6211\u8981\u627e\u4ec0\u4e48\u4fe1\u606f\u201d\uff0c\u4ece\u5f53\u524d\u7279\u5f81\u751f\u6210\u67e5\u8be2\u5411\u91cf</li> <li>Key\uff08K\uff09\uff1a\u8868\u793a\u201c\u6211\u80fd\u63d0\u4f9b\u4ec0\u4e48\u4fe1\u606f\u201d\uff0c\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7279\u5f81\u7d22\u5f15</li> <li>Value\uff08V\uff09\uff1a\u8868\u793a\u201c\u5177\u4f53\u643a\u5e26\u7684\u4fe1\u606f\u5185\u5bb9\u201d\uff0c\u5728\u8ba1\u7b97\u6743\u91cd\u540e\u8fdb\u884c\u52a0\u6743\u878d\u5408</li> <li>\\(W_Q, W_K, W_V \\in \\mathbb{R}^{d \\times d_k}\\) \u662f\u53ef\u8bad\u7ec3\u77e9\u9635</li> </ul> <p>\u7c7b\u6bd4\u56fe\u4e66\u9986\u68c0\u7d22\uff1aQ \u662f\u8bfb\u8005\u7684\u68c0\u7d22\u610f\u56fe\uff0cK \u662f\u4e66\u7684\u76ee\u5f55\u5361\uff0cV \u662f\u4e66\u7684\u5b9e\u9645\u5185\u5bb9\u3002</p> <p>\u2461 \u4e3a\u4ec0\u4e48 \\(QK^\\top\\) \u662f\u76f8\u4f3c\u5ea6</p> <p>Q \u548c K \u90fd\u662f\u5411\u91cf\uff0c\u8ba1\u7b97 \\(Q_i \\cdot K_j\\)\uff08\u70b9\u79ef\uff09\u53ef\u4ee5\u8861\u91cf\u4f4d\u7f6e \\(i\\) \u548c\u4f4d\u7f6e \\(j\\) \u7684\u7279\u5f81\u76f8\u4f3c\u5ea6\uff1a</p> <ul> <li>\u82e5\u4e24\u8005\u65b9\u5411\u63a5\u8fd1\uff0c\u70b9\u79ef\u5927 \u2192 \u9ad8\u76f8\u5173\u6027</li> <li>\u82e5\u65b9\u5411\u5dee\u5f02\u5927\uff0c\u70b9\u79ef\u5c0f \u2192 \u4f4e\u76f8\u5173\u6027</li> </ul> <p>\u5728\u516c\u5f0f\u4e2d\u52a0\u5165\u7f29\u653e\u56e0\u5b50 \\(\\sqrt{d_k}\\) \u662f\u4e3a\u4e86\u9632\u6b62\u9ad8\u7ef4\u5411\u91cf\u70b9\u79ef\u8fc7\u5927\uff0c\u5bfc\u81f4 Softmax \u68af\u5ea6\u8fc7\u5c0f\u3002</p> <p>\u2462 Attention \u7684\u8ba1\u7b97\u903b\u8f91</p> <p>\u6ce8\u610f\u529b\u6743\u91cd\uff1a</p> \\[ \\alpha_{ij} = \\frac{\\exp(Q_i \\cdot K_j / \\sqrt{d_k})}{\\sum_{t=1}^n \\exp(Q_i \\cdot K_t / \\sqrt{d_k})} \\] <p>\u8fd9\u662f\u4e00\u4e2a \u6982\u7387\u5206\u5e03\uff0c\u8868\u793a\u4f4d\u7f6e \\(i\\) \u5728\u6574\u6761\u5e8f\u5217\u4e2d\u5bf9\u4f4d\u7f6e \\(j\\) \u7684\u5173\u6ce8\u7a0b\u5ea6\u3002</p> <p>\u6700\u7ec8\u8f93\u51fa\uff1a</p> \\[ \\text{Attention}(Q, K, V)_i = \\sum_{j=1}^n \\alpha_{ij} V_j \\] <p>\u5373 \u7528\u76f8\u5173\u6027\u6743\u91cd\uff0c\u5bf9\u6240\u6709\u4f4d\u7f6e\u7684 Value \u505a\u52a0\u6743\u6c42\u548c\uff0c\u5f97\u5230\u878d\u5408\u5168\u5c40\u4fe1\u606f\u7684\u7279\u5f81\u5411\u91cf\u3002</p> <p>\u2463 \u5728\u8d85\u5206\u8fa8\u7387\u4efb\u52a1\u4e2d\u7684\u610f\u4e49</p> <ul> <li>CNN \u5377\u79ef\u53ea\u80fd\u6355\u6349\u5c40\u90e8\u90bb\u57df\u4fe1\u606f\uff0c\u800c\u8d85\u5206\u4efb\u52a1\u5f80\u5f80\u9700\u8981\u5229\u7528\u8fdc\u8ddd\u79bb\u50cf\u7d20\u7684\u5173\u8054\uff08\u5982\u7eb9\u7406\u91cd\u590d\u3001\u5bf9\u79f0\u7ed3\u6784\uff09</li> <li>\u81ea\u6ce8\u610f\u529b\u8ba9\u6bcf\u4e2a\u50cf\u7d20\u90fd\u80fd\u201c\u770b\u5230\u201d\u5168\u56fe\uff0c\u4ece\u800c\u4fdd\u7559\u957f\u8ddd\u79bb\u4f9d\u8d56</li> <li>\u8f93\u51fa\u7684\u5168\u5c40\u7279\u5f81\u518d\u7ecf\u8fc7\u53cd\u5377\u79ef/\u91cd\u5efa\u6a21\u5757\uff0c\u53ef\u4ee5\u66f4\u7cbe\u51c6\u5730\u8fd8\u539f\u7eb9\u7406\u548c\u7ec6\u8282</li> </ul> <p>\u2464\u4ee3\u7801\u793a\u4f8b\uff08PyTorch\uff09</p> <pre><code>import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass SelfAttention(nn.Module):\n    def __init__(self, dim):\n        super().__init__()\n        self.q_proj = nn.Linear(dim, dim)\n        self.k_proj = nn.Linear(dim, dim)\n        self.v_proj = nn.Linear(dim, dim)\n\n    def forward(self, x):\n        # x: [batch, seq_len, dim]\n        Q = self.q_proj(x)  # [B, N, D]\n        K = self.k_proj(x)  # [B, N, D]\n        V = self.v_proj(x)  # [B, N, D]\n\n        attn_scores = Q @ K.transpose(-2, -1) / (Q.size(-1) ** 0.5)  # [B, N, N]\n        attn_weights = F.softmax(attn_scores, dim=-1)\n        out = attn_weights @ V  # [B, N, D]\n        return out\n</code></pre>"},{"location":"Content/model/transformer/#22-multi-head-attention","title":"2.2 \u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\uff08Multi-Head Attention\uff09","text":"<p>\u5355\u4e00\u7684\u6ce8\u610f\u529b\u53ef\u80fd\u53ea\u6355\u6349\u5230\u4e00\u79cd\u76f8\u5173\u6027\uff0c\u591a\u5934\u673a\u5236\u901a\u8fc7 \u5e76\u884c\u8ba1\u7b97\u591a\u7ec4 Q/K/V\uff0c\u8ba9\u4e0d\u540c\u7684\u5b50\u7a7a\u95f4\u53bb\u5b66\u4e60\u4e0d\u540c\u7684\u5173\u7cfb\u6a21\u5f0f\u3002</p> \\[ \\text{MultiHead}(Q, K, V) = \\text{Concat}(\\text{head}_1, \\dots, \\text{head}_h) W_O \\] <p>\u5176\u4e2d\uff1a</p> \\[ \\text{head}_i = \\text{Attention}(QW_Q^{(i)}, KW_K^{(i)}, VW_V^{(i)}) \\] <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>class MultiHeadAttention(nn.Module):\n    def __init__(self, dim, num_heads):\n        super().__init__()\n        self.num_heads = num_heads\n        self.head_dim = dim // num_heads\n        self.qkv = nn.Linear(dim, dim * 3)\n        self.proj = nn.Linear(dim, dim)\n\n    def forward(self, x):\n        B, N, D = x.shape\n        qkv = self.qkv(x).reshape(B, N, 3, self.num_heads, self.head_dim)\n        Q, K, V = qkv.unbind(2)  # [B, N, H, d]\n        attn_scores = (Q @ K.transpose(-2, -1)) / (self.head_dim ** 0.5)\n        attn_weights = F.softmax(attn_scores, dim=-1)\n        out = (attn_weights @ V).transpose(1, 2).reshape(B, N, D)\n        return self.proj(out)\n</code></pre>"},{"location":"Content/model/transformer/#23-positional-encoding","title":"2.3 \u4f4d\u7f6e\u7f16\u7801\uff08Positional Encoding\uff09","text":"<p>\u7531\u4e8e\u81ea\u6ce8\u610f\u529b\u672c\u8eab\u4e0e\u5e8f\u5217\u987a\u5e8f\u65e0\u5173\uff0c\u5fc5\u987b\u663e\u5f0f\u5f15\u5165\u4f4d\u7f6e\u4fe1\u606f\u3002 \u5e38\u7528\u65b9\u6cd5\uff1a</p> <ul> <li>\u6b63\u4f59\u5f26\u7f16\u7801\uff08Sinusoidal\uff09\u2014\u2014\u56fa\u5b9a\u516c\u5f0f\uff0c\u652f\u6301\u65e0\u9650\u957f\u5e8f\u5217</li> </ul> \\[ PE_{(pos, 2i)} = \\sin\\left(\\frac{pos}{10000^{2i/d}}\\right) \\] \\[ PE_{(pos, 2i+1)} = \\cos\\left(\\frac{pos}{10000^{2i/d}}\\right) \\] <ul> <li>\u53ef\u5b66\u4e60\u4f4d\u7f6e\u5d4c\u5165\uff08Learnable Embedding\uff09\u2014\u2014\u53c2\u6570\u5316\u5b66\u4e60\u4f4d\u7f6e\u4fe1\u606f</li> </ul> <p>\u4ee3\u7801\u793a\u4f8b\uff08\u6b63\u4f59\u5f26\u4f4d\u7f6e\u7f16\u7801\uff09</p> <pre><code>import math\n\nclass PositionalEncoding(nn.Module):\n    def __init__(self, dim, max_len=5000):\n        super().__init__()\n        pe = torch.zeros(max_len, dim)\n        position = torch.arange(0, max_len, dtype=torch.float).unsqueeze(1)\n        div_term = torch.exp(torch.arange(0, dim, 2).float() * (-math.log(10000.0) / dim))\n        pe[:, 0::2] = torch.sin(position * div_term)\n        pe[:, 1::2] = torch.cos(position * div_term)\n        self.register_buffer('pe', pe.unsqueeze(0))\n\n    def forward(self, x):\n        return x + self.pe[:, :x.size(1)]\n</code></pre>"},{"location":"Content/model/transformer/#24-ffn","title":"2.4 \u524d\u9988\u7f51\u7edc\uff08FFN\uff09","text":"<p>\u6bcf\u4e2a Transformer \u5c42\u540e\u90fd\u6709\u4e00\u4e2a\u9010\u4f4d\u7f6e\u7684\u524d\u9988\u7f51\u7edc\uff1a</p> \\[ \\text{FFN}(x) = \\text{GELU}(xW_1 + b_1)W_2 + b_2 \\] <p>\u76f8\u5f53\u4e8e \u5bf9\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7279\u5f81\u8fdb\u884c\u72ec\u7acb\u7684\u975e\u7ebf\u6027\u6620\u5c04\uff0c\u63d0\u5347\u6a21\u578b\u8868\u8fbe\u80fd\u529b\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>class FeedForward(nn.Module):\n    def __init__(self, dim, hidden_dim):\n        super().__init__()\n        self.fc1 = nn.Linear(dim, hidden_dim)\n        self.fc2 = nn.Linear(hidden_dim, dim)\n\n    def forward(self, x):\n        return self.fc2(F.gelu(self.fc1(x)))\n</code></pre>"},{"location":"Content/model/transformer/#25","title":"2.5 \u6838\u5fc3\u603b\u7ed3","text":"\u6a21\u5757\u529f\u80fd CNN \u5bf9\u5e94 Transformer \u5bf9\u5e94 \u7279\u5f81\u63d0\u53d6 \u5377\u79ef\u6838\uff08\u5c40\u90e8\u611f\u53d7\u91ce\uff09 \u81ea\u6ce8\u610f\u529b\uff08\u5168\u5c40\u4f9d\u8d56\uff09 \u591a\u5c3a\u5ea6\u7279\u5f81 \u4e0d\u540c\u5377\u79ef\u6838\u5806\u53e0 \u591a\u5934\u673a\u5236 \u7a7a\u95f4\u4f4d\u7f6e\u4fe1\u606f \u5377\u79ef\u7ed3\u6784\u5185\u5efa \u4f4d\u7f6e\u7f16\u7801\u663e\u5f0f\u52a0\u5165 \u7279\u5f81\u6620\u5c04 \u5168\u8fde\u63a5\u5c42 \u524d\u9988\u7f51\u7edc <p>\u4e00\u53e5\u8bdd\u6838\u5fc3\uff1a CNN \u5728\u7a7a\u95f4\u57df\u505a\u5c40\u90e8\u5377\u79ef\uff0cTransformer \u5728\u7279\u5f81\u57df\u505a\u5168\u5c40\u52a0\u6743\u3002</p>"},{"location":"Content/model/transformer/#3","title":"3 \u5173\u952e\u8282\u70b9\u89e3\u6790","text":"<ol> <li> <p>\u5960\u57fa\u9636\u6bb5 </p> <ul> <li>ViT (2020)\uff1a\u8bc1\u660e\u7eafTransformer\u5728\u56fe\u50cf\u5206\u7c7b\u7684\u53ef\u884c\u6027\uff0c\u4f46\u9700\u8981\u5927\u6570\u636e\u9884\u8bad\u7ec3  </li> <li>TTSR (2020 CVPR)\uff1a\u9996\u6b21\u5c06Transformer\u7528\u4e8e\u8d85\u5206\uff0c\u5f15\u5165\u8de8\u5c3a\u5ea6\u6ce8\u610f\u529b</li> </ul> </li> <li> <p>\u67b6\u6784\u63a2\u7d22 </p> <ul> <li>IPT (2021 CVPR)\uff1a\u5c55\u793a\u5927\u89c4\u6a21\u9884\u8bad\u7ec3\u6f5c\u529b\uff08\u5728ImageNet\u4e0a\u9884\u8bad\u7ec3\uff09  </li> <li>SwinIR (2021 ICCV)\uff1a\u901a\u8fc7\u7a97\u53e3\u6ce8\u610f\u529b\u5b9e\u73b0\u8ba1\u7b97\u6548\u7387\u7a81\u7834 <pre><code># \u7a97\u53e3\u6ce8\u610f\u529b\u6838\u5fc3\u4ee3\u7801\nclass WindowAttention(nn.Module):\n    def __init__(self, dim, window_size):\n        self.qkv = nn.Linear(dim, dim*3)\n        self.relative_position_bias = nn.Parameter(...)\n</code></pre></li> </ul> </li> <li> <p>\u6548\u7387\u4f18\u5316 </p> <ul> <li>ESRT (2021 NeurIPS)\uff1aCNN-Transformer\u6df7\u5408\u67b6\u6784\uff0c\u53c2\u6570\u91cf\u51cf\u5c1160%  </li> <li>DAT (2022 CVPR)\uff1a\u53ef\u53d8\u5f62\u6ce8\u610f\u529b\u63d0\u5347\u7eb9\u7406\u91cd\u5efa\u80fd\u529b  </li> </ul> </li> <li> <p>\u878d\u5408\u521b\u65b0 </p> <ul> <li>EDT (2022 ECCV)\uff1a\u5c06\u6269\u6563\u8fc7\u7a0b\u5f15\u5165Transformer\u8bad\u7ec3  </li> <li>DiffIR (2023 CVPR)\uff1a\u7528\u6269\u6563\u6a21\u578b\u751f\u6210\u6ce8\u610f\u529b\u5f15\u5bfc\u56fe  </li> </ul> </li> </ol> <p>\u4e0eCNN\u6846\u67b6\u7684\u5bf9\u5e94\u5173\u7cfb</p> CNN\u65f6\u4ee3\u7279\u5f81 Transformer\u65f6\u4ee3\u5bf9\u5e94\u521b\u65b0 \u5c40\u90e8\u611f\u53d7\u91ce\uff08SRCNN\uff09 \u5168\u5c40\u6ce8\u610f\u529b\uff08ViT\uff09 \u6df1\u5ea6\u5806\u53e0\uff08VDSR\uff09 \u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\uff08IPT\uff09 \u6b8b\u5dee\u8fde\u63a5\uff08EDSR\uff09 \u8de8\u7a97\u53e3\u8fde\u63a5\uff08SwinIR\uff09 \u901a\u9053\u6ce8\u610f\u529b\uff08RCAN\uff09 \u52a8\u6001\u6ce8\u610f\u529b\uff08DAT\uff09 \u591a\u5c3a\u5ea6\u878d\u5408\uff08LapSRN\uff09 \u591a\u5c3a\u5ea6Transformer\uff08Restormer\uff09"},{"location":"Content/model/transformer/#4","title":"4 \u5f53\u524d\u7814\u7a76\u70ed\u70b9\u65b9\u5411","text":"<pre><code>graph TB\n    A[Transformer\u8d85\u5206] --&gt; B[\u8ba1\u7b97\u6548\u7387]\n    A --&gt; C[\u5c0f\u6837\u672c\u9002\u5e94]\n    A --&gt; D[\u591a\u6a21\u6001\u878d\u5408]\n\n    B --&gt; B1[\u7a00\u758f\u6ce8\u610f\u529b]\n    B --&gt; B2[\u6df7\u5408\u7cbe\u5ea6]\n\n    C --&gt; C1[\u5143\u5b66\u4e60]\n    C --&gt; C2[\u63d0\u793a\u5b66\u4e60]\n\n    D --&gt; D1[\u6587\u672c\u5f15\u5bfc\u8d85\u5206]\n    D --&gt; D2[\u6269\u6563\u5148\u9a8c]</code></pre>"},{"location":"Content/model/transformer/#5-div2k-4","title":"5 \u5178\u578b\u6027\u80fd\u5bf9\u6bd4\uff08DIV2K \u00d74\uff09","text":"\u6a21\u578b \u53c2\u6570\u91cf \u901f\u5ea6(FPS) PSNR \u6838\u5fc3\u521b\u65b0\u70b9 SwinIR 12M 45 32.92 \u7a97\u53e3\u79fb\u4f4d\u6ce8\u610f\u529b ESRT 6.5M 83 32.75 CNN-Transformer\u6df7\u5408 DiffIR 139M 12 33.41 \u6269\u6563\u6a21\u578b\u5f15\u5bfc Restormer 26M 38 33.18 \u591a\u5c3a\u5ea6\u901a\u9053\u6ce8\u610f\u529b"},{"location":"Content/model/transformer/#6","title":"6 \u7ecf\u5178\u6a21\u578b","text":""},{"location":"Content/model/transformer/#rcan","title":"RCAN","text":"<p>RCAN \u57fa\u7840\u4fe1\u606f</p> <p>\u8bba\u6587\u6807\u9898\uff1aImage Super-Resolution Using Very Deep Residual Channel Attention Networks \u4f5c\u8005\uff1aYulun Zhang, Kunpeng Li, Kai Li, etc. \u4f1a\u8bae/\u671f\u520a\uff1aECCV (European Conference on Computer Vision) \u53d1\u8868\u65f6\u95f4\uff1a2018\u5e74  </p> <p>\u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784</p> <p>\u6838\u5fc3\u4f18\u52bf\uff1a \u9996\u6b21\u5c06\u901a\u9053\u6ce8\u610f\u529b\u5f15\u5165\u8d85\u5206\u8fa8\u7387\u4efb\u52a1\uff0c\u5728DIV2K\u6570\u636e\u96c6\u4e0aPSNR\u8fbe\u523032.63dB\uff08\u00d74\uff09\uff0c\u6bd4EDSR\u63d0\u53470.17dB\uff0c\u5b9e\u73b0SOTA\u6027\u80fd\u3002</p> <p>\u67b6\u6784\u521b\u65b0\uff1a 1. \u901a\u9053\u6ce8\u610f\u529b\u673a\u5236\uff1a\u901a\u8fc7\u5168\u5c40\u5e73\u5747\u6c60\u5316\u751f\u6210\u901a\u9053\u6743\u91cd\uff0c\u653e\u5927\u91cd\u8981\u7279\u5f81\u901a\u9053 2. \u6df1\u5c42\u6b8b\u5dee\u7f51\u7edc\uff1a400+\u7b49\u6548\u6df1\u5ea6\uff0c\u914d\u5408\u6b8b\u5dee\u4e2d\u7684\u6b8b\u5dee\uff08RIR\uff09\u7ed3\u6784 3. \u6ce8\u610f\u529b\u6b8b\u5dee\u5757\uff1a\u6bcf\u4e2a\u6b8b\u5dee\u5757\u5185\u5d4c\u901a\u9053\u6ce8\u610f\u529b\u6a21\u5757\uff08CA\uff09 \u5173\u952e\u6539\u8fdb\uff1a\u8ba9\u7f51\u7edc\u81ea\u52a8\u5b66\u4e60\u4e0d\u540c\u901a\u9053\u7684\u91cd\u8981\u6027\u6743\u91cd\uff0c\u7a81\u7834\u4f20\u7edf\u5747\u7b49\u7279\u5f81\u5904\u7406\u7684\u5c40\u9650\u3002</p> <pre><code>class ChannelAttention(nn.Module):\n   def __init__(self, channels, reduction=16):\n      super(ChannelAttention, self).__init__()\n      # \u521b\u65b0\u70b91\uff1a\u5168\u5c40\u5e73\u5747\u6c60\u5316\u6355\u83b7\u901a\u9053\u7edf\u8ba1\u91cf\n      self.gap = nn.AdaptiveAvgPool2d(1)\n      # \u521b\u65b0\u70b92\uff1a\u4e24\u5c42MLP\u751f\u6210\u6ce8\u610f\u529b\u6743\u91cd\n      self.mlp = nn.Sequential(\n            nn.Linear(channels, channels // reduction),\n            nn.ReLU(),\n            nn.Linear(channels // reduction, channels),\n            nn.Sigmoid()  # \u2190 \u6838\u5fc3\uff1a\u751f\u62100-1\u7684\u901a\u9053\u6743\u91cd\n      )\n\n   def forward(self, x):\n      b, c, _, _ = x.shape\n      # \u901a\u9053\u6ce8\u610f\u529b\u8ba1\u7b97\u6d41\u7a0b\n      y = self.gap(x).view(b, c)  # [B,C,H,W]\u2192[B,C]\n      y = self.mlp(y).view(b, c, 1, 1)  # [B,C]\u2192[B,C,1,1]\n      return x * y  # \u2190 \u5173\u952e\u64cd\u4f5c\uff1a\u901a\u9053\u52a0\u6743\n\nclass RCAB(nn.Module):\n   def __init__(self, channels):\n      super(RCAB, self).__init__()\n      self.conv1 = nn.Conv2d(channels, channels, 3, padding=1)\n      self.relu = nn.ReLU()\n      self.conv2 = nn.Conv2d(channels, channels, 3, padding=1)\n      self.ca = ChannelAttention(channels)  # \u2190 \u521b\u65b0\u70b93\uff1a\u5d4c\u5165\u6ce8\u610f\u529b\u6a21\u5757\n\n   def forward(self, x):\n      residual = x\n      x = self.relu(self.conv1(x))\n      x = self.conv2(x)\n      x = self.ca(x)  # \u901a\u9053\u6ce8\u610f\u529b\u52a0\u6743\n      return x + residual\n</code></pre> <p>\u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u542f\u53d1</p> <p>\u5f53\u524d\u5dee\u8ddd\uff1a 1. \u8ba1\u7b97\u4ee3\u4ef7\uff1a\u53c2\u6570\u91cf(15.6M)\u6bd4\u8f7b\u91cf\u7ea7\u6a21\u578bCARN\u592710\u500d 2. \u6ce8\u610f\u529b\u5c40\u9650\uff1a\u4ec5\u901a\u9053\u7ef4\u5ea6\u5ffd\u7565\u7a7a\u95f4\u5173\u7cfb\uff0c\u5f31\u4e8eTransformer\u7684\u975e\u5c40\u90e8\u6ce8\u610f\u529b  </p> <p>\u67b6\u6784\u542f\u53d1\uff1a 1. \u6ce8\u610f\u529b\u5148\u9a71\uff1a\u4e3a\u540e\u7eedSENet\u3001CBAM\u7b49\u6ce8\u610f\u529b\u673a\u5236\u94fa\u8def 2. \u591a\u7ef4\u5ea6\u878d\u5408\uff1a\u542f\u53d1\u4ea4\u53c9\u6ce8\u610f\u529b\u8bbe\u8ba1\uff08\u5982SKNet\uff09 3. \u6df1\u5ea6\u67b6\u6784\uff1aRIR\u7ed3\u6784\u5f71\u54cdTransformer\u7684\u6b8b\u5dee\u8fde\u63a5\u8bbe\u8ba1  </p> <p>\u6539\u8fdb\u65b9\u5411\uff1a <pre><code>graph LR\nA[\u8f93\u5165LR] --&gt; B[RCAN\u9aa8\u67b6]\nB --&gt; C[\u7a7a\u95f4-\u901a\u9053\u6df7\u5408\u6ce8\u610f\u529b]\nC --&gt; D[\u52a8\u6001\u5377\u79ef\u66ff\u4ee3\u56fa\u5b9aMLP]\nD --&gt; E[\u8f93\u51faHR]</code></pre> \u5f53\u4ee3\u878d\u5408\u5efa\u8bae\uff1a\u5c06\u901a\u9053\u6ce8\u610f\u529b\u5347\u7ea7\u4e3a\u7a7a\u95f4-\u901a\u9053\u6df7\u5408\u6ce8\u610f\u529b\uff08\u5982SimAM\uff09\uff0c\u7528\u52a8\u6001\u5377\u79ef\u751f\u6210\u6743\u91cd\u66ff\u4ee3\u56fa\u5b9aMLP\uff0c\u53ef\u63d0\u5347\u6027\u80fd0.3dB\u3002</p> <p>\u6a21\u578b\u7ed3\u6784\u56fe</p> <pre><code>graph TD\n    A[\u8f93\u5165LR] --&gt; B[\u6d45\u5c42\u7279\u5f81\u63d0\u53d6]\n    B --&gt; C[RIR\u7ec4\u00d710]\n    C --&gt; D[\u4e0a\u91c7\u6837]\n    D --&gt; E[\u91cd\u5efa\u8f93\u51faHR]\n\n    subgraph RIR\u7ec4\n    C --&gt; RCAB1[RCAB\u00d720]\n    RCAB1 --&gt; LRL[\u957f\u7a0b\u6b8b\u5dee]\n    end\n\n    subgraph RCAB\u5757\n    RCAB1 --&gt; Conv1[3\u00d73\u5377\u79ef]\n    Conv1 --&gt; ReLU\n    ReLU --&gt; Conv2[3\u00d73\u5377\u79ef]\n    Conv2 --&gt; CA[\u901a\u9053\u6ce8\u610f\u529b]\n    CA --&gt; Add[\u6b8b\u5dee\u76f8\u52a0]\n    end\n\n    subgraph \u901a\u9053\u6ce8\u610f\u529b\n    CA --&gt; GAP[\u5168\u5c40\u5e73\u5747\u6c60\u5316]\n    GAP --&gt; MLP[\u4e24\u5c42MLP]\n    MLP --&gt; Sigmoid[\u6743\u91cd\u751f\u6210]\n    end</code></pre> <p>\u901a\u9053\u6ce8\u610f\u529b\u673a\u5236\u8be6\u89e3\uff1a</p> <p>\u8ba1\u7b97\u6d41\u7a0b\uff1a </p> <ul> <li>\u5168\u5c40\u5e73\u5747\u6c60\u5316\u538b\u7f29\u7a7a\u95f4\u7ef4\u5ea6 \u2192 \u4e24\u5c42MLP\u5b66\u4e60\u901a\u9053\u5173\u7cfb \u2192 Sigmoid\u751f\u6210\u6743\u91cd  </li> </ul> <p>\u7269\u7406\u610f\u4e49\uff1a    - \u9ad8\u9891\u7ec6\u8282\u901a\u9053\u83b7\u5f97\u66f4\u5927\u6743\u91cd\uff08\u5982\u8fb9\u7f18/\u7eb9\u7406\uff09    - \u5e73\u6ed1\u533a\u57df\u901a\u9053\u6743\u91cd\u81ea\u52a8\u964d\u4f4e  </p> <p>\u73b0\u4ee3\u6f14\u8fdb\uff1a    - \u5347\u7ea7\u4e3a\u52a8\u6001\u6743\u91cd\uff08\u5982CondConv\uff09    - \u7ed3\u5408\u7a7a\u95f4\u6ce8\u610f\u529b\u5f62\u6210\u6df7\u5408\u673a\u5236\uff08\u5982BAM\uff09  </p> <p>RCAN\u5c06\u6ce8\u610f\u529b\u673a\u5236\u5f15\u5165\u8d85\u5206\u7684\u521b\u65b0\uff0c\u6807\u5fd7\u7740CNN\u67b6\u6784\u4ece\"\u88ab\u52a8\u5377\u79ef\"\u5230\"\u4e3b\u52a8\u9009\u62e9\"\u7684\u8303\u5f0f\u8f6c\u53d8\u3002\u5176\u6838\u5fc3\u601d\u60f3\u5728\u5f53\u524dVision Transformer\u7684\u6ce8\u610f\u529b\u8bbe\u8ba1\u4e2d\u4ecd\u6e05\u6670\u53ef\u89c1\u3002</p>"},{"location":"Content/model/transformer/#san-second-order-attention-network","title":"SAN (Second-order Attention Network)","text":"<p>\u57fa\u7840\u4fe1\u606f</p> <p>\u8bba\u6587\u6807\u9898\uff1aImage Super-Resolution Using Second-Order Attention Network \u4f5c\u8005\uff1aTao Dai et al. \u4f1a\u8bae/\u671f\u520a\uff1aICCV \u53d1\u8868\u65f6\u95f4\uff1a2019\u5e74  </p> <p>\u6838\u5fc3\u7279\u70b9</p> <p>\u521b\u65b0\u4f18\u52bf\uff1a \u9996\u6b21\u5f15\u5165\u4e8c\u9636\u6ce8\u610f\u529b\u673a\u5236\uff0c\u901a\u8fc7\u534f\u65b9\u5dee\u77e9\u9635\u5efa\u6a21\u901a\u9053\u95f4\u5173\u7cfb\uff0c\u6bd4RCAN\u7684\u901a\u9053\u6ce8\u610f\u529b\u63d0\u53470.3dB PSNR\u3002</p> <p>\u67b6\u6784\u4eae\u70b9\uff1a 1. \u534f\u65b9\u5dee\u6ce8\u610f\u529b\uff1a\u8ba1\u7b97\u901a\u9053\u95f4\u7684\u4e8c\u9636\u7edf\u8ba1\u91cf\uff08\u800c\u975eRCAN\u7684\u4e00\u9636\u5747\u503c\uff09 2. \u975e\u5c40\u90e8\u589e\u5f3a\uff1a\u7ed3\u5408\u7a7a\u95f4\u6ce8\u610f\u529b\u6355\u6349\u957f\u7a0b\u4f9d\u8d56 3. \u5206\u5c42\u7ed3\u6784\uff1a\u6d45\u5c42\u2192\u6df1\u5c42\u9010\u6b65\u7ec6\u5316\u6ce8\u610f\u529b\u56fe  </p> <pre><code>class SecondOrderAttention(nn.Module):\n    def __init__(self, channels):\n        super().__init__()\n        # \u521b\u65b0\u70b91\uff1a\u534f\u65b9\u5dee\u77e9\u9635\u8ba1\u7b97\n        self.cov = nn.Sequential(\n            nn.Conv2d(channels, channels//2, 1),\n            nn.Conv2d(channels//2, channels, 1)\n        )\n\n    def forward(self, x):\n        b, c, h, w = x.shape\n        # \u4e8c\u9636\u7edf\u8ba1\u91cf\u8ba1\u7b97\n        x_flat = x.view(b, c, -1)  # [B,C,HW]\n        cov = (x_flat @ x_flat.transpose(1,2)) / (h*w)  # [B,C,C] \u2190 \u6838\u5fc3\u521b\u65b0\n        attn = self.cov(cov.unsqueeze(-1)).squeeze()  # \u6ce8\u610f\u529b\u6743\u91cd\n        return x * attn.unsqueeze(-1).unsqueeze(-1)\n</code></pre> <p>\u73b0\u4ee3\u89c6\u89d2 - \u6027\u80fd\u5dee\u8ddd\uff1a\u6bd4SwinIR\u4f4e0.5dB\uff0c\u4f46\u53c2\u6570\u91cf\u591a30% - \u6838\u5fc3\u8d21\u732e\uff1a\u8bc1\u660e\u4e86\u9ad8\u9636\u7edf\u8ba1\u91cf\u5728\u89c6\u89c9\u4efb\u52a1\u4e2d\u7684\u6709\u6548\u6027\uff0c\u5f71\u54cd\u540e\u7eedTransformer\u7684\u534f\u65b9\u5dee\u6ce8\u610f\u529b\u8bbe\u8ba1  </p>"},{"location":"Content/model/transformer/#han-hybrid-attention-network","title":"HAN (Hybrid Attention Network)","text":"<p>\u57fa\u7840\u4fe1\u606f</p> <p>\u8bba\u6587\u6807\u9898\uff1aSingle Image Super-Resolution via a Hybrid Attention Network \u4f5c\u8005\uff1aZheng Hui et al. \u4f1a\u8bae/\u671f\u520a\uff1aTIP \u53d1\u8868\u65f6\u95f4\uff1a2020\u5e74  </p> <p>\u6838\u5fc3\u7279\u70b9</p> <p>\u521b\u65b0\u4f18\u52bf\uff1a \u9996\u6b21\u5b9e\u73b0\u901a\u9053+\u7a7a\u95f4+\u5c42\u95f4\u4e09\u91cd\u6ce8\u610f\u529b\u6df7\u5408\uff0c\u5728Urban100\u6570\u636e\u96c6\u4e0a\u6bd4SAN\u63d0\u53470.25dB\u3002</p> <p>\u67b6\u6784\u4eae\u70b9\uff1a 1. \u4e09\u7ef4\u6ce8\u610f\u529b\uff1a    - \u901a\u9053\u6ce8\u610f\u529b\uff08\u7c7b\u4f3cRCAN\uff09    - \u7a7a\u95f4\u6ce8\u610f\u529b\uff08\u7c7b\u4f3cNon-local\uff09    - \u5c42\u95f4\u6ce8\u610f\u529b\uff08\u521b\u65b0\u70b9\uff09 2. \u81ea\u9002\u5e94\u878d\u5408\uff1a\u52a8\u6001\u52a0\u6743\u4e0d\u540c\u5c42\u6b21\u7279\u5f81\u56fe  </p> <pre><code>class LayerAttention(nn.Module):\n    def __init__(self):\n        super().__init__()\n        # \u521b\u65b0\u70b9\uff1a\u5c42\u95f4\u6ce8\u610f\u529b\u6743\u91cd\n        self.weights = nn.Parameter(torch.ones(3))  # \u5bf9\u5e94\u6d45/\u4e2d/\u6df1\u4e09\u5c42\n\n    def forward(self, feats):\n        norm_weights = F.softmax(self.weights, dim=0)\n        return sum(w*f for w,f in zip(norm_weights, feats))\n</code></pre> <p>\u73b0\u4ee3\u89c6\u89d2</p> <ul> <li>\u5f53\u524d\u5730\u4f4d\uff1a\u4ecd\u662f\u8f7b\u91cf\u7ea7\u6ce8\u610f\u529b\u6a21\u578b\u7684\u57fa\u51c6\u4e4b\u4e00  </li> <li>\u67b6\u6784\u542f\u53d1\uff1a  </li> <li>\u5c42\u95f4\u6ce8\u610f\u529b\u88ab\u7528\u4e8eTransformer\u7684\u8de8\u5c42\u7279\u5f81\u878d\u5408  </li> <li>\u4e09\u91cd\u6ce8\u610f\u529b\u8bbe\u8ba1\u5f71\u54cdMobileViT\u7b49\u79fb\u52a8\u7aef\u6a21\u578b  </li> </ul> <p>\u5bf9\u6bd4\u603b\u7ed3</p> \u7279\u6027 RCAN SAN HAN \u6ce8\u610f\u529b\u7c7b\u578b \u901a\u9053\u6ce8\u610f\u529b \u4e8c\u9636\u901a\u9053\u6ce8\u610f\u529b \u4e09\u91cd\u6df7\u5408\u6ce8\u610f\u529b \u53c2\u6570\u91cf 15.6M 18.3M 16.1M \u5173\u952e\u521b\u65b0 \u901a\u9053\u6743\u91cd \u534f\u65b9\u5dee\u77e9\u9635 \u5c42\u95f4\u6ce8\u610f\u529b \u73b0\u4ee3\u6539\u8fdb\u65b9\u5411 \u2192\u52a8\u6001\u901a\u9053\u5377\u79ef \u2192\u591a\u5934\u534f\u65b9\u5dee\u6ce8\u610f\u529b \u2192\u53ef\u53d8\u5f62\u6ce8\u610f\u529b <p>\u7ed3\u6784\u56fe\u5bf9\u6bd4</p> <ul> <li>SAN\u67b6\u6784</li> </ul> <pre><code>graph TD\n    A[\u8f93\u5165] --&gt; B[\u6d45\u5c42\u7279\u5f81]\n    B --&gt; C[\u534f\u65b9\u5dee\u6ce8\u610f\u529b\u5757]\n    C --&gt; D[\u975e\u5c40\u90e8\u589e\u5f3a]\n    D --&gt; E[\u91cd\u5efa\u8f93\u51fa]</code></pre> <ul> <li>HAN\u67b6\u6784</li> </ul> <pre><code>graph TD\n    A[\u8f93\u5165] --&gt; B[\u591a\u5c42\u7279\u5f81\u63d0\u53d6]\n    B --&gt; C[\u901a\u9053\u6ce8\u610f\u529b]\n    B --&gt; D[\u7a7a\u95f4\u6ce8\u610f\u529b]\n    B --&gt; E[\u5c42\u95f4\u6ce8\u610f\u529b]\n    C &amp; D &amp; E --&gt; F[\u81ea\u9002\u5e94\u878d\u5408]\n    F --&gt; G[\u8f93\u51fa]</code></pre> <p>\u6f14\u8fdb\u542f\u793a</p> <ol> <li>\u6ce8\u610f\u529b\u7ef4\u5ea6\u6269\u5c55\uff1a    RCAN(\u901a\u9053)\u2192SAN(\u4e8c\u9636)\u2192HAN(\u4e09\u7ef4)  </li> <li>\u8ba1\u7b97\u6548\u7387\u4f18\u5316\uff1a    \u4eceSAN\u7684O(C\u00b2)\u590d\u6742\u5ea6\u5230HAN\u7684O(C)\u7b80\u5316  </li> <li>\u5f53\u4ee3\u878d\u5408\u5efa\u8bae\uff1a <pre><code># \u73b0\u4ee3\u6df7\u5408\u6ce8\u610f\u529b\u793a\u4f8b\nclass ModernAttention(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.channel_att = SEBlock()  # \u6765\u81eaRCAN\n        self.spatial_att = DeformableConv()  # \u53ef\u53d8\u5f62\u5377\u79ef\n        self.layer_att = TransformerLayer()  # \u8de8\u5c42\u4ea4\u4e92\n</code></pre></li> </ol> <p>\u8fd9\u4e24\u9879\u5de5\u4f5c\u6807\u5fd7\u7740\u8d85\u5206\u8fa8\u7387\u9886\u57df\u4ece\"\u5355\u4e00\u6ce8\u610f\u529b\"\u5230\"\u591a\u7ef4\u6df7\u5408\u6ce8\u610f\u529b\"\u7684\u8303\u5f0f\u8f6c\u53d8\uff0c\u5176\u8bbe\u8ba1\u54f2\u5b66\u5728\u5f53\u524dVision Transformer\u7684\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\u4e2d\u4ecd\u6e05\u6670\u53ef\u89c1\u3002</p>"},{"location":"Content/model/transformer/#vit","title":"VIT","text":"<p>Vision Transformer (ViT) \u57fa\u7840\u4fe1\u606f</p> <p>\u8bba\u6587\u6807\u9898\uff1aAn Image is Worth 16x16 Words: Transformers for Image Recognition at Scale \u4f5c\u8005\uff1aDosovitskiy et al. \u4f1a\u8bae/\u671f\u520a\uff1aICLR 2021 \u53d1\u8868\u65f6\u95f4\uff1a2020\u5e7410\u6708\uff08arXiv\uff09  </p> <p>\u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784\u521b\u65b0</p> <ol> <li> <p>\u6838\u5fc3\u4f18\u52bf</p> <ul> <li>\u5168\u5c40\u5efa\u6a21\u80fd\u529b\uff1a\u901a\u8fc7\u81ea\u6ce8\u610f\u529b\u673a\u5236\u6355\u83b7\u56fe\u50cf\u6240\u6709\u533a\u57df\u7684\u5173\u7cfb\uff0c\u7a81\u7834CNN\u7684\u5c40\u90e8\u611f\u53d7\u91ce\u9650\u5236  </li> <li>\u53c2\u6570\u6548\u7387\uff1a\u5728\u5927\u89c4\u6a21\u6570\u636e\u4e0b\uff0c\u540c\u7b49\u53c2\u6570\u91cf\u6bd4CNN\u63d0\u53476-10%\u51c6\u786e\u7387\uff08ImageNet Top-1\uff09  </li> <li>\u67b6\u6784\u7edf\u4e00\u6027\uff1a\u5c06NLP\u9886\u57df\u7684Transformer\u76f4\u63a5\u8fc1\u79fb\u81f3\u89c6\u89c9\u4efb\u52a1\uff0c\u65e0\u9700\u5377\u79ef\u5148\u9a8c  </li> </ul> </li> <li> <p>\u5173\u952e\u67b6\u6784</p> <pre><code>graph TD\n   A[\u8f93\u5165\u56fe\u50cf] --&gt; B[\u5206\u5757\u5d4c\u5165]\n   B --&gt; C[\u6dfb\u52a0\u4f4d\u7f6e\u7f16\u7801]\n   C --&gt; D[Transformer\u7f16\u7801\u5668]\n   D --&gt; E[MLP\u5206\u7c7b\u5934]\n\n   subgraph Transformer\u7f16\u7801\u5668\n   D --&gt; MSA[\u591a\u5934\u81ea\u6ce8\u610f\u529b]\n   MSA --&gt; LN1[\u5c42\u5f52\u4e00\u5316]\n   LN1 --&gt; MLP[\u524d\u9988\u7f51\u7edc]\n   MLP --&gt; LN2[\u5c42\u5f52\u4e00\u5316]\n   end</code></pre> </li> <li> <p>\u8d85\u5206\u4efb\u52a1\u76f8\u5173\u521b\u65b0</p> <ul> <li>\u5206\u5757\u5d4c\u5165\uff08Patch Embedding\uff09\uff1a     \u5c06\u56fe\u50cf\u5206\u5272\u4e3a\\(16\\times16\\)\u7684\u5757\uff0c\u7ebf\u6027\u6295\u5f71\u4e3a\u5e8f\u5217\uff08\u7c7b\u4f3cNLP\u7684token\uff09 <pre><code>class PatchEmbed(nn.Module):\n    def __init__(self, img_size=224, patch_size=16, embed_dim=768):\n        self.proj = nn.Conv2d(3, embed_dim, kernel_size=patch_size, stride=patch_size)\n\n    def forward(self, x):\n        x = self.proj(x).flatten(2).transpose(1, 2)  # [B, C, H, W] -&gt; [B, num_patches, embed_dim]\n        return x\n</code></pre></li> <li>\u4f4d\u7f6e\u7f16\u7801\uff1a     \u4f7f\u7528\u53ef\u5b66\u4e60\u76841D\u4f4d\u7f6e\u7f16\u7801\uff08\u4e0d\u540c\u4e8e\u539f\u59cbTransformer\u7684\u6b63\u5f26\u7f16\u7801\uff09 <pre><code>self.pos_embed = nn.Parameter(torch.zeros(1, num_patches + 1, embed_dim))  # +1 for [CLS] token\n</code></pre></li> </ul> </li> </ol> <p>\u5728\u8d85\u5206\u8fa8\u7387\u9886\u57df\u7684\u6f14\u8fdb</p> <ol> <li> <p>\u4e0eCNN\u7684\u5bf9\u6bd4</p> \u7279\u6027 CNN ViT \u611f\u53d7\u91ce \u5c40\u90e8\uff08\u5377\u79ef\u6838\u9650\u5236\uff09 \u5168\u5c40\uff08\u81ea\u6ce8\u610f\u529b\uff09 \u4f4d\u7f6e\u611f\u77e5 \u9690\u5f0f\uff08\u901a\u8fc7\u5377\u79ef\uff09 \u663e\u5f0f\uff08\u4f4d\u7f6e\u7f16\u7801\uff09 \u6570\u636e\u9700\u6c42 \u4e2d\u7b49\uff08\u767e\u4e07\u7ea7\uff09 \u5927\u89c4\u6a21\uff08\u5343\u4e07\u7ea7\uff09 \u8d85\u5206\u4f18\u52bf \u5c40\u90e8\u7ec6\u8282\u6062\u590d \u957f\u7a0b\u7eb9\u7406\u4e00\u81f4\u6027 </li> <li> <p>\u8d85\u5206\u4e13\u7528\u6539\u8fdb</p> <ul> <li>SwinIR (2021)\uff1a\u5f15\u5165\u7a97\u53e3\u6ce8\u610f\u529b\uff0c\u964d\u4f4e\u8ba1\u7b97\u590d\u6742\u5ea6 <pre><code>class SwinBlock(nn.Module):\n    def __init__(self, dim, num_heads, window_size=8):\n        self.attn = WindowAttention(dim, num_heads, window_size)\n</code></pre></li> <li>EDT (2022)\uff1a\u7ed3\u5408\u6269\u6563\u6a21\u578b\u63d0\u5347\u751f\u6210\u8d28\u91cf  </li> <li>HAT (2023)\uff1a\u6df7\u5408\u6ce8\u610f\u529b\u673a\u5236\u4f18\u5316\u7eb9\u7406\u751f\u6210  </li> </ul> </li> </ol> <p>\u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u6539\u8fdb</p> <ol> <li> <p>\u5f53\u524d\u5dee\u8ddd</p> <ul> <li>\u8ba1\u7b97\u6210\u672c\uff1a\u5904\u7406\\(512\\times512\\)\u56fe\u50cf\u9700<sub>20G\u663e\u5b58\uff08CNN\u4ec5\u9700</sub>4G\uff09  </li> <li>\u5c0f\u6570\u636e\u8868\u73b0\uff1a\u8bad\u7ec3\u6570\u636e&lt;1M\u65f6\uff0c\u6027\u80fd\u5e38\u4f4e\u4e8eCNN\uff08DIV2K\u4e0aPSNR\u4f4e0.5-1dB\uff09  </li> </ul> </li> <li> <p>\u6539\u8fdb\u65b9\u5411</p> <pre><code>graph LR\n   A[ViT] --&gt; B[\u8ba1\u7b97\u6548\u7387]\n   A --&gt; C[\u6570\u636e\u9700\u6c42]\n   A --&gt; D[\u591a\u6a21\u6001\u878d\u5408]\n\n   B --&gt; B1[\u7a97\u53e3\u6ce8\u610f\u529b]\n   B --&gt; B2[\u7a00\u758f\u6ce8\u610f\u529b]\n   C --&gt; C1[\u81ea\u76d1\u7763\u9884\u8bad\u7ec3]\n   C --&gt; C2[\u77e5\u8bc6\u84b8\u998f]\n   D --&gt; D1[CLIP\u5f15\u5bfc]\n   D --&gt; D2[\u6269\u6563\u5148\u9a8c]</code></pre> </li> </ol> <p>\u6027\u80fd\u5bf9\u6bd4\uff08\u56fe\u50cf\u5206\u7c7b\uff09</p> \u6a21\u578b ImageNet Top-1 \u53c2\u6570\u91cf \u8f93\u5165\u5206\u8fa8\u7387 ResNet-50 76.1% 25M 224\u00d7224 ViT-Base 77.9% 86M 224\u00d7224 Swin-Tiny 81.2% 28M 224\u00d7224 ConvNeXt-T 82.1% 29M 224\u00d7224 <p>\u5728\u8d85\u5206\u4efb\u52a1\u4e2d\u7684\u5178\u578b\u5e94\u7528</p> <ol> <li>\u7279\u5f81\u63d0\u53d6\u5668\uff1a\u66ff\u6362SRCNN\u4e2d\u7684\u5377\u79ef\u9aa8\u5e72 <pre><code>class ViT_SR(nn.Module):\n    def __init__(self):\n        self.vit = ViT(...)  # \u9884\u8bad\u7ec3ViT\n        self.upsample = PixelShuffle(scale=4)\n</code></pre></li> <li> <p>\u5224\u522b\u5668\uff1a\u5728GAN\u6846\u67b6\u4e2d\u63d0\u4f9b\u5168\u5c40\u611f\u77e5 <pre><code>discriminator = ViT(\n    image_size=256,\n    patch_size=16,\n    num_classes=1  # \u771f/\u5047\u5224\u522b\n)\n</code></pre></p> </li> <li> <p>\u6df7\u5408\u67b6\u6784\uff1a\u4e0eCNN\u8054\u5408\u4f7f\u7528\uff08\u5982EDSR+ViT skip-connections\uff09</p> </li> </ol> <p>ViT\u7684\u6838\u5fc3\u7a81\u7834\u5728\u4e8e**\u6452\u5f03\u4e86\u89c6\u89c9\u4efb\u52a1\u5fc5\u987b\u4f9d\u8d56\u5377\u79ef\u7684\u56fa\u6709\u8303\u5f0f**\uff0c\u5176\"\u5206\u5757+\u81ea\u6ce8\u610f\u529b\"\u7684\u8bbe\u8ba1\u5728\u8d85\u5206\u9886\u57df\u5c24\u5176\u9002\u5408\u5efa\u6a21\u957f\u7a0b\u7eb9\u7406\u4f9d\u8d56\u3002\u5c3d\u7ba1\u5b58\u5728\u8ba1\u7b97\u6210\u672c\u9ad8\u7684\u5c40\u9650\uff0c\u4f46\u901a\u8fc7SwinIR\u7b49\u6539\u8fdb\uff0c\u5df2\u6210\u4e3a\u8d85\u5206SOTA\u7684\u91cd\u8981\u7ec4\u6210\u3002\u540e\u7eed\u53d1\u5c55\u5c06\u805a\u7126\u4e8e\uff1a1) \u8f7b\u91cf\u5316\u8bbe\u8ba1 2) \u4e0e\u5c0f\u6ce2/\u6269\u6563\u6a21\u578b\u878d\u5408 3) \u96f6\u6837\u672c\u9002\u5e94\u80fd\u529b\u3002</p>"},{"location":"Content/model/transformer/#swinir","title":"SwinIR","text":"<p>SWINIR\u662f\u5426\u7eafTransformer\u6a21\u578b\uff1f</p> <ul> <li>\u6df7\u5408\u67b6\u6784\uff1a   SwinIR = CNN\u7279\u5f81\u63d0\u53d6 + Swin Transformer\u4e3b\u5e72 + CNN\u4e0a\u91c7\u6837 </li> </ul> <pre><code>graph LR\n  A[\u8f93\u5165LR] --&gt; B[\u6d45\u5c42CNN] --&gt; C[Swin Transformer\u5757] --&gt; D[CNN\u4e0a\u91c7\u6837] --&gt; E[\u8f93\u51faHR]</code></pre> <ul> <li>\u4ee3\u8868\u5730\u4f4d\uff1a    \u662fVision Transformer\u5728\u8d85\u5206\u9886\u57df\u7684**\u5178\u578b\u5e94\u7528**\uff0c\u4f46\u975e\u7eaf\u7cb9Transformer\uff08\u4fdd\u7559CNN\u7ec4\u4ef6\uff09</li> </ul> <p>SWINIR\u4e0eViT(Vision Transformer)\u7684\u533a\u522b</p> \u7279\u6027 ViT SwinIR \u8f93\u5165\u5904\u7406 \u76f4\u63a5\u5206\u5757\u5d4c\u5165 CNN\u9884\u5904\u7406 \u6ce8\u610f\u529b\u7c7b\u578b \u5168\u5c40\u81ea\u6ce8\u610f\u529b \u7a97\u53e3\u79fb\u4f4d\u6ce8\u610f\u529b \u9002\u7528\u4efb\u52a1 \u5206\u7c7b \u8d85\u5206\u8fa8\u7387 <p>Transformer\u7684\u547d\u540d\u4e0e\u6838\u5fc3\u7279\u5f81</p> <p>\u540d\u79f0\u7531\u6765</p> <ul> <li> <p>\u672c\u4e49\uff1a\u6765\u81ea\"Transform\"\uff08\u53d8\u6362\uff09\uff0c\u6307\u5176\u901a\u8fc7\u6ce8\u610f\u529b\u673a\u5236**\u52a8\u6001\u8f6c\u6362**\u8f93\u5165\u8868\u793a\u7684\u80fd\u529b</p> </li> <li> <p>\u5173\u952e\u7279\u5f81\uff1a  </p> <ol> <li>\u81ea\u6ce8\u610f\u529b\u673a\u5236\uff1a\u6839\u636e\u8f93\u5165\u5185\u5bb9\u52a8\u6001\u751f\u6210\u6743\u91cd\uff08\u5bf9\u6bd4CNN\u7684\u9759\u6001\u5377\u79ef\u6838\uff09 <pre><code># \u81ea\u6ce8\u610f\u529b\u8ba1\u7b97\u793a\u4f8b\nattention = softmax(Q @ K.T / \u221ad_k) @ V  # Q/K/V\u6765\u81ea\u540c\u4e00\u8f93\u5165\n</code></pre></li> <li>\u4f4d\u7f6e\u7f16\u7801\uff1a\u5f25\u8865\u6ce8\u610f\u529b\u673a\u5236\u7684\u4f4d\u7f6e\u4e0d\u654f\u611f\u6027\uff08\u5c24\u5176\u91cd\u8981\u4e8e\u89c6\u89c9\u4efb\u52a1\uff09 <pre><code># \u5178\u578b\u6b63\u5f26\u4f4d\u7f6e\u7f16\u7801\npos_enc = [sin(pos/10000^(2i/d), cos(...)]  # \u4ea4\u66ff\u9891\u7387\n</code></pre></li> <li>\u7f16\u89e3\u7801\u67b6\u6784\uff1a\u539f\u59cb\u8bbe\u8ba1\u7528\u4e8e\u5e8f\u5217\u5230\u5e8f\u5217\u8f6c\u6362\uff08\u5982\u673a\u5668\u7ffb\u8bd1\uff09</li> </ol> </li> </ul> <p>\u8d85\u5206\u4e2d\u7684\u7279\u6b8a\u8868\u73b0</p> <ul> <li>\u5c40\u90e8\u7a97\u53e3\u6ce8\u610f\u529b\uff1aSwinIR\u5c06\u5168\u5c40\u8ba1\u7b97\u62c6\u5206\u4e3a\u53ef\u91cd\u53e0\u7684\u5c40\u90e8\u7a97\u53e3 <pre><code>graph TD\n  A[\u7279\u5f81\u56fe] --&gt; B[\u5212\u52068x8\u7a97\u53e3]\n  B --&gt; C[\u7a97\u53e3\u5185\u81ea\u6ce8\u610f\u529b]\n  C --&gt; D[\u7a97\u53e3\u79fb\u4f4d]\n  D --&gt; E[\u65b0\u7a97\u53e3\u8ba1\u7b97]</code></pre></li> </ul> <p>\u89c6\u89c9Transformer\u6a21\u578b\u8c31\u7cfb</p> <p>\u8d85\u5206\u8fa8\u7387\u9886\u57df</p> \u6a21\u578b \u6838\u5fc3\u521b\u65b0 \u53c2\u6570\u91cf PSNR(\u00d74) SwinIR \u7a97\u53e3\u79fb\u4f4d\u6ce8\u610f\u529b 12M 32.92 ESRT \u8f7b\u91cfTransformer+CNN\u6df7\u5408 6.5M 32.75 IPT \u591a\u4efb\u52a1\u9884\u8bad\u7ec3Transformer 115M 33.10 EDT \u6269\u6563\u6a21\u578b+Transformer 89M 33.38 <p>\u901a\u7528\u89c6\u89c9\u4efb\u52a1</p> <ul> <li> <p>\u5206\u7c7b\u4efb\u52a1\uff1aViT, DeiT, BEiT  </p> </li> <li> <p>\u68c0\u6d4b\u5206\u5272\uff1aDETR, MaskFormer  </p> </li> <li> <p>\u89c6\u9891\u5904\u7406\uff1aTimeSformer, ViViT  </p> </li> </ul> <p>Transformer\u7684\u67b6\u6784\u521b\u65b0\u56fe\u89e3</p> <p>SwinIR\u7ed3\u6784\u5206\u89e3</p> <pre><code>graph TD\n    A[LR\u8f93\u5165] --&gt; B[\u6d45\u5c423x3\u5377\u79ef]\n    B --&gt; C[\u6b8b\u5deeSwin Transformer\u5757]\n    C --&gt; D[\u5b50\u50cf\u7d20\u5377\u79ef\u4e0a\u91c7\u6837]\n    D --&gt; E[HR\u8f93\u51fa]\n\n    subgraph Swin Transformer\u5757\n    C --&gt; F[\u7a97\u53e3\u81ea\u6ce8\u610f\u529b]\n    F --&gt; G[\u8de8\u7a97\u53e3\u8fde\u63a5]\n    G --&gt; H[MLP\u6269\u5c55]\n    end</code></pre> <p>\u4e0e\u4f20\u7edfCNN\u5bf9\u6bd4</p> <pre><code>graph LR\n    subgraph CNN\n    A[\u56fa\u5b9a\u5377\u79ef\u6838] --&gt; B[\u5c40\u90e8\u7279\u5f81\u63d0\u53d6]\n    end\n\n    subgraph Transformer\n    C[\u52a8\u6001\u6ce8\u610f\u529b] --&gt; D[\u5168\u5c40\u5173\u7cfb\u5efa\u6a21]\n    end\n\n    B --&gt; E[\u9700\u5806\u53e0\u591a\u5c42]\n    D --&gt; F[\u5355\u5c42\u5168\u5c40\u4ea4\u4e92]</code></pre> <p>\u91cd\u8981\u7ed3\u8bba</p> <ol> <li> <p>\u5e76\u975e\u9769\u547d\u6027\u8131\u79bb\uff1a    SwinIR\u7b49\u6a21\u578b\u901a\u8fc7\u4fdd\u7559CNN\u7684**\u5c40\u90e8\u6027\u5148\u9a8c**\uff0c\u5f25\u8865\u7eafTransformer\u5728\u89c6\u89c9\u4efb\u52a1\u4e2d\u7684\u7f3a\u9677</p> </li> <li> <p>\u6838\u5fc3\u4f18\u52bf\u573a\u666f\uff1a  </p> <ul> <li>\u9700\u8981**\u957f\u7a0b\u4f9d\u8d56**\u5efa\u6a21\u7684\u4efb\u52a1\uff08\u5982\u5927\u8303\u56f4\u7eb9\u7406\u5408\u6210\uff09  </li> <li>**\u591a\u5c3a\u5ea6\u4ea4\u4e92**\u9700\u6c42\u5f3a\u7684\u573a\u666f\uff08\u5982\u89c6\u9891\u8d85\u5206\uff09</li> </ul> </li> <li> <p>\u5f53\u524d\u5c40\u9650\uff1a  </p> <ul> <li>\u5c0f\u6570\u636e\u6613\u8fc7\u62df\u5408\uff08\u9700\u767e\u4e07\u7ea7\u8bad\u7ec3\u6837\u672c\uff09  </li> <li>\u9ad8\u5206\u8fa8\u7387\u8ba1\u7b97\u6210\u672c\uff08\u53ef\u901a\u8fc7\u7a97\u53e3\u6ce8\u610f\u529b\u7f13\u89e3\uff09</li> </ul> </li> <li> <p>\u672a\u6765\u65b9\u5411\uff1a <pre><code>graph TB\n    A[Transformer] --&gt; B[\u4e0e\u6269\u6563\u6a21\u578b\u7ed3\u5408]\n    A --&gt; C[\u52a8\u6001\u7a00\u758f\u6ce8\u610f\u529b]\n    A --&gt; D[\u795e\u7ecf\u538b\u7f29\u67b6\u6784]</code></pre></p> </li> </ol> <p>Transformer\u5728\u8d85\u5206\u9886\u57df\u7684\u771f\u6b63\u4ef7\u503c\u5728\u4e8e\u5176**\u52a8\u6001\u7279\u5f81\u9009\u62e9\u80fd\u529b**\u2014\u2014\u80fd\u591f\u6839\u636e\u56fe\u50cf\u5185\u5bb9\u81ea\u4e3b\u8c03\u6574\u4e0d\u540c\u533a\u57df\u7684\u5904\u7406\u5f3a\u5ea6\uff0c\u8fd9\u4e0e\u4f20\u7edfCNN\u7684\u5747\u5300\u8ba1\u7b97\u5f62\u6210\u672c\u8d28\u533a\u522b\u3002SwinIR\u7684\u6210\u529f\u8bc1\u660e\u4e86\u6df7\u5408\u67b6\u6784\uff08CNN+Transformer\uff09\u5728\u5f53\u524d\u9636\u6bb5\u7684\u5b9e\u7528\u6027\uff0c\u800c\u7eafTransformer\u6a21\u578b\uff08\u5982IPT\uff09\u4ecd\u9762\u4e34\u8ba1\u7b97\u8d44\u6e90\u6311\u6218\u3002</p>"},{"location":"Content/others/1/","title":"\u52a0\u5165\u6587\u6863\u6307\u5bfc","text":""},{"location":"Content/others/1/#lhaigit","title":"LHAI\u7684git\u8fde\u63a5","text":""},{"location":"Content/others/1/#_2","title":"\u4f5c\u4e3a\u521b\u59cb\u8005","text":""},{"location":"Content/others/1/#collaborator","title":"\u4f5c\u4e3acollaborator","text":"<p>\u524d\u7f6e\u6761\u4ef6\uff1agit\u3001\u68af\u5b50\u3001python3.10\u4ee5\u4e0a</p> <ol> <li> <p>\u521b\u5efa\u672c\u5730\u4ed3\u5e93\uff0c\u4e0egit\u4ed3\u5e93\u8fde\u63a5</p> <p>\uff081\uff09\u521b\u5efa\u4e00\u4e2a\u7a7a\u767d\u6587\u4ef6\u5939\uff0c\u7528\u4e8e\u5b58\u50a8\u6587\u6863\u672c\u5730\u6587\u4ef6</p> <p>\uff082\uff09\u514b\u9686github\u9879\u76ee\u6587\u6863\uff1a</p> <pre><code>git clone https://github.com/boobyuuuu/LHAI.git\n</code></pre> <p>\u8fd9\u4e00\u6b65\u5f88\u5927\u6982\u7387\u4f1a\u62a5\u9519\uff0c\u662f\u521d\u59cb\u73af\u5883\u8bbe\u7f6e\u7684\u95ee\u9898\uff1b\u6839\u636e\u5177\u4f53\u62a5\u9519\u5177\u4f53\u89e3\u51b3</p> </li> <li> <p>\u62ff\u5230\u9879\u76ee\u7528\u6237\u624b\u518c\u6587\u4ef6 LHAI \u540e\uff0c\u53ef\u4ee5\u8fdb\u884c\u67e5\u770b\uff1a</p> <p>\uff081\uff09\u7528\u6237\u624b\u518c\u57fa\u4e8emkdocs\u6784\u5efa\u3002\u9996\u5148\u662fmkdocs\u7684\u73af\u5883\uff1a</p> <pre><code>pip install mkdocs\n\npip install mkdocs-material\n\npip install pymdown-extensions\n</code></pre> <p>\u4ee5\u4e0a\u4e09\u4e2a\u662f\u4e3b\u8981\u7684\u73af\u5883\uff0c\u8fd8\u6709\u4e00\u4e9b\u63d2\u4ef6\uff0c\u6839\u636e\u62a5\u9519\u5dee\u54ea\u4e9b\u5c31\u5b89\u88c5\u54ea\u4e9b\uff0c\u77e5\u9053\u53ef\u4ee5\u8fd0\u884c\uff1a</p> <pre><code>mkdocs serve\n</code></pre> </li> <li> <p>\u4fee\u6539\u7528\u6237\u624b\u518c</p> <p>\uff081\uff09\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u4fee\u6539</p> <p>\uff082\uff09mkdocs.yml \u6587\u4ef6\u5b58\u50a8\u4e86\u6240\u6709\u7684\u914d\u7f6e\u4fe1\u606f\u3001\u7f51\u9875\u7ed3\u6784\u4fe1\u606f</p> <p>\uff083\uff09\u5177\u4f53mkdocs\u6559\u7a0b\u67e5\u770b\uff1a</p> <p>https://mkdocs-like-code.readthedocs.io/zh-cn/latest/</p> </li> <li> <p>\u786e\u8ba4\u81ea\u5df1\u4fee\u6539\u6ca1\u95ee\u9898\u540e\uff0c\u4e0a\u4f20\u5230 github\uff0c\u4e0a\u4f20\u5230 github-pages</p> <p>\uff081\uff09\u4e0a\u4f20github\u8fde\u62db\uff1a</p> <pre><code>git add .\n\ngit commit -m \"\u82f1\u6587\u586b\u5199\u4fee\u6539\u65e5\u5fd7\"\n\ngit push\n</code></pre> <p>\uff082\uff09\u4e0a\u4f20github-pages\uff1a</p> <pre><code>mkdocs gh-deploy\n</code></pre> </li> <li> <p>\u5e73\u5e38\u5de5\u4f5c\u6d41\u7a0b</p> <p>\u7531\u4e8e\u662f\u591a\u4eba\u534f\u540c\uff0c\u5171\u540c\u7ba1\u7406\u5f62\u5f0f\uff0c\u9700\u8981\u6bcf\u4e2a\u4eba\u9ed8\u5951\u914d\u5408\uff0c\u5e76\u5f62\u6210\u4e25\u8c28\u7684\u4fee\u6539\u89c4\u5219\u3002\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p>\uff081\uff09\u81ea\u5df1\u8fdb\u884c\u4e86\u4e00\u4e9b\u5de5\u4f5c\uff0c\u5728\u81ea\u5df1\u672c\u5730\u5199\u4e86\u65b0\u7684\u5185\u5bb9</p> <p>\uff082\uff09\u540c\u6b65github\u7684\u7248\u672c\uff1a</p> <p><pre><code>git pull\n</code></pre> \u8fd9\u4e00\u6b65\u4f1a\u5c06github\u4e0a\u6700\u65b0\u7684\u7248\u672c\u62c9\u53d6\u5230\u81ea\u5df1\u672c\u5730\uff0c\u4f46\u53ea\u4f1a\u5bf9\u4fee\u6539\u8fc7\u7684\u90e8\u5206\u8fdb\u884c\u66f4\u6539\uff0c\u4e0d\u4f1a\u628a\u4f60\u521b\u5efa\u7684\u65b0\u7684\u672c\u5730\u6587\u6863\u8986\u76d6\u6d88\u9664\u6389</p> <p>\uff083\uff09\u8fdb\u884cgithub\u4e0a\u4f20</p> <p>\uff084\uff09\u8fdb\u884cgithub-pages\u4e0a\u4f20</p> <p>\u8bf7\u9075\u5b88\u8fd9\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b</p> </li> </ol>"},{"location":"Content/others/GP/","title":"\u7ec4\u4f1a\u4e0e\u8fdb\u5c55","text":""},{"location":"Content/others/GP/#99","title":"\u8ba8\u8bba 9\u67089\u65e5","text":"<p>\u8981\u89e3\u51b3\u7684\u51e0\u4e2a\u6570\u636e\u95ee\u9898</p> <ol> <li> <p>xingwei\u6570\u636e\u95ee\u9898</p> </li> <li> <p>\u5706\u73af/\u5706\u76d8\u95ee\u9898</p> </li> <li> <p>\u6570\u636e\u96c6\u5f15\u7528\u7684\u987a\u5e8f\u95ee\u9898</p> </li> <li> <p>\u5206\u5b50\u4e91\u6570\u636e</p> </li> <li> <p>HESS\u771f\u5b9e\u8bc4\u4f30\u6570\u636e\u96c6</p> </li> <li> <p>\u5f52\u4e00\u5316\u4e0e\u6d41\u5f3a\u8fd8\u539f\u95ee\u9898</p> </li> </ol> <p>\u8ba8\u8bba\u7ed3\u679c\uff1a</p> <ol> <li> <p>xingwei\u6570\u636e\u95ee\u9898\uff1a</p> <ul> <li>\u51fa\u73b0\u566a\u70b9\u6570\u636e\u3002\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0\u8fd9\u79cd\u6570\u636e\uff1a\u8f93\u5165\u7684\u6570\u636e\u603b\u6d41\u5f3a\u592a\u4f4e\uff0c\u8fbe\u5230\u4e86\u4eea\u5668\u7684\u566a\u58f0\u6c34\u5e73\u3002\u89e3\u51b3\uff1a1. \u8003\u5bdf\u4e00\u4e0b\u4ea7\u751f\u8fd9\u79cd\u566a\u70b9\u7684\u8f93\u5165\u6570\u636e\u6d41\u5f3a\uff0c\u662f\u5426\u4e0e\u5176\u4ed6\u6570\u636e\u6709\u6570\u91cf\u7ea7\u7684\u672c\u8d28\u5dee\u522b\uff0c\u5e76\u4e14\u786e\u5b9a\u4ea7\u751f\u8fd9\u79cd\u566a\u70b9\u7684\u8f93\u5165\u6570\u636e\u7684\u6d41\u5f3a\u8303\u56f4\u3002  -- \u7b2c\u4e00\u4e2a\u7f6e\u4fe1\u5ea6\u63a7\u5236\u91cf\uff1a\u8f93\u5165\u603b\u6d41\u5f3a</li> <li>\u5377\u79ef\u51fa\u73b0\u6d41\u5f3a\u5206\u5e03\u5f02\u5e38\u95ee\u9898\u3002\u73b0\u8c61\uff1a\u5728\u539f\u672c\u6ca1\u6709\u4fe1\u53f7\u7684\u5730\u65b9\u51fa\u73b0\u4e86\u5f02\u5e38\u7684\u6d41\u5f3a\u5cf0\u503c\u3002\u6211\u4eec\u731c\u6d4b\u7684\u539f\u56e0\uff1a\u8f93\u5165\u6570\u636e\u5b58\u5728\u6d41\u5f3a\u6570\u91cf\u7ea7\u5dee\u522b\u8fc7\u5927\u7684\u6e90\uff0c\u4e00\u4e9b\u4e0d\u660e\u663e\u7684\u6e90\u5bfc\u81f4\u3002\u89e3\u51b3\uff1a\u8003\u5bdf\u4e00\u4e0b\u4ea7\u751f\u8fd9\u79cd\u5f02\u5e38\u7684\u8f93\u5165\u6570\u636e\u6d41\u5f3a\uff0c\u662f\u5426\u4e0e\u5176\u4ed6\u6570\u636e\u6709\u6570\u91cf\u7ea7\u7684\u672c\u8d28\u5dee\u522b\uff0c\u5e76\u4e14\u786e\u5b9a\u4ea7\u751f\u8fd9\u79cd\u5f02\u5e38\u7684\u8f93\u5165\u6570\u636e\u7684\u6d41\u5f3a\u6570\u91cf\u7ea7\u5dee\u8303\u56f4\uff0c\u786e\u4fdd\u73b0\u5b9e\u5e94\u7528\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898  -- \u7b2c\u4e8c\u4e2a\u7f6e\u4fe1\u5ea6\u63a7\u5236\u91cf\uff1a\u8f93\u5165\u6570\u636e\u4e2d\u6e90\u7684\u6d41\u5f3a\u6570\u91cf\u7ea7\u5dee</li> </ul> </li> <li> <p>\u5706\u73af/\u5706\u76d8\u95ee\u9898</p> <ul> <li>\u786e\u5b9a\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u731c\u6d4b\u5f71\u54cd\u56e0\u7d20\uff1a1.\u5185\u5916\u5f84\u6bd4\u4f8b 2.\u5916\u5f84\u7edd\u5bf9\u5927\u5c0f 3. \u603b\u6d41\u5f3a \u89e3\u51b3\uff1a1.\u5185\u5916\u5f84\u6bd4\u4f8b\u6765\u63a7\u5236\u5706\u73af\uff0c\u751f\u6210\u8fde\u7eed\u5706\u73af\u8bc4\u4f30\u6570\u636e\u96c6\uff0c\u786e\u5b9a\u5728\u591a\u5c11\u65f6\u4f1a\u51fa\u73b0\u95ee\u9898\u30022.\u751f\u6210\u5355\u4e2a\u8fde\u7eed\u5706\u73af\u8bc4\u4f30\u6570\u636e\u96c6\u3002 -- \u7b2c\u4e09\u4e2a\u7f6e\u4fe1\u5ea6\u8003\u5bdf\u91cf\uff1a\u5706\u73af/\u5706\u76d8\u8bc4\u4f30\u503c</li> </ul> </li> <li> <p>\u6570\u636e\u96c6\u5f15\u7528\u7684\u987a\u5e8f\u95ee\u9898\u3002\u5df2\u89e3\u51b3\uff0c\u5c06shuffle\u8bbe\u7f6e\u4e3aFalse</p> </li> <li> <p>\u5206\u5b50\u4e91\u6570\u636e\u3002\u5df2\u89e3\u51b3\uff0c\u5206\u5b50\u4e91\u6570\u636e\u5df2\u7ecf\u52a0\u5165\u8bad\u7ec3\u96c6</p> </li> <li> <p>HESS\u771f\u5b9e\u8bc4\u4f30\u6570\u636e\u96c6\u3002\u4e0d\u7740\u6025</p> </li> <li> <p>\u5f52\u4e00\u5316\u4e0e\u6d41\u5f3a\u8fd8\u539f\u95ee\u9898\u3002</p> <ul> <li>\u786e\u5b9a\u5728\u5efa\u7acb\u54cd\u5e94\u8fc7\u7a0b\u4e2d\uff0c\u5377\u79ef\u524d\u540e\u4e24\u5f20\u56fe\u7684\u603b\u6d41\u5f3a\u76f8\u7b49</li> <li>\u4e3a\u4e86\u6a21\u578b\u5feb\u901f\u6536\u655b\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u91c7\u7528min-max\u5f52\u4e00\u5316\u3002\u5f52\u4e00\u5316\u4e4b\u540e\uff0c\u4e24\u5f20\u56fe\u603b\u6d41\u5f3a\u4e0d\u7b49\uff0c\u5e76\u4e14\u8d85\u5206\u56fe\u50cf\u8f83\u96be\u8fd8\u539f\u3002\u8003\u8651\u5b9e\u9645\u60c5\u51b5\uff0c\u91c7\u7528\u65b0\u7684\u5f52\u4e00\u5316\u65b9\u5f0f\uff0c\u5e76\u4e14\u5728\u8d85\u5206\u4e4b\u540e\u80fd\u591f\u6b63\u786e\u8fd8\u539f\u73b0\u5b9e\u6d41\u5f3a\u3002</li> </ul> </li> </ol>"},{"location":"Content/others/GP/#97","title":"\u7ec4\u4f1a\u4e03 9\u67087\u65e5","text":""},{"location":"Content/others/GP/#725","title":"\u7ec4\u4f1a\u516d 7\u670825\u65e5","text":"<ol> <li>\u672c\u5468\u7ed3\u8425\u6d4b\u8bd5\uff0c\u6ca1\u505a\u591a\u5c11\u4efb\u52a1</li> <li>\u5b8c\u6210\u4e86diffusion\u7684\u6846\u67b6\uff0c\u6574\u5408\u4e86\u4e00\u4e0b\u73b0\u5728\u80fd\u591f\u7528\u6765\u5e94\u7528\u5c55\u793a\u7684\u6a21\u578b</li> </ol> <p>CNN+DIFFUSION</p> <p>xingwei+halos+miragesearch</p> <p>\u4e00\u51716\u4e2a\u6a21\u578b\uff0c\u7b49\u5f85\u6b23\u96e8\u90a3\u8fb9\u7ed9\u6570\u636e\u8fdb\u884c\u5b9e\u9645\u68c0\u6d4b</p> <ol> <li>\u540e\u7eed\u6211\u5e0c\u671b\u52a0\u6df1\u4e00\u70b9\u5bf9\u6a21\u578b\u7684\u7406\u89e3\uff0c\u56e0\u6b64\u4f1a\u6309\u7167SR\u6a21\u578b\u53d1\u5c55\u7684\u987a\u5e8f\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u6a21\u578b\u5728\u6211\u4eec\u7684\u6846\u67b6\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u5b9e\u73b0\uff0c\u5e76\u4e14\u8bb0\u5f55\u6bcf\u4e2a\u6a21\u578b\u7684\u4f18\u52a3\u52bf\u548c\u6548\u679c\u3002\u76f8\u5e94\u7684\u7b14\u8bb0\u4f1a\u53d1\u5e03\u5728\u7f51\u9875\u4e0a\u4f9b\u5927\u5bb6\u53c2\u8003\u3002\u4f46\u662f\u4f1a\u4ee5\u8001\u5e08\u548c\u6b23\u96e8\u90a3\u8fb9\u7684\u9700\u8981\u5b9e\u73b0\u4f5c\u4e3a\u4e3b\u8981\u7684\u5de5\u4f5c\u5185\u5bb9\u3002</li> </ol>"},{"location":"Content/others/GP/#713","title":"\u7ec4\u4f1a\u4e94 7\u670813\u65e5","text":"<p>\u4e3b\u8981\u5185\u5bb9\uff1a\u8ba8\u8bba\u5f53\u524d\u8fdb\u5c55\u4ee5\u53ca\u63a5\u4e0b\u6765\u7684\u5de5\u4f5c</p> <p>\u6b23\u96e8\uff1a\u53ef\u4ee5\u589e\u52a0\u66f4\u591a\u6e90\u7684\u6a21\u5f0f</p> <p>\u5de5\u4f5c\uff1a</p> <p>\u4e00 \u7ed3\u5408\u5b9e\u9645</p> <ol> <li> <p>\u5c06\u73b0\u5728\u7684\u6a21\u578b\u5e94\u7528\u5230\u5b9e\u9645\u7684\u5929\u4f53\u6e90\u4e2d</p> </li> <li> <p>\u4e0e\u4f20\u7edf\u5904\u7406\u65b9\u6cd5\u8fdb\u884c\u5bf9\u6bd4</p> </li> </ol> <p>\u4e8c \u8fed\u4ee3\u6a21\u578b</p> <p>\u5341\u51e0\u4e2a\u7684\u6570\u636e\uff1a\u8fdb\u884c\u6d4b\u8bd5</p> <p>4200\u4e2a\u7684\u6570\u636e\uff1a</p>"},{"location":"Content/others/GP/#624","title":"\u7ec4\u4f1a\u56db 6\u670824\u65e5","text":"<p>\u4e3b\u8981\u5185\u5bb9\uff1a\u661f\u7ef4\u3001\u9648\u529b\u7430\u3001\u80e1\u6b23\u96e8\u3001\u5218\u6893\u822a\u9636\u6bb5\u6027\u603b\u7ed3\u4e4b\u524d\u5de5\u4f5c\u8fdb\u5c55\uff0c\u5e76\u8fdb\u884c\u672a\u6765\u5c55\u671b</p> <p>\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u8fdb\u884c\u4f18\u5316\uff1a</p> <ol> <li> <p>Model</p> <p>\uff081\uff09\u5c1d\u8bd5transformer</p> <p>\uff082\uff09\u5c1d\u8bd5resnet\uff08\u6b8b\u5dee\u7f51\u7edc\uff09</p> </li> <li> <p>LOSS</p> <p>\uff081\uff09\u5e94\u5bf9\u9ad8/\u4f4e\u6d41\u5f3a\u5dee\u7684\u60c5\u51b5\uff1a\u52a0\u5165log loss</p> <p>\uff082\uff09\u6bcf\u4e2a\u683c\u70b9\u90fd\u4e0d\u8981\u5dee\u8fc710%\uff1a\u52a0\u6846\u65b9\u5dee</p> <p>\uff083\uff09\u52a0\u5165\u7269\u7406\u673a\u5236/\u7ea6\u675f\uff1aLOSS\u52a0\u7269\u7406\u673a\u5236\u9650\u5236\uff08\u975e\u5e38FURTHER\uff09</p> </li> <li> <p>Data</p> <p>\uff081\uff09\u6574\u7406\u76ee\u524d\u7684\u8bad\u7ec3-\u9a8c\u8bc1Dataset\uff0c\u76ee\u524d\u6570\u636e\u6709\u70b9\u592a\u4e71\uff0c\u5efa\u7acb\u6570\u636e\u5e93</p> <p>\uff082\uff09\u6570\u636e\u96c6\u6e05\u6d17\u5de5\u4f5c\u3002\u5efa\u7acb\u6570\u636e\u9884\u5904\u7406\u6d41\u7a0b\u6846\u67b6</p> </li> <li> <p>Evaluation</p> <p>\uff081\uff09\u52a0\u4e2a\u6846\u518d\u8fdb\u884c\u8bc4\u4f30\uff0c\u9a8c\u8bc1LOSS-\uff082\uff09\u7684\u6548\u679c</p> <p>\uff082\uff09\u6839\u636e\u4eba\u5de5\u6253\u5206\u6807\u7b7e\uff0c\u8bad\u7ec3\u51fa evaluation model\uff08\u975e\u5e38FURTHER\uff09</p> </li> <li> <p>\u8bad\u7ec3\u673a\u5236\uff1a\u534a\u76d1\u7763\u65b9\u6cd5</p> <p>\uff081\uff09\u81ea\u6211\u5faa\u73af\u8fed\u4ee3\u534a\u76d1\u7763</p> <p>\uff082\uff09\u6839\u636e\u4eba\u5de5\u6253\u5206\u6807\u7b7e\uff0c\u8bad\u7ec3\u51fa evaluation model\uff1b\u6839\u636eeval model\u8fdb\u884c\u5927\u91cf\u6570\u636e\u96c6\u751f\u6210\uff1b\u8fdb\u884c\u5faa\u73af\u8bad\u7ec3\uff08input data\u8db3\u591f\u591a\uff09</p> </li> <li> <p>Structure</p> <p>\u73b0\u5728\u6a21\u578b\u6709\u70b9\u6742\u591a\uff0c\u60f3\u4e2a\u529e\u6cd5\u628a\u4e0d\u540c\u7684\u7b97\u6cd5\u641e\u5230\u540c\u4e00\u4e2a\u6846\u67b6\u91cc\u53bb\uff08\u975e\u5e38\u91cd\u8981\u4e14\u6025\u8feb\uff09</p> </li> </ol>"},{"location":"Content/others/GP/#_2","title":"\u7ec4\u4f1a\u4e09","text":"<p>\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u8fdb\u884c\u4f18\u5316\uff1a</p> <ol> <li> <p>Model</p> <p>\uff081\uff09\u5c1d\u8bd5transformer</p> <p>\uff082\uff09\u5c1d\u8bd5resnet\uff08\u6b8b\u5dee\u7f51\u7edc\uff09</p> </li> <li> <p>LOSS</p> <p>\uff081\uff09\u5e94\u5bf9\u9ad8/\u4f4e\u6d41\u5f3a\u5dee\u7684\u60c5\u51b5\uff1a\u52a0\u5165log loss</p> <p>\uff082\uff09\u6bcf\u4e2a\u683c\u70b9\u90fd\u4e0d\u8981\u5dee\u8fc710%\uff1a\u52a0\u6846\u65b9\u5dee</p> <p>\uff083\uff09\u52a0\u5165\u7269\u7406\u673a\u5236/\u7ea6\u675f\uff1aLOSS\u52a0\u7269\u7406\u673a\u5236\u9650\u5236\uff08\u975e\u5e38FURTHER\uff09</p> </li> <li> <p>Data</p> </li> <li> <p>Evaluation</p> <p>\uff081\uff09\u52a0\u4e2a\u6846\u518d\u8fdb\u884c\u8bc4\u4f30\uff0c\u9a8c\u8bc1LOSS-\uff082\uff09\u7684\u6548\u679c</p> <p>\uff082\uff09\u6839\u636e\u4eba\u5de5\u6253\u5206\u6807\u7b7e\uff0c\u8bad\u7ec3\u51fa evaluation model\uff08\u975e\u5e38FURTHER\uff09</p> </li> <li> <p>\u8bad\u7ec3\u673a\u5236\uff1a\u534a\u76d1\u7763\u65b9\u6cd5</p> <p>\uff081\uff09\u81ea\u6211\u5faa\u73af\u8fed\u4ee3\u534a\u76d1\u7763</p> <p>\uff082\uff09\u6839\u636e\u4eba\u5de5\u6253\u5206\u6807\u7b7e\uff0c\u8bad\u7ec3\u51fa evaluation model\uff1b\u6839\u636eeval model\u8fdb\u884c\u5927\u91cf\u6570\u636e\u96c6\u751f\u6210\uff1b\u8fdb\u884c\u5faa\u73af\u8bad\u7ec3\uff08input data\u8db3\u591f\u591a\uff09</p> </li> </ol>"},{"location":"blog/","title":"Blog","text":""},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#lhai-user-manual","title":"LHAI User Manual","text":""},{"location":"changelog/#1.0.3","title":"1.0.3 January 14, 2025","text":"<ul> <li>Added content <code>Code Section/SERVER</code></li> <li>Added content <code>Code Section/TRAIN</code></li> <li>Added content <code>Code Section/PREDICT</code></li> <li>Added content <code>Code Section/EVALUATION</code></li> </ul>"},{"location":"changelog/#1.0.2","title":"1.0.2 January 13, 2025","text":"<ul> <li>LHAI Progress: Added an evaluation module for comprehensive and intuitive model assessment. (<code>LHAI/evaluation.py</code>)</li> </ul>"},{"location":"changelog/#1.0.1","title":"1.0.1 January 13, 2025","text":"<ul> <li>LHAI Progress: Introduced new models for application and training in <code>LHAI/LHAI/model</code>:</li> <li>CNN-based (Residual + Recursive): CARN, DRCN, DRRN, EDSR, ESPCN, FSRCNN, IDN, LapSRN, SRCNN, VDSR</li> <li>GAN-based: CGAN, SRGAN</li> <li>DenseNet-based: SRDenseNet</li> <li>Diffusion-based: SR3 (Super-Resolution via Repeated Refinement)</li> </ul>"},{"location":"changelog/#1.0.0","title":"1.0.0 January 12, 2025","text":"<p>Great updates</p> <ul> <li>LHAI Progress: Completed industrialization of the code and released on LHAI</li> <li>Added content <code>Code Section/index</code></li> <li>Added content <code>Code Section/DATA</code></li> <li>Added content <code>Code Section/DOCS</code></li> <li>Added content <code>Code Section/LHAI</code></li> <li>Added content <code>Code Section/SAVES</code></li> <li>Added content <code>Code Section/TRAIN</code></li> <li>Added functionality: Chinese-English language switching</li> <li>Added functionality ChangeLog <code>Others Section/ChangeLog</code></li> <li>Fix bug: The content of language conversion on the homepage is missing</li> </ul>"},{"location":"changelog/#0.2.3","title":"0.2.3 January 1, 2025","text":"<ul> <li>Added content: <code>Data Section/simulation</code></li> <li>Added content: <code>Others Section/HowtoBeCollaborator</code></li> </ul>"},{"location":"changelog/#0.2.2","title":"0.2.2 December 20, 2024","text":"<ul> <li>Added content: <code>Homepage</code></li> <li>Added content: <code>Data Section/index</code></li> <li>Added content: <code>Network Section/index</code></li> <li>Added content: <code>Eval Section/index</code></li> <li>Added content: <code>Code Section/index</code></li> <li>Added content: <code>Others Section</code></li> </ul>"},{"location":"changelog/#0.2.1","title":"0.2.1 December 20, 2024","text":"<ul> <li>Completed homepage layout</li> <li>Finalized overall style</li> </ul>"},{"location":"changelog/#0.2.0","title":"0.2.0 December 10, 2024","text":"<ul> <li>Selected MkDocs template</li> <li>Decided on the user manual name: LHAI User Manual</li> <li>Finalized the structure of the manual content</li> </ul>"},{"location":"changelog/#0.1.0","title":"0.1.0 December 1, 2024","text":"<ul> <li>First release</li> </ul>"},{"location":"changelog/#0.0.0","title":"0.0.0 November 24, 2024","text":"<ul> <li>Completed initial super-resolution using FERMI simulation data</li> <li>Participated in the Second LHAASO Collaboration Conference in 2024</li> <li>Decided to create a user manual</li> </ul>"},{"location":"prompt/1/","title":"\u63d0\u793a\u8bcd - \u6839\u636e\u4ee3\u7801\u751f\u6210\u6587\u6863","text":""},{"location":"zh/Content/codes/","title":"\u4ee3\u7801\u90e8\u5206","text":"<p>\u672c\u8282\u5c06\u8be6\u7ec6\u8bf4\u660e\u4ee3\u7801\u7684\u7ed3\u6784\uff0c\u8bad\u7ec3\u6570\u636e\u548c\u6d4b\u8bd5\u6a21\u578b\u7684\u5b58\u653e\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u5982\u4f55\u5f00\u59cb\u8bad\u7ec3\u548c\u63a8\u7406\u3002</p> <p>\u4ee3\u7801\u7684\u603b\u4f53\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>\u251c\u2500\u2500 LICENSE            &lt;- Open-source license if one is chosen\n\u251c\u2500\u2500 Makefile           &lt;- Makefile with convenience commands like `make data` or `make train`\n\u251c\u2500\u2500 README.md          &lt;- The top-level README for developers using this project.\n\u251c\u2500\u2500 data               &lt;- Different types of data. (Recommended to upload with npy formation)\n\u2502   \u251c\u2500\u2500 FERMI\n\u2502   \u251c\u2500\u2500 POISSON\n\u2502   \u251c\u2500\u2500 SIMU\n\u2502   \u2514\u2500\u2500 RAW\n\u2502\n\u251c\u2500\u2500 saves             &lt;- Figure/Loss saves, Trained and Serialized models, model Predictions, .\n\u2502   \u251c\u2500\u2500 FIGURE        &lt;- Figure saves in training.\n\u2502   \u2502\u2500\u2500 PRE_FIG       &lt;- Figure saves in predicting.\n\u2502   \u251c\u2500\u2500 LOSS          &lt;- LOSS data(.npy) and LOSS Figure(.png) saves in training.\n\u2502   \u2514\u2500\u2500 MODEL         &lt;- Trained and Serialized models.\n\u2502\n\u251c\u2500\u2500 docs               &lt;- A default mkdocs project; see www.mkdocs.org for details\n\u2502\n\u2502\n\u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks. Naming convention is a number (for ordering),\n\u2502                         the creator's initials, and a short `-` delimited description, e.g.\n\u2502                         `1.0-jqp-initial-data-exploration`.\n\u2502\n\u251c\u2500\u2500 pyproject.toml     &lt;- Project configuration file with package metadata for \n\u2502                         LHAI and configuration for tools like black\n\u2502\n\u251c\u2500\u2500 references         &lt;- Data dictionaries, manuals, and all other explanatory materials.\n\u2502\n\u251c\u2500\u2500 reports            &lt;- Generated analysis as HTML, PDF, LaTeX, etc.\n\u2502   \u2514\u2500\u2500 figures        &lt;- Generated graphics and figures to be used in reporting\n\u2502\n\u251c\u2500\u2500 requirements.txt   &lt;- The requirements file for reproducing the analysis environment, e.g.\n\u2502                         generated with `pip freeze &gt; requirements.txt`      \n\u2502\n\u251c\u2500\u2500 setup.cfg          &lt;- Configuration file for flake8\n\u2502\n\u2514\u2500\u2500 LHAI   &lt;- Source code for use in this project.\n    \u2502\n    \u251c\u2500\u2500 __init__.py             &lt;- Makes LHAI a Python module\n    \u2502\n    \u251c\u2500\u2500 config.py               &lt;- Store useful variables and configuration\n    \u2502\n    \u251c\u2500\u2500 evaluation.py              &lt;- 3 different methods to evaluation trained models.\n    \u2502\n    \u251c\u2500\u2500 modeling                \n    \u2502   \u251c\u2500\u2500 __init__.py \n    \u2502   \u251c\u2500\u2500 predict.py          &lt;- Code to run model inference with trained models          \n    \u2502   \u2514\u2500\u2500 train.py            &lt;- Code to train models\n    \u2502\n    \u251c\u2500\u2500 models                  &lt;- Neural network model code.\n    \u2502   \u2514\u2500\u2500 CNN_EXP_0_1.py      &lt;- Modelname_Experimentnumber.py\n    \u2502\n    \u2514\u2500\u2500 function             &lt;- Functions used in training and predicting processes.\n       \u251c\u2500\u2500 Dataset.py        &lt;- Function used in loading Dataset.\n       \u251c\u2500\u2500 Log.py            &lt;- Function used in Logging.\n       \u2514\u2500\u2500 Loss.py           &lt;- Function used in Loss generating.\n</code></pre> <p>\u6211\u4eec\u5c06\u4e3b\u8981\u8ba8\u8bba\u4ee5\u4e0b\u90e8\u5206\uff1a</p> <ol> <li><code>data</code> \u6587\u4ef6\u5939\uff1a\u5b58\u653e\u8bad\u7ec3\u6570\u636e\u3002</li> <li><code>docs</code> \u6587\u4ef6\u5939\uff1a\u5305\u542bLHAI\u7528\u6237\u624b\u518c\u3002</li> <li><code>LHAI</code> \u6587\u4ef6\u5939\uff1a\u5b58\u653e\u9879\u76ee\u4ee3\u7801\u3002</li> <li><code>saves</code> \u6587\u4ef6\u5939\uff1a\u5b58\u653e\u5df2\u8bad\u7ec3/\u63a8\u7406\u7684\u6a21\u578b\u53ca\u5176\u7ed3\u679c\u3002</li> </ol>"},{"location":"zh/Content/codes/data/","title":"LHAI \u9879\u76ee\u4ee3\u7801\uff1a<code>data</code> \u6587\u4ef6\u5939","text":"<p><code>data</code> \u6587\u4ef6\u5939\u7528\u4e8e\u5b58\u50a8\u8bad\u7ec3\u3001\u63a8\u7406\u548c\u8bc4\u4f30\u6240\u9700\u7684\u6570\u636e\u96c6\u3002\u5176\u7ed3\u6784\u6e05\u6670\uff0c\u6309\u6570\u636e\u7c7b\u578b\u7ec4\u7ec7\uff0c\u4ee5\u4fbf\u4e8e\u8bbf\u95ee\u548c\u7248\u672c\u7ba1\u7406\u3002  </p>"},{"location":"zh/Content/codes/data/#_1","title":"\u6587\u4ef6\u5939\u7ed3\u6784","text":"<pre><code>\u251c\u2500\u2500 data               &lt;- \u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff08\u5efa\u8bae\u4ee5 `.npy` \u683c\u5f0f\u4e0a\u4f20\uff09\n    \u251c\u2500\u2500 FERMI          &lt;- \u4e0e Fermi \u89c2\u6d4b\u6216\u6a21\u62df\u76f8\u5173\u7684\u6570\u636e\u96c6\n    \u251c\u2500\u2500 POISSON        &lt;- \u7528\u4e8e\u7edf\u8ba1\u5206\u6790\u6216\u5efa\u6a21\u7684\u6cca\u677e\u5206\u5e03\u6570\u636e\u96c6\n    \u251c\u2500\u2500 SIMU           &lt;- \u7528\u4e8e\u6a21\u62df\u76ee\u7684\u7684\u5408\u6210\u6570\u636e\n    \u2514\u2500\u2500 RAW            &lt;- \u4ece\u5b9e\u9a8c\u6216\u5916\u90e8\u6765\u6e90\u76f4\u63a5\u83b7\u53d6\u7684\u672a\u5904\u7406\u539f\u59cb\u6570\u636e\n</code></pre>"},{"location":"zh/Content/codes/data/#_2","title":"\u6587\u4ef6\u5939\u8be6\u60c5","text":""},{"location":"zh/Content/codes/data/#fermi","title":"FERMI","text":"<ul> <li>\u63cf\u8ff0\uff1a\u5305\u542b\u6765\u81ea Fermi Gamma \u5c04\u7ebf\u7a7a\u95f4\u671b\u8fdc\u955c\u7684\u89c2\u6d4b\u6570\u636e\u6216\u76f8\u5173\u7684\u6a21\u62df\u6570\u636e\u96c6\u3002  </li> <li>\u7528\u9014\uff1a\u7528\u4e8e\u4f3d\u9a6c\u5c04\u7ebf\u7814\u7a76\u7684\u9884\u5904\u7406\u6d41\u7a0b\u6216\u8bad\u7ec3\u6a21\u578b\u3002  </li> <li>\u793a\u4f8b\uff1a  </li> <li><code>FERMI_2024_observations.npy</code>\uff1a2024 \u5e74\u89c2\u6d4b\u671f\u7684\u9884\u5904\u7406\u6570\u636e\u3002  </li> <li><code>FERMI_training_split.npy</code>\uff1a\u7528\u4e8e\u6a21\u578b\u8f93\u5165\u7684\u8bad\u7ec3\u6570\u636e\u5b50\u96c6\u3002  </li> </ul>"},{"location":"zh/Content/codes/data/#poisson","title":"POISSON","text":"<ul> <li>\u63cf\u8ff0\uff1a\u5b58\u50a8\u57fa\u4e8e\u6cca\u677e\u5206\u5e03\u7684\u6570\u636e\u96c6\uff0c\u5e38\u7528\u4e8e\u4e8b\u4ef6\u6a21\u62df\u6216\u8bef\u5dee\u5efa\u6a21\u3002   </li> <li>\u7528\u9014\uff1a\u7edf\u8ba1\u5efa\u6a21\u3001\u4e8b\u4ef6\u7387\u9884\u6d4b\u6216\u4e0d\u786e\u5b9a\u6027\u91cf\u5316\u3002  </li> <li>\u793a\u4f8b\uff1a  </li> <li><code>Poisson_noise_samples.npy</code>\uff1a\u5e26\u6709\u6cca\u677e\u566a\u58f0\u7684\u5408\u6210\u6837\u672c\u3002  </li> <li><code>Poisson_event_counts.npy</code>\uff1a\u7528\u4e8e\u5206\u6790\u7684\u4e8b\u4ef6\u8ba1\u6570\u5206\u5e03\u3002  </li> </ul>"},{"location":"zh/Content/codes/data/#simu","title":"SIMU","text":"<ul> <li>\u63cf\u8ff0\uff1a\u4fdd\u5b58\u7528\u4e8e\u7279\u5b9a\u573a\u666f\u6216\u5b9e\u9a8c\u6a21\u62df\u7684\u5408\u6210\u6570\u636e\u96c6\u3002    </li> <li>\u7528\u9014\uff1a\u6a21\u578b\u9a8c\u8bc1\u3001\u7075\u654f\u5ea6\u5206\u6790\u6216\u6d4b\u8bd5\u65b0\u7b97\u6cd5\u3002  </li> <li>\u793a\u4f8b\uff1a  </li> <li><code>Simu_100k_events.npy</code>\uff1a\u5305\u542b 100,000 \u6761\u4e8b\u4ef6\u8bb0\u5f55\u7684\u6a21\u62df\u6570\u636e\u96c6\u3002  </li> <li><code>Simu_input_parameters.json</code>\uff1a\u751f\u6210\u5408\u6210\u6570\u636e\u7684\u914d\u7f6e\u6587\u4ef6\u3002  </li> </ul>"},{"location":"zh/Content/codes/data/#raw","title":"RAW","text":"<ul> <li>\u63cf\u8ff0\uff1a\u8be5\u6587\u4ef6\u5939\u5305\u542b\u76f4\u63a5\u4ece\u4eea\u5668\u6216\u5408\u4f5c\u8005\u5904\u83b7\u5f97\u7684\u672a\u5904\u7406\u539f\u59cb\u6570\u636e\u96c6\u3002  </li> <li>\u7528\u9014\uff1a\u9884\u5904\u7406\u6d41\u7a0b\u7684\u8d77\u70b9\u6216\u624b\u52a8\u5206\u6790\u3002  </li> <li>\u793a\u4f8b\uff1a  </li> <li><code>Raw_experiment_2024.dat</code>\uff1a\u6765\u81ea\u6700\u65b0\u5b9e\u9a8c\u7684\u6570\u636e\u8f6c\u50a8\u3002  </li> <li><code>Raw_sensor_readings.bin</code>\uff1a\u9700\u8981\u89e3\u7801\u7684\u4f20\u611f\u5668\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002  </li> </ul>"},{"location":"zh/Content/codes/data/#_3","title":"\u8bad\u7ec3\u3001\u63a8\u7406\u7684\u6587\u4ef6\u683c\u5f0f\u8981\u6c42","text":"<p>\u8fd9\u90e8\u5206\u5f88\u91cd\u8981\uff0c\u6587\u4ef6\u5b58\u50a8\u89c4\u5219\u5f85\u5b8c\u5584</p> <p>by Zihang Liu</p>"},{"location":"zh/Content/codes/docs/","title":"LHAI\u9879\u76ee\u4ee3\u7801\uff1adocs\u6587\u4ef6\u5939","text":"<p><code>docs</code> \u6587\u4ef6\u5939\u7528\u4e8e\u5b58\u653eLHAI\u7684\u7528\u6237\u624b\u518c\uff0c\u672c\u7528\u6237\u624b\u518c\u4ee5 <code>mkdocs</code> \u683c\u5f0f\u4e66\u5199\u3002</p>"},{"location":"zh/Content/codes/docs/#folder-structure","title":"Folder Structure","text":"<pre><code>\u251c\u2500\u2500 README.md                  &lt;- Top-level README for developers using this project\n\u251c\u2500\u2500 mkdocs.yml                 &lt;- Main configuration file for MkDocs\n\u251c\u2500\u2500 requirements.txt           &lt;- Python dependencies for the MkDocs project\n\u251c\u2500\u2500 Content                    &lt;- Folder containing the documentation content\n\u2502   \u251c\u2500\u2500 data                   &lt;- Section for data-related documentation\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Data Section\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 network                &lt;- Section for network-related documentation\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Network Section\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 eval                   &lt;- Section for evaluation-related documentation\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Eval Section\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 codes                  &lt;- Section for code-related documentation\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Codes Section\n\u2502   \u2502   \u251c\u2500\u2500 data.md            &lt;- Documentation for data usage in codes\n\u2502   \u2502   \u251c\u2500\u2500 docs.md            &lt;- Documentation for code structure and details\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 others                 &lt;- Section for miscellaneous content\n\u2502   \u2502   \u251c\u2500\u2500 index.md           &lt;- Overview page for the Others Section\n\u2502   \u2502   \u251c\u2500\u2500 1.md               &lt;- Documentation guidance or additional content\n\u2502\n\u251c\u2500\u2500 docs                       &lt;- Default MkDocs output folder for site generation\n\u2502\n\u251c\u2500\u2500 css                        &lt;- Custom CSS for styling the MkDocs project\n\u2502   \u251c\u2500\u2500 base.css               &lt;- Base styling for the entire site\n\u2502   \u251c\u2500\u2500 theme-overrides.css    &lt;- Customizations to override the default MkDocs theme\n\u2502   \u251c\u2500\u2500 typography.css         &lt;- Specific typography adjustments for better readability\n\u2502   \u2514\u2500\u2500 responsive.css         &lt;- Styles for ensuring responsive design across devices\n\u2502\n\u2514\u2500\u2500 assets                     &lt;- Static assets like images or fonts\n    \u251c\u2500\u2500 images                 &lt;- Images used throughout the documentation\n    \u2502   \u251c\u2500\u2500 logo.png           &lt;- Site logo\n    \u2502   \u251c\u2500\u2500 favicon.ico        &lt;- Favicon for the site\n    \u2502\n    \u251c\u2500\u2500 fonts                  &lt;- Custom fonts for the site, if needed\n</code></pre>"},{"location":"zh/Content/codes/docs/#_1","title":"\u8fd9\u4e2a\u624b\u518c\u5982\u4f55\u8fd0\u884c\uff1f","text":"<p>\u672c\u7528\u6237\u624b\u518c\u57fa\u4e8e MkDocs \u8fdb\u884c\u7f51\u9875\u6784\u5efa\uff0c\u901a\u8fc7 Git \u7ba1\u7406\u4ee3\u7801\u7248\u672c\u63a7\u5236\u548c\u591a\u7528\u6237\u534f\u4f5c\uff0c\u501f\u52a9 GitHub Pages \u5b9e\u73b0\u5728\u7ebf\u53d1\u5e03\u4e0e\u5206\u4eab\u3002</p>"},{"location":"zh/Content/codes/docs/#mkdocs","title":"MkDocs","text":"<p>MkDocs \u662f\u4e00\u4e2a\u7528\u4e8e\u5feb\u901f\u751f\u6210\u9759\u6001\u7f51\u7ad9\u7684\u6587\u6863\u5de5\u5177\uff0c\u652f\u6301\u7b80\u5355\u7684 Markdown \u683c\u5f0f\u4e66\u5199\u6587\u6863\uff0c\u5e76\u751f\u6210\u7ed3\u6784\u6e05\u6670\u7684 HTML \u7f51\u7ad9\u3002</p> <ul> <li> <p>\u5b89\u88c5\u4e0e\u4f7f\u7528\uff1a</p> </li> <li> <p>\u5b89\u88c5 MkDocs\uff1a  </p> <pre><code>pip install mkdocs\n</code></pre> </li> <li> <p>\u521b\u5efa\u9879\u76ee\uff1a  </p> <pre><code>mkdocs new my-project\ncd my-project\n</code></pre> </li> <li> <p>\u672c\u5730\u8fd0\u884c\u9884\u89c8\uff1a  </p> <pre><code>mkdocs serve\n</code></pre> <p>\u8bbf\u95ee <code>http://127.0.0.1:8000</code> \u67e5\u770b\u6587\u6863\u6548\u679c\u3002</p> </li> <li> <p>\u6784\u5efa\u9759\u6001\u7f51\u7ad9\uff1a  </p> <pre><code>mkdocs build\n</code></pre> <p>\u6240\u6709\u751f\u6210\u7684\u6587\u4ef6\u5c06\u5b58\u50a8\u5728 <code>site</code> \u6587\u4ef6\u5939\u4e2d\u3002</p> </li> <li> <p>\u4e3b\u9898\u4e0e\u63d2\u4ef6\uff1a  </p> </li> </ul> <p>\u4f7f\u7528 MkDocs \u9ed8\u8ba4\u4e3b\u9898 <code>mkdocs</code> \u6216\u6269\u5c55\u4e3b\u9898\u5982 <code>mkdocs-material</code>\u3002\u53ef\u901a\u8fc7 <code>mkdocs.yml</code> \u914d\u7f6e\u6587\u4ef6\u6dfb\u52a0\u63d2\u4ef6\u5b9e\u73b0\u529f\u80fd\u6269\u5c55\u3002</p>"},{"location":"zh/Content/codes/docs/#git","title":"Git","text":"<p>Git \u662f\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u7528\u4e8e\u7ba1\u7406\u6587\u6863\u4e0e\u4ee3\u7801\u7248\u672c\uff0c\u540c\u65f6\u652f\u6301\u56e2\u961f\u534f\u4f5c\u3002</p> <ul> <li>\u521d\u59cb\u5316\u4e0e\u514b\u9686\uff1a</li> <li> <p>\u521d\u59cb\u5316\u9879\u76ee\uff1a  </p> <pre><code>git init\n</code></pre> </li> <li> <p>\u514b\u9686\u8fdc\u7a0b\u4ed3\u5e93\uff1a  </p> <pre><code>git clone &lt;repository-url&gt;\n</code></pre> </li> <li> <p>\u5e38\u7528\u547d\u4ee4\uff1a</p> </li> <li> <p>\u63d0\u4ea4\u66f4\u6539\uff1a  </p> <pre><code>git add .\ngit commit -m \"Update documentation\"\n</code></pre> </li> <li> <p>\u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff1a  </p> <pre><code>git push origin main\n</code></pre> </li> <li> <p>\u5206\u652f\u7ba1\u7406\uff1a\u591a\u7528\u6237\u534f\u4f5c\u65f6\uff0c\u53ef\u4f7f\u7528\u5206\u652f\u529f\u80fd\u907f\u514d\u51b2\u7a81\uff1a  </p> </li> </ul> <pre><code>git checkout -b new-feature\n</code></pre>"},{"location":"zh/Content/codes/docs/#github-pages","title":"GitHub Pages","text":"<p>GitHub Pages \u662f\u4e00\u4e2a\u6258\u7ba1\u9759\u6001\u7f51\u9875\u7684\u670d\u52a1\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece GitHub \u4ed3\u5e93\u4e2d\u6258\u7ba1 MkDocs \u751f\u6210\u7684\u7f51\u7ad9\u3002</p> <ul> <li> <p>\u53d1\u5e03\u6b65\u9aa4\uff1a</p> </li> <li> <p>\u5728 <code>mkdocs.yml</code> \u4e2d\u914d\u7f6e\u90e8\u7f72\u5206\u652f\uff1a  </p> <pre><code>site_name: My Documentation\nsite_dir: site\n</code></pre> </li> <li> <p>\u4f7f\u7528 <code>gh-deploy</code> \u90e8\u7f72\uff1a </p> <pre><code>mkdocs gh-deploy\n</code></pre> </li> <li> <p>\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u6587\u6863\u5c06\u53d1\u5e03\u5230 <code>https://&lt;username&gt;.github.io/&lt;repository&gt;</code>\u3002</p> </li> <li> <p>\u81ea\u52a8\u5316\u90e8\u7f72\uff1a  </p> </li> </ul> <p>\u501f\u52a9 GitHub Actions\uff0c\u53ef\u81ea\u52a8\u89e6\u53d1\u6784\u5efa\u4e0e\u90e8\u7f72\u6d41\u7a0b\u3002\u4f8b\u5982\uff1a</p> <pre><code>name: Deploy MkDocs\non:\n  push:\n    branches:\n      - main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up Python\n        uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - name: Install dependencies\n        run: pip install mkdocs mkdocs-material\n      - name: Build and deploy\n        run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"zh/Content/codes/docs/#_2","title":"\u672c\u624b\u518c\u7ed3\u6784","text":"<p>\u9996\u9875\uff1a\u76ee\u5f55 + \u7ed3\u679c\u76f4\u89c2\u8868\u793a\uff08\u7ed3\u679c\u7bc7\uff09</p> <p>\u5185\u5bb9\uff1a</p> <ul> <li> <p>\u6570\u636e\u7bc7</p> </li> <li> <p>\u6280\u672f\u7bc7</p> </li> <li> <p>\u9a8c\u8bc1\u7bc7</p> </li> <li> <p>\u4ee3\u7801\u7ed3\u6784\u8be6\u89e3</p> </li> <li> <p>\u5176\u4ed6\u6280\u672f\u6587\u6863\uff08GIT,MARKOWN,MKDOCS,SERVER\uff09</p> </li> </ul>"},{"location":"zh/Content/codes/docs/#_3","title":"\u6210\u4e3a\u5171\u540c\u521b\u4f5c\u8005","text":"<p>\u524d\u7f6e\u6761\u4ef6\uff1agit\u3001\u68af\u5b50\u3001python3.10\u4ee5\u4e0a</p> <ol> <li> <p>\u521b\u5efa\u672c\u5730\u4ed3\u5e93\uff0c\u4e0egit\u4ed3\u5e93\u8fde\u63a5</p> <p>\uff081\uff09\u521b\u5efa\u4e00\u4e2a\u7a7a\u767d\u6587\u4ef6\u5939\uff0c\u7528\u4e8e\u5b58\u50a8\u6587\u6863\u672c\u5730\u6587\u4ef6</p> <p>\uff082\uff09\u514b\u9686github\u9879\u76ee\u6587\u6863\uff1a</p> <pre><code>git clone https://github.com/boobyuuuu/LHAI.git\n</code></pre> <p>\u8fd9\u4e00\u6b65\u5f88\u5927\u6982\u7387\u4f1a\u62a5\u9519\uff0c\u662f\u521d\u59cb\u73af\u5883\u8bbe\u7f6e\u7684\u95ee\u9898\uff1b\u6839\u636e\u5177\u4f53\u62a5\u9519\u5177\u4f53\u89e3\u51b3</p> </li> <li> <p>\u62ff\u5230\u9879\u76ee\u7528\u6237\u624b\u518c\u6587\u4ef6 LHAI \u540e\uff0c\u53ef\u4ee5\u8fdb\u884c\u67e5\u770b\uff1a</p> <p>\uff081\uff09\u7528\u6237\u624b\u518c\u57fa\u4e8emkdocs\u6784\u5efa\u3002\u9996\u5148\u662fmkdocs\u7684\u73af\u5883\uff1a</p> <pre><code>pip install mkdocs\n\npip install mkdocs-material\n\npip install pymdown-extensions\n</code></pre> <p>\u4ee5\u4e0a\u4e09\u4e2a\u662f\u4e3b\u8981\u7684\u73af\u5883\uff0c\u8fd8\u6709\u4e00\u4e9b\u63d2\u4ef6\uff0c\u6839\u636e\u62a5\u9519\u5dee\u54ea\u4e9b\u5c31\u5b89\u88c5\u54ea\u4e9b\uff0c\u77e5\u9053\u53ef\u4ee5\u8fd0\u884c\uff1a</p> <pre><code>mkdocs serve\n</code></pre> </li> <li> <p>\u4fee\u6539\u7528\u6237\u624b\u518c</p> <p>\uff081\uff09\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u4fee\u6539</p> <p>\uff082\uff09mkdocs.yml \u6587\u4ef6\u5b58\u50a8\u4e86\u6240\u6709\u7684\u914d\u7f6e\u4fe1\u606f\u3001\u7f51\u9875\u7ed3\u6784\u4fe1\u606f</p> <p>\uff083\uff09\u5177\u4f53mkdocs\u6559\u7a0b\u67e5\u770b\uff1a</p> <p>https://mkdocs-like-code.readthedocs.io/zh-cn/latest/</p> </li> <li> <p>\u786e\u8ba4\u81ea\u5df1\u4fee\u6539\u6ca1\u95ee\u9898\u540e\uff0c\u4e0a\u4f20\u5230 github\uff0c\u4e0a\u4f20\u5230 github-pages</p> <p>\uff081\uff09\u4e0a\u4f20github\u8fde\u62db\uff1a</p> <pre><code>git add .\n\ngit commit -m \"\u82f1\u6587\u586b\u5199\u4fee\u6539\u65e5\u5fd7\"\n\ngit push\n</code></pre> <p>\uff082\uff09\u4e0a\u4f20github-pages\uff1a</p> <pre><code>mkdocs gh-deploy\n</code></pre> </li> <li> <p>\u5e73\u5e38\u5de5\u4f5c\u6d41\u7a0b</p> <p>\u7531\u4e8e\u662f\u591a\u4eba\u534f\u540c\uff0c\u5171\u540c\u7ba1\u7406\u5f62\u5f0f\uff0c\u9700\u8981\u6bcf\u4e2a\u4eba\u9ed8\u5951\u914d\u5408\uff0c\u5e76\u5f62\u6210\u4e25\u8c28\u7684\u4fee\u6539\u89c4\u5219\u3002\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p>\uff081\uff09\u81ea\u5df1\u8fdb\u884c\u4e86\u4e00\u4e9b\u5de5\u4f5c\uff0c\u5728\u81ea\u5df1\u672c\u5730\u5199\u4e86\u65b0\u7684\u5185\u5bb9</p> <p>\uff082\uff09\u540c\u6b65github\u7684\u7248\u672c\uff1a</p> <p><pre><code>git pull\n</code></pre> \u8fd9\u4e00\u6b65\u4f1a\u5c06github\u4e0a\u6700\u65b0\u7684\u7248\u672c\u62c9\u53d6\u5230\u81ea\u5df1\u672c\u5730\uff0c\u4f46\u53ea\u4f1a\u5bf9\u4fee\u6539\u8fc7\u7684\u90e8\u5206\u8fdb\u884c\u66f4\u6539\uff0c\u4e0d\u4f1a\u628a\u4f60\u521b\u5efa\u7684\u65b0\u7684\u672c\u5730\u6587\u6863\u8986\u76d6\u6d88\u9664\u6389</p> <p>\uff083\uff09\u8fdb\u884cgithub\u4e0a\u4f20</p> <p>\uff084\uff09\u8fdb\u884cgithub-pages\u4e0a\u4f20</p> <p>\u8bf7\u9075\u5b88\u8fd9\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b</p> </li> </ol> <p>by Zihang Liu</p>"},{"location":"zh/Content/codes/lhai/","title":"LHAI\u9879\u76ee\u4ee3\u7801\uff1aLHAI\u6587\u4ef6\u5939","text":"<p><code>LHAI</code>\u6587\u4ef6\u5939\u5b58\u653e\u4e86\u672c\u9879\u76ee\u7684\u6240\u6709\u6e90\u4ee3\u7801\uff0c\u4e3b\u8981\u5206\u4e3a\u4e09\u4e2a\u529f\u80fd\uff1a\u8bad\u7ec3\u3001\u63a8\u7406\u4ee5\u53ca\u6d4b\u8bd5</p>"},{"location":"zh/Content/codes/lhai/#1-folder-structure","title":"1 Folder Structure","text":"<pre><code>LHAI                        &lt;- \u672c\u9879\u76ee\u4f7f\u7528\u7684\u6e90\u4ee3\u7801\n\u2502\n\u251c\u2500\u2500 __init__.py             &lt;- \u4f7fLHAI\u6210\u4e3a\u4e00\u4e2aPython\u6a21\u5757\n\u2502\n\u251c\u2500\u2500 config.py               &lt;- \u5b58\u50a8\u6709\u7528\u7684\u53d8\u91cf\u548c\u914d\u7f6e\n\u2502\n\u251c\u2500\u2500 evaluation.py           &lt;- 3 different methods to evaluation trained models.\n\u2502\n\u251c\u2500\u2500 modeling                &lt;- \u6a21\u578b\u8bad\u7ec3\u548c\u63a8\u7406\u4ee3\u7801\n\u2502   \u251c\u2500\u2500 __init__.py \n\u2502   \u251c\u2500\u2500 predict.py          &lt;- \u7528\u4e8e\u6a21\u578b\u63a8\u7406\u7684\u4ee3\u7801          \n\u2502   \u2514\u2500\u2500 train.py            &lt;- \u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u7684\u4ee3\u7801\n\u2502\n\u251c\u2500\u2500 models                  &lt;- \u5b58\u50a8\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\n\u2502   \u2514\u2500\u2500 CNN_EXP_0_1.py      &lt;- \u547d\u540d\u89c4\u5219\uff1a\u6a21\u578b\u540d\u79f0_\u5b9e\u9a8c\u7f16\u53f7.py\n\u2502\n\u2514\u2500\u2500 function                &lt;- \u8bad\u7ec3\u548c\u63a8\u7406\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u51fd\u6570\uff0c\u4f1a\u5728train.py\u4ee5\u53capredict.py\u7528\u5230\n   \u251c\u2500\u2500 Dataset.py           &lt;- \u6570\u636e\u96c6\n   \u251c\u2500\u2500 Log.py               &lt;- \u65e5\u5fd7\n   \u2514\u2500\u2500 Loss.py              &lt;- LOSS\u51fd\u6570\n</code></pre> <p>\u63a5\u4e0b\u6765\u4f1a\u53d9\u8ff0\u5982\u4f55\u8c03\u7528\u53c2\u6570\uff0c\u8fdb\u884c\u8bad\u7ec3\uff0c\u8fdb\u884c\u63a8\u7406</p>"},{"location":"zh/Content/codes/lhai/#2-configpy","title":"2 \u73af\u5883\u53d8\u91cf\uff1aconfig.py","text":"<p><code>config.py</code> \u5b58\u50a8\u4e86\u8bad\u7ec3\u3001\u63a8\u7406\u8fc7\u7a0b\u4e2d\u7528\u5230\u7684\u6240\u6709\u73af\u5883\u53d8\u91cf\u3002</p> <p>\u8bad\u7ec3\u8fc7\u7a0b\u7684\u6240\u6709\u53c2\u6570\uff1a</p> <pre><code># ---- Train Parameters ----\nEXP_NAME = \"EXP_0_1\"                                    # \u53c2\u65701\uff1a\u5982\u679c\u9700\u8981\u6307\u5b9a\u4e0d\u540c\u7684\u5b9e\u9a8c\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u4fee\u6539\nMODEL_NAME = \"CNN\"                                      # \u53c2\u65702\uff1a\u6a21\u578b\u7c7b\u578b\u540d\u79f0\uff08CNN,GAN,VAE,AE,DIFFUSION\uff09\nMODEL_PATH = PROJ_ROOT / \"LHAI\" / \"models\" / f\"{MODEL_NAME}_{EXP_NAME}.py\"\nDATA_DIR = PROJ_ROOT / \"data\" / \"POISSON\"               # \u53c2\u65703\uff1a\u6570\u636e\u96c6\u5b58\u50a8\u5730\u5740\nDATA_NAME = \"poisson_src_bkg.pkl.npy\"                   # \u53c2\u65704\uff1a\u6570\u636e\u96c6\u6587\u4ef6\u540d\u79f0\uff08\u6570\u636e\u96c6\u5b58\u50a8\u65b9\u6cd5\u683c\u5f0f\u89c1Data Section\uff09\nDATA_PATH = DATA_DIR / DATA_NAME\nSEED = 0                                                # \u53c2\u65705\uff1a\u968f\u673a\u79cd\u5b50\nTRAINTYPE = \"poissonsrc+bkg_highresorig\"                # \u53c2\u65706\uff1a\u8bad\u7ec3\u7c7b\u578b\nFRAC_TRAIN = 0.8                                        # \u53c2\u65707\uff1a\u8bad\u7ec3\u96c6/\u6d4b\u8bd5\u96c6\u6bd4\u4f8b\nEPOCHS = 400                                            # \u53c2\u65708\uff1a\u8bad\u7ec3\u8f6e\u6570\nBATCH_SIZE = 32                                         # \u53c2\u65709\uff1abatch\u6279\u6b21\u5927\u5c0f\nLATENTDIM = 64                                          # \u53c2\u657010\uff1a\u6f5c\u5728\u7ef4\u5ea6(\u4ec5VAE\u6a21\u578b)\nLR_MAX = 5e-4                                           # \u53c2\u657011\uff1a\u5b66\u4e60\u7387\u4e0a\u9650\nLR_MIN = 5e-6                                           # \u53c2\u657012\uff1a\u5b66\u4e60\u7387\u4e0b\u9650\n</code></pre> <p>\u63a8\u7406\u8fc7\u7a0b\u7684\u6240\u6709\u53c2\u6570\uff1a</p> <pre><code># ---- Test Parameters ----\nPRE_MODEL_PATH = PROJ_ROOT / \"saves\" / \"MODEL\"\nPRE_DATA_PATH = PROJ_ROOT / \"data\" / \"POISSON\"\nPRE_MODEL_NAME = \"CNN_EXP_0_1_400epo_32bth_64lat_poissonsrc+bkg_highresorig_poisson_src_bkg.pkl.npy.pth\"\nRRE_MODEL = \"CNN\"\nPRE_DATA_NAME = \"poisson_src_bkg.pkl.npy\"\nPRE_SEED = 0\nPRE_TRAINTYPE = \"poissonsrc+bkg_highresorig\"\nPRE_FRAC_TRAIN = 0.8\nPRE_BATCH_SIZE = 32\nPRE_LATENT_DIM = 64\n</code></pre> <p>\u5728\u8bad\u7ec3/\u63a8\u7406\u5f00\u59cb\u524d\uff0c\u4e00\u5b9a\u8981\u5bf9\u6bcf\u4e00\u4e2a\u53c2\u6570\u90fd\u975e\u5e38\u4e86\u89e3\uff0c\u5e76\u4e14\u660e\u786e\u5730\u77e5\u9053\u81ea\u5df1\u8bad\u7ec3/\u63a8\u7406\u6240\u9700\u8981\u7684\u53c2\u6570\u662f\u4ec0\u4e48\uff0c\u5426\u5219\u65e0\u6cd5\u786e\u4fdd\u6b63\u786e\u5730\u5b8c\u6210\u4e86\u4f60\u7684\u4efb\u52a1\u3002</p> <p>Tip</p> <p>\u5728\u672c\u9879\u76ee\u4e2d\uff0c\u5982\u679c\u60f3\u8981\u4fee\u6539\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u7684\u73af\u5883\u53d8\u91cf/\u53c2\u6570\uff0c\u4e00\u5171\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <ol> <li> <p>\u76f4\u63a5\u4fee\u6539<code>config.py</code>\u4e2d\u7684\u53c2\u6570</p> </li> <li> <p>python train.py --\u9644\u52a0\u53c2\u6570 \uff0c\u8fd9\u4e00\u4e2a\u65b9\u6cd5\u4f1a\u5728\u540e\u9762\u53d9\u8ff0</p> </li> </ol>"},{"location":"zh/Content/codes/lhai/#3-trainpy","title":"3 \u8bad\u7ec3\u529f\u80fd\uff1atrain.py","text":"<p>\u672c\u9879\u76ee\u4f7f\u7528\u4e86 <code>Typer</code> \u5e93\u4e3a\u547d\u4ee4\u884c\u63a5\u53e3\u8bbe\u8ba1\u7684\u53c2\u6570\u7ba1\u7406\u65b9\u5f0f\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u5728 \u547d\u4ee4\u884c \u4e2d\u8fd0\u884c\u4f60\u7684\u4ee3\u7801\u5e76\u4fee\u6539 <code>main</code> \u53c2\u6570\u7684\u6b65\u9aa4\uff1a</p> <pre><code>python train.py --model-name \"GAN\" --exp-name \"MyExperiment\" --data-dir \"./data\" --data-name \"dataset.csv\" --seed 42 --traintype \"supervised\" --frac-train 0.8 --epochs 10 --batch-size 32 --latentdim 128 --lr-max 0.01 --lr-min 0.001\n</code></pre> <p>\u6bcf\u4e2a\u53c2\u6570\u4f20\u9012\u7684\u5177\u4f53\u542b\u4e49\uff0c\u89c1 <code>2 \u73af\u5883\u53d8\u91cf\uff1aconfig.py</code> \u7684\u53d9\u8ff0\u3002</p> <p>Note</p> <ol> <li> <p>\u8fd0\u884c\u524d\u786e\u8ba4\u5f53\u524d\u7ec8\u7aef\u7684\u5de5\u4f5c\u8def\u5f84\u662f\u811a\u672c\u6240\u5728\u8def\u5f84\uff0c\u6216\u8005\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u8fd0\u884c\u811a\u672c\u3002</p> <pre><code>cd /path/to/train.py/folder\npython train.py --model-name \"GAN\" ...\n</code></pre> </li> <li> <p>\u5982\u679c\u4f60\u5728 <code>LHAI.config</code> \u4e2d\u8bbe\u7f6e\u4e86\u9ed8\u8ba4\u503c\uff0c\u4f8b\u5982 <code>EXP_NAME</code>, <code>MODEL_NAME</code>\uff0c\u8fd9\u4e9b\u503c\u4f1a\u4f5c\u4e3a\u9ed8\u8ba4\u503c\u52a0\u8f7d\u5230 <code>main</code> \u51fd\u6570\u4e2d\u3002\u5982\u679c\u547d\u4ee4\u884c\u4e2d\u6ca1\u6709\u63d0\u4f9b\u67d0\u4e9b\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002</p> </li> <li> <p>\u5982\u679c\u4e0d\u786e\u5b9a\u53c2\u6570\u5982\u4f55\u4f20\u9012\uff0c\u53ef\u4ee5\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\u5e2e\u52a9\u4fe1\u606f\uff1a</p> <p><pre><code>python train.py --help\npython predict.py --help\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u975e\u5e38\u6709\u7528\uff01</p> </li> <li> <p>\u5982\u679c\u4f60\u53ea\u60f3\u4fee\u6539\u6a21\u578b\u540d\u79f0\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012\uff1a</p> <pre><code>python train.py --model-name \"GAN\"\n</code></pre> <p>\u5176\u4f59\u53c2\u6570\u4f1a\u4f7f\u7528 <code>config.py</code> \u4e2d\u7684\u9ed8\u8ba4\u503c\u3002</p> </li> </ol>"},{"location":"zh/Content/codes/lhai/#4-predictpy","title":"4 \u63a8\u7406\u529f\u80fd\uff1apredict.py","text":"<p>\u5177\u4f53\u8fd0\u884c\u65b9\u6cd5\u4e0e <code>train.py</code> \u5b8c\u5168\u4e00\u81f4\u3002</p> <p>by Zihang Liu</p>"},{"location":"zh/Content/codes/predict/","title":"\u4ecegit clone\u5f00\u59cb\u63a8\u7406","text":"<p><code>predict.py</code>\u5b58\u653e\u5730\u5740:</p> <pre><code>LHAI/LHAI/modeling/predict.py\n</code></pre> <p>\u5728\u4e86\u89e3\u4e86LHAI\u6e90\u4ee3\u7801\u7ed3\u6784\uff1a<code>data</code>,<code>docs</code>,<code>LHAI</code>,<code>saves</code> \u6587\u4ef6\u5939\u7684\u57fa\u672c\u4f5c\u7528\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u63a8\u7406\u4e86\u3002</p> <p>\u8fd9\u4e00\u9875\u5c06\u4f1a\u4ece <code>git clone</code> \u5f00\u59cb\uff0c\u53d9\u8ff0\u6211\u4eec\u8be5\u51c6\u5907\u54ea\u4e9b\u4e1c\u897f\uff0c\u5982\u4f55\u5f00\u59cb\u8fdb\u884c\u63a8\u7406\u3002</p> <ol> <li> <p>\u7b2c\u4e00\u6b65\uff1agit clone</p> <pre><code>git clone --branch Code https://github.com/boobyuuuu/LHAI.git\n</code></pre> <p>\u8fd9\u4f1a\u4e0b\u8f7dCode branch\u4e0b\u7684\u6240\u6709\u4ee3\u7801\u4e8eLHAI\u6587\u4ef6\u5939\u5185\u3002\u6253\u5f00\u6587\u4ef6\u5939\uff1a</p> <pre><code>cd LHAI\n</code></pre> </li> <li> <p>\u68c0\u67e5LHAI\u6587\u4ef6\u5939\u7684\u9879\u76eestructure\uff0c\u662f\u5426\u5305\u542b\u5b8c\u6574\uff1a</p> <pre><code>\u251c\u2500\u2500 LICENSE            &lt;- Open-source license if one is chosen\n\u251c\u2500\u2500 Makefile           &lt;- Makefile with convenience commands like `make data` or `make train`\n\u251c\u2500\u2500 README.md          &lt;- The top-level README for developers using this project.\n\u251c\u2500\u2500 data               &lt;- Different types of data. (Recommended to upload with npy formation)\n\u2502   \u251c\u2500\u2500 FERMI\n\u2502   \u251c\u2500\u2500 POISSON\n\u2502   \u251c\u2500\u2500 SIMU\n\u2502   \u2514\u2500\u2500 RAW\n\u2502\n\u251c\u2500\u2500 saves             &lt;- Figure/Loss saves, Trained and Serialized models, model Predictions, .\n\u2502   \u251c\u2500\u2500 FIGURE        &lt;- Figure saves in training.\n\u2502   \u2502\u2500\u2500 PRE_FIG       &lt;- Figure saves in predicting.\n\u2502   \u251c\u2500\u2500 LOSS          &lt;- LOSS data(.npy) and LOSS Figure(.png) saves in training.\n\u2502   \u2514\u2500\u2500 MODEL         &lt;- Trained and Serialized models.\n\u2502\n\u251c\u2500\u2500 docs               &lt;- A default mkdocs project; see www.mkdocs.org for details\n\u2502\n\u2502\n\u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks. Naming convention is a number (for ordering),\n\u2502                         the creator's initials, and a short `-` delimited description, e.g.\n\u2502                         `1.0-jqp-initial-data-exploration`.\n\u2502\n\u251c\u2500\u2500 pyproject.toml     &lt;- Project configuration file with package metadata for \n\u2502                         LHAI and configuration for tools like black\n\u2502\n\u251c\u2500\u2500 references         &lt;- Data dictionaries, manuals, and all other explanatory materials.\n\u2502\n\u251c\u2500\u2500 reports            &lt;- Generated analysis as HTML, PDF, LaTeX, etc.\n\u2502   \u2514\u2500\u2500 figures        &lt;- Generated graphics and figures to be used in reporting\n\u2502\n\u251c\u2500\u2500 requirements.txt   &lt;- The requirements file for reproducing the analysis environment, e.g.\n\u2502                         generated with `pip freeze &gt; requirements.txt`      \n\u2502\n\u251c\u2500\u2500 setup.cfg          &lt;- Configuration file for flake8\n\u2502\n\u2514\u2500\u2500 LHAI   &lt;- Source code for use in this project.\n    \u2502\n    \u251c\u2500\u2500 __init__.py             &lt;- Makes LHAI a Python module\n    \u2502\n    \u251c\u2500\u2500 config.py               &lt;- Store useful variables and configuration\n    \u2502\n    \u251c\u2500\u2500 evaluation.py              &lt;- 3 different methods to evaluation trained models.\n    \u2502\n    \u251c\u2500\u2500 modeling                \n    \u2502   \u251c\u2500\u2500 __init__.py \n    \u2502   \u251c\u2500\u2500 predict.py          &lt;- Code to run model inference with trained models          \n    \u2502   \u2514\u2500\u2500 train.py            &lt;- Code to train models\n    \u2502\n    \u251c\u2500\u2500 models                  &lt;- Neural network model code.\n    \u2502   \u2514\u2500\u2500 CNN_EXP_0_1.py      &lt;- Modelname_Experimentnumber.py\n    \u2502\n    \u2514\u2500\u2500 function             &lt;- Functions used in training and predicting processes.\n    \u251c\u2500\u2500 Dataset.py        &lt;- Function used in loading Dataset.\n    \u251c\u2500\u2500 Log.py            &lt;- Function used in Logging.\n    \u2514\u2500\u2500 Loss.py           &lt;- Function used in Loss generating.\n</code></pre> </li> <li> <p>\u914d\u7f6e python \u73af\u5883</p> <p>\u9996\u5148\u786e\u5b9a\u6211\u4eec\u7684\u673a\u5668\u7684\u5b8f\u89c2\u73af\u5883\u80fd\u591f\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u6211\u4e00\u822c\u559c\u6b22\u9009\u62e9\u670d\u52a1\u5668\u914d\u7f6e\uff1a</p> <pre><code>PyTorch  2.1.0\nPython  3.10(ubuntu22.04)\nCuda  12.1\n</code></pre> <p>\u5f53\u7136\uff0c\u66f4\u9ad8\u7684\u914d\u7f6e\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u53ea\u662f\u8fd9\u4e2a\u914d\u7f6e\u6700\u7ecf\u5178\u548c\u7a33\u5b9a\uff1b</p> <p>\u7136\u540e\uff0c\u9700\u8981\u521b\u5efapython\u865a\u62df\u73af\u5883\uff0c\u5b89\u88c5python\u73af\u5883\uff1a</p> <pre><code>pip install -m requirements.txt\n</code></pre> <p>\u8fd9\u6837\u73af\u5883\u65b9\u9762\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002</p> </li> <li> <p>\u51c6\u5907\u6570\u636e\uff0c\u5e76\u4e14\u653e\u5230\u6570\u636e\u6587\u4ef6\u5939 <code>data</code> \u5bf9\u5e94\u7684\u7c7b\u522b\u6587\u4ef6\u5939\u5185\uff0c\u4fee\u6539 <code>config.py</code> \u4f7f\u4e4b\u80fd\u591f\u6307\u5411\u6211\u4eec\u7684\u6570\u636e</p> <p>\u6bd4\u5982\u6839\u636e <code>config.py</code> \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u7684\u6cca\u677e\u7c7b\u578b\u6570\u636e <code>poisson_src_bkg.pkl.npy</code> \u8def\u5f84\u5c31\u662f\uff1a</p> <pre><code>\"data\" / \"POISSON\" / poisson_src_bkg.pkl.npy\n</code></pre> </li> <li> <p>\u51c6\u5907\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801\uff0c\u653e\u5230\u795e\u7ecf\u7f51\u7edc\u6587\u4ef6\u5939\u5185\uff0c\u4fee\u6539 <code>config.py</code> \u4f7f\u4e4b\u80fd\u591f\u5f15\u7528\u6211\u4eec\u7684\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801</p> <p>\u6bd4\u5982\u6839\u636e <code>config.py</code> \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u7684CNN\u7c7b\u578b\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801 <code>CNN_EXP_0_1.py</code> \u8def\u5f84\u5c31\u662f\uff1a</p> <pre><code>\"LHAI\" / \"models\" / CNN_EXP_0_1.py\n</code></pre> </li> <li> <p>\u786e\u4fdd\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u5df2\u7ecf\u4fdd\u5b58\u5728 <code>saves/MODEL</code> \u6587\u4ef6\u5939\u5185\u3002</p> </li> <li> <p>\u5f00\u59cb\u63a8\u7406\u3002</p> <p>\u65b9\u6cd51\uff1a\u8bbe\u7f6e <code>config.py</code> \u4e2dPREDICT\u7684\u53c2\u6570\uff0c\u5728 <code>modeling</code> \u6587\u4ef6\u5939\u4e2d\u76f4\u63a5\u8fd0\u884c\u3002</p> <pre><code>python predict.py\n</code></pre> <p>\u65b9\u6cd52\uff1a\u9ad8\u7aef\u4e00\u70b9\u7684\u76f4\u63a5\u901a\u8fc7 <code>Typer</code> \u63a5\u53e3\u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570</p> <p>\u5177\u4f53\u8bf7\u770b Code Section \u7684 LHAI \u624b\u518c\u9875\u9762\u3002</p> </li> </ol> <p>by Zihang Liu</p>"},{"location":"zh/Content/codes/saves/","title":"LHAI\u9879\u76ee\u4ee3\u7801\uff1asaves\u6587\u4ef6\u5939","text":"<p><code>saves</code> \u6587\u4ef6\u5939\u5b58\u653e\u8bad\u7ec3\u4e2d\u4ea7\u751f\u7684\u56fe\u50cf\u3001\u635f\u5931\u6570\u636e\uff1b\u8bad\u7ec3\u5b8c\u6210\u7684\u6a21\u578b\uff1b\u63a8\u7406\u5b8c\u6210\u7684\u7ed3\u679c\u56fe\u50cf</p> <pre><code>\u2502\u2500\u2500 saves              &lt;- \u4fdd\u5b58\u8bad\u7ec3\u4e2d\u7684\u56fe\u50cf\u3001\u635f\u5931\u6570\u636e\u3001\u8bad\u7ec3\u540e\u7684\u6a21\u578b\u548c\u9884\u6d4b\u7ed3\u679c\n\u2502   \u251c\u2500\u2500 FIGURE         &lt;- \u8bad\u7ec3\u7ed3\u675f\u540e\u521d\u6b65\u63a8\u7406\u5f62\u6210\u7684\u56fe\u50cf \n\u2502                       (\u5b58\u50a8\u683c\u5f0f\uff1a./saves/FIGURE/EarlyPre_{MODEL_NAME}_{EXP_NAME}_{epochs}epo_{batch_size}bth_{latentdim}lat_{traintype}_{DATA_NAME}.png)\n\u2502   \u2502\u2500\u2500 PRE_FIG        &lt;- \u63a8\u7406\u65f6\u4fdd\u5b58\u7684\u56fe\u50cf\n\u2502                       (\u5b58\u50a8\u683c\u5f0f\uff1a./saves/PRE_FIG/{savepath}/PRE_FIG/Pre_{PRE_MODEL_NAME}.png)\n\u2502   \u251c\u2500\u2500 LOSS           &lt;- \u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4fdd\u5b58\u7684\u635f\u5931\u6570\u636e(.npy)\u548c\u635f\u5931\u56fe\u50cf(.png) \n\u2502                       (\u5b58\u50a8\u683c\u5f0f\uff1a./saves/LOSS/{MODEL_NAME}_{EXP_NAME}_{epochs}epo_{batch_size}bth_{latentdim}lat_{traintype}_{DATA_NAME}.npy + png)\n\u2502   \u2514\u2500\u2500 MODEL          &lt;- \u4fdd\u5b58\u7684\u5df2\u8bad\u7ec3\u6a21\u578b\u548c\u5e8f\u5217\u5316\u6a21\u578b\n\u2502                       \uff08\u5b58\u50a8\u683c\u5f0f\uff1a./saves/MODEL/{MODEL_NAME}_{EXP_NAME}_{epochs}epo_{batch_size}bth_{latentdim}lat_{traintype}_{DATA_NAME}.pth\uff09\n</code></pre> <p>\u8fd9\u90e8\u5206\u5e76\u6ca1\u6709\u4ec0\u4e48\u597d\u53d9\u8ff0\u7684\uff0c\u8bad\u7ec3/\u63a8\u7406\u5b8c\u6210\u4e4b\u540e\u8bb0\u5f97\u67e5\u770b\u8be5\u6587\u4ef6\u5939\u83b7\u5f97\u7ed3\u679c\u3002</p> <p>by Zihang Liu</p>"},{"location":"zh/Content/codes/server/#3","title":"3 \u56e2\u961f\u6570\u636e\u7ba1\u7406","text":"<p>\u6211\u4eec\u4f7f\u7528\u963f\u91cc\u4e91\u76d8\u4f5c\u4e3a\u56e2\u961f\u6570\u636e\u7ba1\u7406\u4e2d\u5fc3\u3002(1)</p> <ol> <li> <p> aliyun\u7684\u4f18\u70b9\uff1a</p> <ol> <li>\u591a\u5e73\u53f0\u652f\u6301, \u652f\u6301 Windows, macOS, linux(x86/x64/arm), android, iOS \u7b49</li> <li>\u963f\u91cc\u4e91\u76d8\u591a\u7528\u6237\u652f\u6301</li> <li>\u652f\u6301\u6587\u4ef6\u7f51\u76d8\uff0c\u76f8\u518c\u7f51\u76d8\u65e0\u7f1d\u5207\u6362</li> <li>\u4e0b\u8f7d\u7f51\u76d8\u5185\u6587\u4ef6, \u652f\u6301\u591a\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u4e0b\u8f7d, \u652f\u6301\u65ad\u70b9\u7eed\u4f20\u548c\u5355\u6587\u4ef6\u5e76\u884c\u4e0b\u8f7d\u3002\u652f\u6301\u8f6f\u94fe\u63a5(\u7b26\u53f7\u94fe\u63a5)\u6587\u4ef6\u3002</li> <li>\u4e0a\u4f20\u672c\u5730\u6587\u4ef6, \u652f\u6301\u591a\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u4e0a\u4f20\uff0c\u652f\u6301\u6392\u9664\u6307\u5b9a\u6587\u4ef6\u5939/\u6587\u4ef6\uff08\u6b63\u5219\u8868\u8fbe\u5f0f\uff09\u529f\u80fd\u3002\u652f\u6301\u8f6f\u94fe\u63a5(\u7b26\u53f7\u94fe\u63a5)\u6587\u4ef6\u3002</li> <li>\u540c\u6b65\u5907\u4efd\u529f\u80fd\u652f\u6301\u5907\u4efd\u672c\u5730\u6587\u4ef6\u5230\u4e91\u76d8\uff0c\u5907\u4efd\u4e91\u76d8\u6587\u4ef6\u5230\u672c\u5730\uff0c\u53cc\u5411\u540c\u6b65\u5907\u4efd\u4fdd\u6301\u672c\u5730\u6587\u4ef6\u548c\u7f51\u76d8\u6587\u4ef6\u540c\u6b65\u3002\u5e38\u7528\u4e8e\u5d4c\u5165\u5f0f\u6216\u8005NAS\u7b49\u8bbe\u5907\uff0c\u652f\u6301docker\u955c\u50cf\u90e8\u7f72\u3002</li> <li>\u547d\u4ee4\u548c\u6587\u4ef6\u8def\u5f84\u8f93\u5165\u652f\u6301Tab\u952e\u81ea\u52a8\u8865\u5168</li> <li>\u652f\u6301\u963f\u91cc\u4e91ECS\u73af\u5883\u4e0b\u4f7f\u7528\u5185\u7f51\u94fe\u63a5\u4e0a\u4f20/\u4e0b\u8f7d\uff0c\u901f\u5ea6\u66f4\u5feb(\u53ea\u652f\u6301\u963f\u91cc\u7ecf\u5178\u7f51\u7edc\uff0c\u6700\u9ad8\u53ef\u8fbe100MB/s)\uff0c\u8fd8\u53ef\u4ee5\u8282\u7701\u516c\u7f51\u5e26\u5bbd\u6d41\u91cf(\u914d\u7f6etransfer_url_type=2\u5373\u53ef)</li> <li>\u652f\u6301webdav\u6587\u4ef6\u670d\u52a1\uff0c\u53ef\u4ee5\u5c06\u963f\u91cc\u4e91\u76d8\u5f53\u505awebdav\u6587\u4ef6\u7f51\u76d8\u6302\u8f7d\u5230Windows, macOS, linux\u7684\u78c1\u76d8\u4e2d\u8fdb\u884c\u4f7f\u7528\u3002webdav\u90e8\u7f72\u652f\u6301docker\u955c\u50cf\uff0c\u955c\u50cf\u53ea\u6709\u4e0d\u523010MB\u975e\u5e38\u5c0f\u5de7\u3002</li> <li>\u652f\u6301JavaScript\u63d2\u4ef6\uff0c\u4f60\u53ef\u4ee5\u6309\u7167\u81ea\u5df1\u7684\u9700\u8981\u5b9a\u5236\u4e0a\u4f20/\u4e0b\u8f7d\u4e2d\u5173\u952e\u6b65\u9aa4\u7684\u884c\u4e3a\uff0c\u6700\u5927\u7a0b\u5ea6\u6ee1\u8db3\u81ea\u5df1\u7684\u4e2a\u6027\u5316\u9700\u6c42 \u5728linux\u4e2d\u4e0b\u8f7daliyunpan</li> </ol> <p>\u539f\u6587\u94fe\u63a5\uff1ahttps://blog.csdn.net/qq_41174671/article/details/127310715</p> </li> </ol> <p>\u70b9\u51fb\u6b64\u5904\u67e5\u770b\u5b98\u65b9\u6559\u7a0b</p> <ol> <li> <p>\u4e0b\u8f7d\u4e0e\u5b89\u88c5</p> <pre><code>#\u5148\u8fdb\u5165\u60f3\u5c06\u5b89\u88c5\u5305\u5b89\u88c5\u5728\u54ea\u91cc\u7684\u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u4e0b\u8f7d\nwget https://github.com/tickstep/aliyunpan/releases/download/v0.2.2/aliyunpan-v0.2.2-linux-amd64.zip\n# download\u540e\u9762\u63a5\u7684\u5c31\u662f\u7248\u672c\u53f7\uff0c\u7136\u540e\u518d\u63a5\u53d1\u5e03\u9875\u7684\u5b89\u88c5\u5305\u540d\nunzip aliyunpan-v0.2.2-linux-amd64.zip #\u89e3\u538b\u5b89\u88c5\u5305\ncd aliyunpan-v0.2.2-linux-amd64  #\u8fdb\u5165\u5b89\u88c5\u5305\n./aliyunpan #\u542f\u52a8aliyunpan\nlogin #\u767b\u5f55\u8d26\u53f7\n</code></pre> </li> <li> <p>\u767b\u5f55</p> <p>refresh token\uff1ab69841de9160458da59d7757887b56c0</p> </li> <li> <p>\u67e5\u770b\u547d\u4ee4</p> <pre><code># \u83b7\u53d6\u7a0b\u5e8f\u7684\u529f\u80fd\nhelp\n# \u83b7\u53d6\u8d26\u6237\u6587\u4ef6\nls\n</code></pre> <p>\u975e\u5e38\u6709\u7528\u7684\u547d\u4ee4\uff1a<code>help</code></p> </li> <li> <p>\u4e0b\u8f7d\u6587\u4ef6</p> <p>\u901a\u8fc7 <code>config set -savedir &lt;savedir&gt;</code> \u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u6587\u4ef6\u4fdd\u5b58\u7684\u76ee\u5f55\u3002</p> <pre><code>download \u6587\u4ef6\u540d\n</code></pre> </li> <li> <p>\u4e0a\u4f20\u6587\u4ef6</p> <pre><code>upload &lt;\u672c\u5730\u6587\u4ef6/\u76ee\u5f55\u7684\u8def\u5f841&gt; &lt;\u6587\u4ef6/\u76ee\u5f552&gt; &lt;\u6587\u4ef6/\u76ee\u5f553&gt; ... &lt;\u76ee\u6807\u76ee\u5f55&gt;\n</code></pre> <p>\u4f8b\u5982\uff0c\u4e00\u4e2a\u4e0a\u4f20\u6587\u4ef6\u547d\u4ee4\u793a\u4f8b\uff1a</p> <pre><code>upload /root/autodl-fs/poisson_src_bkg.pkl.npy /LHAI\n</code></pre> </li> </ol>"},{"location":"zh/Content/codes/train/","title":"\u4ecegit clone\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b","text":"<p><code>train.py</code>\u5b58\u653e\u5730\u5740:</p> <pre><code>LHAI/LHAI/modeling/train.py\n</code></pre> <p>\u5728\u4e86\u89e3\u4e86LHAI\u6e90\u4ee3\u7801\u7ed3\u6784\uff1a<code>data</code>,<code>docs</code>,<code>LHAI</code>,<code>saves</code> \u6587\u4ef6\u5939\u7684\u57fa\u672c\u4f5c\u7528\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b\u3001\u8fdb\u884c\u63a8\u7406\u4e86\u3002</p> <p>\u8fd9\u4e00\u9875\u5c06\u4f1a\u4ece <code>git clone</code> \u5f00\u59cb\uff0c\u53d9\u8ff0\u6211\u4eec\u8be5\u51c6\u5907\u54ea\u4e9b\u4e1c\u897f\uff0c\u5982\u4f55\u5f00\u59cb\u8fdb\u884c\u8bad\u7ec3\u3002</p> <ol> <li> <p>\u7b2c\u4e00\u6b65\uff1agit clone</p> <p>\u5148\u5b89\u88c5lfs\uff0c\u4ee5\u4e0b\u8f7d\u5927\u6587\u4ef6\uff08\u6570\u636e\uff09\uff1a</p> <pre><code>conda install -c conda-forge git-lfs\ngit lfs install\n</code></pre> <pre><code>git clone --branch Code https://github.com/boobyuuuu/LHAI.git\n</code></pre> <p>\u8fd9\u4f1a\u4e0b\u8f7dCode branch\u4e0b\u7684\u6240\u6709\u4ee3\u7801\u4e8eLHAI\u6587\u4ef6\u5939\u5185\u3002\u6253\u5f00\u6587\u4ef6\u5939\uff1a</p> <pre><code>cd LHAI\n</code></pre> </li> <li> <p>\u68c0\u67e5LHAI\u6587\u4ef6\u5939\u7684\u9879\u76eestructure\uff0c\u662f\u5426\u5305\u542b\u5b8c\u6574\uff1a</p> <pre><code>\u251c\u2500\u2500 LICENSE            &lt;- \u5f00\u6e90\u8bb8\u53ef\u8bc1\uff08\u5982\u679c\u9009\u62e9\u4f7f\u7528\uff09\n\u251c\u2500\u2500 Makefile           &lt;- \u63d0\u4f9b\u4fbf\u5229\u547d\u4ee4\u7684Makefile\uff0c\u4f8b\u5982 `make data` \u6216 `make train`\n\u251c\u2500\u2500 README.md          &lt;- \u9762\u5411\u5f00\u53d1\u8005\u7684\u9876\u7ea7README\u6587\u4ef6\n\u251c\u2500\u2500 data               &lt;- \u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff08\u63a8\u8350\u4f7f\u7528npy\u683c\u5f0f\u4e0a\u4f20\uff09\n\u2502   \u251c\u2500\u2500 FERMI\n\u2502   \u251c\u2500\u2500 POISSON\n\u2502   \u251c\u2500\u2500 SIMU\n\u2502   \u2514\u2500\u2500 RAW\n\u2502\n\u251c\u2500\u2500 saves              &lt;- \u4fdd\u5b58\u8bad\u7ec3\u4e2d\u7684\u56fe\u50cf\u3001\u635f\u5931\u6570\u636e\u3001\u8bad\u7ec3\u540e\u7684\u6a21\u578b\u548c\u9884\u6d4b\u7ed3\u679c\n\u2502   \u251c\u2500\u2500 FIGURE         &lt;- \u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4fdd\u5b58\u7684\u56fe\u50cf\n\u2502   \u2502\u2500\u2500 PRE_FIG        &lt;- \u63a8\u7406\u65f6\u4fdd\u5b58\u7684\u56fe\u50cf\n\u2502   \u251c\u2500\u2500 LOSS           &lt;- \u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4fdd\u5b58\u7684\u635f\u5931\u6570\u636e(.npy)\u548c\u635f\u5931\u56fe\u50cf(.png)\n\u2502   \u2514\u2500\u2500 MODEL          &lt;- \u4fdd\u5b58\u7684\u5df2\u8bad\u7ec3\u6a21\u578b\u548c\u5e8f\u5217\u5316\u6a21\u578b\n\u2502\n\u251c\u2500\u2500 docs               &lt;- \u9ed8\u8ba4\u7684mkdocs\u9879\u76ee\u6587\u4ef6\uff1b\u8be6\u7ec6\u4fe1\u606f\u8bf7\u53c2\u8003 www.mkdocs.org\n\u2502\n\u251c\u2500\u2500 notebooks          &lt;- Jupyter notebooks\uff0c\u547d\u540d\u89c4\u8303\u5305\u62ec\u7f16\u53f7\u3001\u521b\u5efa\u8005\u7f29\u5199\u548c\u63cf\u8ff0\uff0c\u4f8b\u5982\uff1a\n\u2502                         `1.0-jqp-initial-data-exploration`\n\u2502\n\u251c\u2500\u2500 pyproject.toml     &lt;- \u9879\u76ee\u914d\u7f6e\u6587\u4ef6\uff0c\u5305\u542bLHAI\u7684\u5305\u5143\u6570\u636e\u53ca\u5de5\u5177\uff08\u5982black\uff09\u7684\u914d\u7f6e\n\u2502\n\u251c\u2500\u2500 references         &lt;- \u6570\u636e\u5b57\u5178\u3001\u624b\u518c\u548c\u5176\u4ed6\u8bf4\u660e\u6027\u8d44\u6599\n\u2502\n\u251c\u2500\u2500 reports            &lt;- \u751f\u6210\u7684\u5206\u6790\u62a5\u544a\uff08HTML\u3001PDF\u3001LaTeX\u7b49\uff09\n\u2502   \u2514\u2500\u2500 figures        &lt;- \u62a5\u544a\u4e2d\u751f\u6210\u7684\u56fe\u8868\u548c\u56fe\u5f62\n\u2502\n\u251c\u2500\u2500 requirements.txt   &lt;- \u7528\u4e8e\u518d\u73b0\u5206\u6790\u73af\u5883\u7684\u4f9d\u8d56\u6587\u4ef6\uff0c\u4f8b\u5982\u901a\u8fc7\n\u2502                         `pip freeze &gt; requirements.txt` \u751f\u6210\n\u2502\n\u251c\u2500\u2500 setup.cfg          &lt;- flake8\u7684\u914d\u7f6e\u6587\u4ef6\n\u2502\n\u2514\u2500\u2500 LHAI               &lt;- \u672c\u9879\u76ee\u4f7f\u7528\u7684\u6e90\u4ee3\u7801\n    \u2502\n    \u251c\u2500\u2500 __init__.py             &lt;- \u4f7fLHAI\u6210\u4e3a\u4e00\u4e2aPython\u6a21\u5757\n    \u2502\n    \u251c\u2500\u2500 config.py               &lt;- \u5b58\u50a8\u6709\u7528\u7684\u53d8\u91cf\u548c\u914d\u7f6e\n    \u2502\n    \u251c\u2500\u2500 dataset.py              &lt;- \u4e0b\u8f7d\u6216\u751f\u6210\u6570\u636e\u7684\u811a\u672c\n    \u2502\n    \u251c\u2500\u2500 features.py             &lt;- \u7528\u4e8e\u751f\u6210\u5efa\u6a21\u7279\u5f81\u7684\u4ee3\u7801\n    \u2502\n    \u251c\u2500\u2500 modeling                &lt;- \u6a21\u578b\u8bad\u7ec3\u548c\u63a8\u7406\u4ee3\u7801\n    \u2502   \u251c\u2500\u2500 __init__.py \n    \u2502   \u251c\u2500\u2500 predict.py          &lt;- \u7528\u4e8e\u6a21\u578b\u63a8\u7406\u7684\u4ee3\u7801          \n    \u2502   \u2514\u2500\u2500 train.py            &lt;- \u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u7684\u4ee3\u7801\n    \u2502\n    \u251c\u2500\u2500 models                  &lt;- \u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4ee3\u7801\n    \u2502   \u2514\u2500\u2500 CNN_EXP_0_1.py      &lt;- \u6a21\u578b\u540d\u79f0_\u5b9e\u9a8c\u7f16\u53f7.py\n    \u2502\n    \u2502\u2500\u2500 function                &lt;- \u8bad\u7ec3\u548c\u63a8\u7406\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u529f\u80fd\u4ee3\u7801\n    \u2502  \u251c\u2500\u2500 Dataset.py           &lt;- \u6570\u636e\u96c6\u52a0\u8f7d\u529f\u80fd\n    \u2502  \u251c\u2500\u2500 Log.py               &lt;- \u65e5\u5fd7\u8bb0\u5f55\u529f\u80fd\n    \u2502  \u2514\u2500\u2500 Loss.py              &lt;- \u635f\u5931\u751f\u6210\u529f\u80fd\n    \u2502\n    \u2514\u2500\u2500 plots.py                &lt;- \u7528\u4e8e\u751f\u6210\u53ef\u89c6\u5316\u7684\u4ee3\u7801\n</code></pre> </li> <li> <p>\u914d\u7f6e python \u73af\u5883</p> <p>\u9996\u5148\u786e\u5b9a\u6211\u4eec\u7684\u673a\u5668\u7684\u5b8f\u89c2\u73af\u5883\u80fd\u591f\u7528\u4e8e\u673a\u5668\u5b66\u4e60\u4efb\u52a1\uff0c\u6211\u4e00\u822c\u559c\u6b22\u9009\u62e9\u670d\u52a1\u5668\u914d\u7f6e\uff1a</p> <pre><code>PyTorch  2.1.0\nPython  3.10(ubuntu22.04)\nCuda  12.1\n</code></pre> <p>\u5f53\u7136\uff0c\u66f4\u9ad8\u7684\u914d\u7f6e\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u53ea\u662f\u8fd9\u4e2a\u914d\u7f6e\u6700\u7ecf\u5178\u548c\u7a33\u5b9a\uff1b</p> <p>\u7136\u540e\uff0c\u9700\u8981\u521b\u5efapython\u865a\u62df\u73af\u5883\uff0c\u5b89\u88c5python\u73af\u5883\uff1a</p> <pre><code>pip install -m requirements.txt\n</code></pre> <p>\u8fd9\u6837\u73af\u5883\u65b9\u9762\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\u3002</p> </li> <li> <p>\u51c6\u5907\u6570\u636e\uff0c\u5e76\u4e14\u653e\u5230\u6570\u636e\u6587\u4ef6\u5939 <code>data</code> \u5bf9\u5e94\u7684\u7c7b\u522b\u6587\u4ef6\u5939\u5185\uff0c\u4fee\u6539 <code>config.py</code> \u4f7f\u4e4b\u80fd\u591f\u6307\u5411\u6211\u4eec\u7684\u6570\u636e</p> <p>\u6bd4\u5982\u6839\u636e <code>config.py</code> \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u7684\u6cca\u677e\u7c7b\u578b\u6570\u636e <code>poisson_src_bkg.pkl.npy</code> \u8def\u5f84\u5c31\u662f\uff1a</p> <pre><code>\"data\" / \"POISSON\" / poisson_src_bkg.pkl.npy\n</code></pre> <p>\u5728train\u4e2d\u5bf9\u8bad\u7ec3\u7528\u5230\u7684\u6570\u636e\u53d8\u91cf\u6709\u4e09\u4e2a\uff1a</p> <pre><code>DATA_DIR = PROJ_ROOT / \"data\" / \"POISSON\"                                           # \u53c2\u65703\uff1a\u5982\u679c\u9700\u8981\u6307\u5b9a\u4e0d\u540c\u7684\u6570\u636e\u96c6\u7684\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u4fee\u6539\nDATA_NAME = \"poisson_src_bkg.pkl.npy\"                                               # \u53c2\u65704\uff1a\u5982\u679c\u9700\u8981\u6307\u5b9a\u4e0d\u540c\u7684\u6570\u636e\u96c6\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u4fee\u6539\nDATA_PATH = DATA_DIR / DATA_NAME\n</code></pre> </li> <li> <p>\u51c6\u5907\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801\uff0c\u653e\u5230\u795e\u7ecf\u7f51\u7edc\u6587\u4ef6\u5939\u5185\uff0c\u4fee\u6539 <code>config.py</code> \u4f7f\u4e4b\u80fd\u591f\u5f15\u7528\u6211\u4eec\u7684\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801</p> <p>\u6bd4\u5982\u6839\u636e <code>config.py</code> \u4e2d\u7684\u9ed8\u8ba4\u914d\u7f6e\uff0c\u6211\u7684CNN\u7c7b\u578b\u795e\u7ecf\u7f51\u7edc\u4ee3\u7801 <code>CNN_EXP_0_1.py</code> \u8def\u5f84\u5c31\u662f\uff1a</p> <pre><code>\"LHAI\" / \"models\" / CNN_EXP_0_1.py\n</code></pre> <p>\u5728train\u4e2d\u5bf9\u8bad\u7ec3\u7528\u5230\u7684\u6a21\u578b\u53d8\u91cf\u6709\u4e09\u4e2a\uff1a</p> <pre><code>EXP_NAME = \"EXP_0_1\"                                                                # \u53c2\u65701\uff1a\u5982\u679c\u9700\u8981\u6307\u5b9a\u4e0d\u540c\u7684\u5b9e\u9a8c\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u4fee\u6539\nMODEL_NAME = \"CNN\"                                                                  # \u53c2\u65702\uff1a\u5982\u679c\u9700\u8981\u6307\u5b9a\u4e0d\u540c\u7684\u6a21\u578b\uff0c\u53ef\u4ee5\u5728\u8fd9\u91cc\u4fee\u6539\nMODEL_PATH = PROJ_ROOT / \"LHAI\" / \"models\" / f\"{MODEL_NAME}_{EXP_NAME}.py\"\n</code></pre> </li> <li> <p>\u53ef\u4ee5\u8bbe\u7f6e\u5f88\u5c0f\u7684 <code>eopch</code> \u6570\u4ee5\u53ca \u8f83\u5927\u7684 <code>batchsize</code>\uff0c\u8fdb\u884c\u5feb\u901f\u7684\u9884\u8bad\u7ec3\uff0c\u786e\u4fdd\u8bad\u7ec3\u8fc7\u7a0b\u4e0d\u4f1a\u51fa\u95ee\u9898\u3002</p> </li> <li> <p>\u786e\u4fdd\u8bad\u7ec3\u8fc7\u7a0b\u4e0d\u4f1a\u51fa\u95ee\u9898\u4e4b\u540e\uff0c\u6b63\u5f0f\u8bbe\u7f6e\u53c2\u6570\uff0c\u5f00\u59cb\u8bad\u7ec3\u3002</p> <p>\u65b9\u6cd51\uff1a\u8bbe\u7f6e <code>config.py</code> \u4e2dTRAIN\u7684\u53c2\u6570\uff0c\u5728 <code>modeling</code> \u6587\u4ef6\u5939\u4e2d\u76f4\u63a5\u8fd0\u884c\u3002</p> <pre><code>python train.py\n</code></pre> <p>\u65b9\u6cd52\uff1a\u9ad8\u7aef\u4e00\u70b9\u7684\u76f4\u63a5\u901a\u8fc7 <code>Typer</code> \u63a5\u53e3\u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570</p> <pre><code>python train.py --model-name \"GAN\" --exp-name \"MyExperiment\" --data-dir \"./data\" --data-name \"dataset.csv\" --seed 42 --traintype \"supervised\" --frac-train 0.8 --epochs 10 --batch-size 32 --latentdim 128 --lr-max 0.01 --lr-min 0.001\n</code></pre> <p>\u5177\u4f53\u8bf7\u770b Code Section \u7684 LHAI \u624b\u518c\u9875\u9762\u3002</p> </li> </ol> <p>by Zihang Liu</p>"},{"location":"zh/Content/data/#1","title":"1 \u6570\u636e\u96c6\u547d\u540d\u89c4\u5219\u4e0e\u5b58\u50a8\u65b9\u5f0f","text":"<p>\u6570\u636e\u96c6\u547d\u540d\u89c4\u5219\uff1a</p> <pre><code>[\u6e90\u7c7b\u578b]_[\u6570\u636e\u6570\u91cf]_[\u56fe\u7247\u5927\u5c0f]_[\u7528\u9014]_[\u9884\u5904\u7406]_[\u7248\u672c].npy\n</code></pre> <p>\u6570\u636e\u96c6\u5b58\u50a8\u65b9\u5f0f\u4ecb\u7ecd\uff1a</p> <p>\u672c\u6570\u636e\u96c6\u4ee5 NumPy \u6570\u7ec4\uff08.npy\uff09\u683c\u5f0f\u5b58\u50a8\uff0c\u6570\u636e\u7ed3\u6784\u4e3a\u56db\u7ef4\u6570\u7ec4 (N, 2, H, W)\uff0c\u5176\u4e2d N \u8868\u793a\u6837\u672c\u6570\u91cf\uff0cH \u548c W \u5206\u522b\u4e3a\u56fe\u50cf\u7684\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\u3002\u6bcf\u4e2a\u6837\u672c\u5305\u542b\u4e00\u5bf9\u56fe\u50cf\uff0c\u6309\u987a\u5e8f\u5b58\u50a8\u4e3a\u6e05\u6670\u56fe\u50cf\u4e0e\u6a21\u7cca\u56fe\u50cf\uff0c\u5373\u7ef4\u5ea6\u7d22\u5f15\u4e3a 0 \u7684\u56fe\u50cf\u4e3a\u6e05\u6670\u56fe\uff08\u5982\u9ad8\u5206\u8fa8\u7387\u6216\u53c2\u8003\u56fe\uff09\uff0c\u7d22\u5f15\u4e3a 1 \u7684\u56fe\u50cf\u4e3a\u5bf9\u5e94\u7684\u6a21\u7cca\u56fe\uff08\u5982\u4f4e\u5206\u8fa8\u7387\u6216\u9000\u5316\u56fe\uff09\u3002</p> <p>\u6570\u636e\u96c6\u547d\u540d\u89c4\u5219\u8bf4\u660e</p> \u5b57\u6bb5\u540d \u793a\u4f8b \u542b\u4e49\u8bf4\u660e <code>\u6e90\u7c7b\u578b</code> <code>mic</code> / <code>sim</code> / <code>real</code> \u6570\u636e\u6765\u6e90\u7c7b\u578b\uff1a\u5982 <code>mic</code> \u8868\u793a\u663e\u5fae\u56fe\u50cf\uff0c<code>sim</code> \u8868\u793a\u6a21\u62df\u6570\u636e\uff0c<code>real</code> \u8868\u793a\u771f\u5b9e\u91c7\u96c6\u56fe\u50cf <code>\u6570\u636e\u6570\u91cf</code> <code>7000</code> / <code>12000</code> \u5f53\u524d\u6587\u4ef6\u4e2d\u5305\u542b\u7684\u56fe\u50cf\u5bf9\u6570\u91cf\uff0c\u4fbf\u4e8e\u5feb\u901f\u4e86\u89e3\u6570\u636e\u89c4\u6a21 <code>\u56fe\u7247\u5927\u5c0f</code> <code>64</code> / <code>128</code> \u5355\u5f20\u56fe\u50cf\u7684\u7a7a\u95f4\u5c3a\u5bf8\uff08\u9ad8 \u00d7 \u5bbd\uff09\uff0c\u9002\u7528\u4e8e\u6a21\u578b\u8f93\u5165\u914d\u7f6e <code>\u7528\u9014</code> <code>train</code> / <code>val</code> / <code>orig</code> \u6570\u636e\u7528\u9014\u6807\u8bb0\uff1a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u6216\u539f\u59cb\u6570\u636e\u96c6 <code>\u9884\u5904\u7406</code> <code>norm</code> / <code>crop</code> / <code>none</code> \u6570\u636e\u662f\u5426\u7ecf\u8fc7\u5f52\u4e00\u5316\u3001\u88c1\u526a\u7b49\u9884\u5904\u7406\u64cd\u4f5c\uff0c\u82e5\u65e0\u9884\u5904\u7406\u53ef\u7701\u7565 <code>\u7248\u672c</code> <code>v1</code> / <code>v2.1</code> / <code>v3</code> \u6570\u636e\u96c6\u7248\u672c\u53f7\uff0c\u652f\u6301\u8fed\u4ee3\u7ef4\u62a4\u4e0e\u66f4\u65b0\u8ffd\u8e2a"},{"location":"zh/Content/data/#2-lhai","title":"2 LHAI\u6570\u636e\u96c6\u4e0e\u4ecb\u7ecd","text":"<p>\u539f\u59cb\u6570\u636e\u96c6\uff1a</p> \u6587\u4ef6\u540d \u542b\u4e49\u8bf4\u660e \u521b\u5efa\u65f6\u95f4 <code>miragesearch_4200_140_orig.npy</code> \u8001\u5e08\u90a3\u8fb9\u6700\u65b0\u7684\u4e00\u7ec4\u539f\u59cb\u6a21\u62df\u6570\u636e <p>\u8bad\u7ec3\u96c6\uff08\u4ee5\u521b\u5efa\u65f6\u95f4\u6392\u5e8f\uff09\uff1a</p> \u6587\u4ef6\u540d \u542b\u4e49\u8bf4\u660e \u521b\u5efa\u65f6\u95f4 <code>biosr_41190_64_train_crop.npy</code> \u663e\u5fae\u56fe\u50cf\u6765\u6e90\uff0c\u7ea4\u6bdb <code>cilium_6512_64_train.npy</code> \u663e\u5fae\u56fe\u50cf\u6765\u6e90\uff0c\u8367\u5149\u5c0f\u7403 <code>cube_1504_64_train.npy</code> \u663e\u5fae\u56fe\u50cf\u6765\u6e902\uff0c\u8367\u5149\u5c0f\u7403 <code>pysted_5204_64_train.npy</code> \u663e\u5fae\u56fe\u50cf\u6765\u6e90\uff0c\u91cf\u5b50\u70b9 <code>tangxiao_7000_64_train.npy</code> \u5510\u6653\u6a21\u62df\u6570\u636e\u96c6 <code>halos_1200_64_train_crop.npy</code> \u4ea4\u5927\u6a21\u62df\u6570\u636e\u96c6 <code>xingwei_10000_64_train_v1.npy</code> \u661f\u7ef4\u6a21\u62df4\u8868\u5f81\u6570\u636e\u96c6 <p>\u6d4b\u8bd5\u96c6\uff1a</p> \u6587\u4ef6\u540d \u542b\u4e49\u8bf4\u660e \u521b\u5efa\u65f6\u95f4 <code>nhit100_1_64_val.npy</code> \u4e00\u5f202\u6e90\u7684\u7b80\u5355\u6d4b\u8bd5\u56fe\u7247\uff0cE=100 <code>nhit2000_1_64_val.npy</code> \u4e00\u5f202\u6e90\u7684\u7b80\u5355\u6d4b\u8bd5\u56fe\u7247\uff0cE=2000"},{"location":"zh/Content/data/simulation/","title":"\u6a21\u62df","text":""},{"location":"zh/Content/data/simulation/#_2","title":"\u4ecb\u7ecd","text":"<p>\u5bf9\u4e8e\u76d1\u7763\u5b66\u4e60\u8bad\u7ec3\uff0c\u6211\u4eec\u9700\u8981\u4e24\u7c7b\u6570\u636e\u2014\u2014 \u5f3a\u5ea6\u56fe \u548c \u8ba1\u6570\u56fe\u3002</p> <p>\u524d\u8005\u662f\u76ee\u6807\u56fe\uff0c\u6307\u7684\u662f\u4f3d\u9a6c\u5c04\u7ebf\u6e90\u7684\u672c\u5f81\u5149\u6d41\u5206\u5e03\u3002\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u6211\u4eec\u65e8\u5728\u4ece\u89c2\u6d4b\u5230\u7684\u8ba1\u6570\u56fe\u4e2d\u8fd8\u539f\u8be5\u5f3a\u5ea6\u56fe\u3002</p> <p>\u540e\u8005\u662f\u4eea\u5668\u68c0\u6d4b\u5230\u7684\u7a7a\u95f4\u4e8b\u4ef6\u5206\u5e03\uff0c\u56e0\u6b64\u53d7\u5230\u7cfb\u7edf\u8bef\u5dee\u548c\u968f\u673a\u6ce2\u52a8\u7684\u5f71\u54cd\u3002\u65e0\u8bba\u662f WCDA \u8fd8\u662f KM2A\uff0c\u90fd\u5b58\u5728\u5c06\u5b87\u5b99\u5c04\u7ebf\u4e8b\u4ef6\u8bef\u5206\u7c7b\u4e3a\u4f3d\u9a6c\u5c04\u7ebf\u4e8b\u4ef6\u7684\u95ee\u9898\uff0c\u56e0\u6b64\u6570\u636e\u4e2d\u4e5f\u5305\u542b\u5b87\u5b99\u5c04\u7ebf\u80cc\u666f\u3002\u7531\u4e8e\u65b9\u5411\u91cd\u5efa\u8bef\u5dee\uff0c\u4f3d\u9a6c\u5c04\u7ebf\u6e90\u7684\u5f62\u6001\u4f1a\u53d7\u5230\u7a7a\u95f4\u4e0d\u786e\u5b9a\u6027\u7684\u5f71\u54cd\uff0c\u5e76\u4e0e\u70b9\u6269\u6563\u51fd\u6570\uff08PSF\uff09\u4e00\u8d77\u88ab\u6a21\u7cca\u5316\u3002</p> <p>\u56e0\u6b64\uff0c\u4e3a\u4e86\u6a21\u62df\u4eea\u5668\u54cd\u5e94\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u4f3d\u9a6c\u5c04\u7ebf\u80cc\u666f\u3001\u6e90\u5f3a\u5ea6\u3001\u5b9a\u4f4d\u8bef\u5dee\u4ee5\u53ca\u5b87\u5b99\u5c04\u7ebf\u80cc\u666f\u3002\u76ee\u524d\uff0c\u6211\u4eec\u672a\u6dfb\u52a0\u5b87\u5b99\u5c04\u7ebf\u80cc\u666f\uff0c\u800c\u662f\u5047\u8bbe\u6837\u672c\u4e3a\u7eaf\u4f3d\u9a6c\u5c04\u7ebf\u4e8b\u4ef6\u3002\u6b64\u5916\uff0c\u4e00\u79cd\u6a21\u62df\u5b9a\u4f4d\u8bef\u5dee\u7684\u5b9e\u9645\u65b9\u6cd5\u662f\u91c7\u7528\u57fa\u4e8e\u5927\u6c14\u7c07\u5c04\u8499\u7279\u5361\u7f57\u6a21\u62df\u751f\u6210\u7684 PSF\u3002</p>"},{"location":"zh/Content/data/simulation/#_3","title":"\u4f3d\u9a6c\u5c04\u7ebf\u80cc\u666f","text":""},{"location":"zh/Content/data/simulation/#_4","title":"\u6f2b\u5c04\u4f3d\u9a6c\u5c04\u7ebf\u80cc\u666f\u6a21\u578b","text":"<p>\u8d39\u7c73 LAT \u63d0\u4f9b\u7684\u6f2b\u5c04\u4f3d\u9a6c\u5c04\u7ebf\u80cc\u666f\u6a21\u578b \u57fa\u4e8e\u5bf9\u94f6\u6cb3\u7cfb\u4e2d\u6f2b\u5c04\u6c14\u4f53\u7684\u591a\u6ce2\u6bb5\u89c2\u6d4b\u5f97\u51fa\u3002\u539f\u59cb\u80cc\u666f\u6570\u636e\u4ee5 FITS \u683c\u5f0f\u5b58\u50a8\uff0c\u5206\u4e3a 28 \u4e2a\u80fd\u91cf\u533a\u95f4\u3002\u6211\u4eec\u4f7f\u7528 Python \u5e93 healpy \u5c06\u5176\u8f6c\u6362\u4e3a HEALPix \u6570\u636e\u3002\u5f53\u524d\u6570\u636e\u7684\u89d2\u5206\u8fa8\u7387\uff08\u50cf\u7d20\u5bbd\u5ea6\uff09\u7ea6\u4e3a \\(0.1\\deg\\)\u3002</p> <p></p> <p>\u901a\u8fc7\u5728\u5168\u5929\u56fe\u4e0a\u9009\u62e9\u4e0d\u540c\u533a\u57df\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u53d6\u4f3d\u9a6c\u5c04\u7ebf\u80cc\u666f\u7684\u5f3a\u5ea6\u56fe\u3002\u9009\u62e9\u7684\u50cf\u7d20\u968f\u540e\u88ab\u63d2\u503c\u4e3a\u7b1b\u5361\u5c14\u5750\u6807\uff0c\u50cf\u7d20\u5bbd\u5ea6\u4e3a \\(\\delta x = 0.1\\deg\\)\u3002\u4e3a\u4fbf\u4e8e\u8ba1\u7b97\uff0c\u6211\u4eec\u9009\u62e9 \\(6.5\\times6.5\\deg\\) \u7684\u533a\u57df\uff0c\u8fd9\u4f1a\u751f\u6210 \\(64\\times64\\) \u7684\u6570\u7ec4\u3002</p>"},{"location":"zh/Content/data/simulation/#psf","title":"\u70b9\u6269\u6563\u51fd\u6570\uff08PSF\uff09","text":"<p>PSF \u7684\u5047\u8bbe\u662f\u4e00\u79cd\u7c97\u7565\u65b9\u6cd5\uff0c\u4ec5\u7528\u4e8e\u521d\u6b65\u5c1d\u8bd5\u3002\u8bbe\u5b9a\u5bf9\u79f0 PSF \u610f\u5473\u7740\u5047\u5b9a\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u5b9a\u4f4d\u8bef\u5dee\u76f8\u540c\uff0c\u800c\u5b9e\u9645\u60c5\u51b5\u5e76\u975e\u5982\u6b64\u3002PSF \u4f1a\u968f\u8d64\u7eac\u548c\u80fd\u91cf\u53d8\u5316\uff0c\u4e14\u4e0d\u4e00\u5b9a\u662f\u5bf9\u79f0\u7684\u3002</p> <p>\u901a\u8fc7\u5bf9\u9009\u5b9a\u5f3a\u5ea6\u56fe\u8fdb\u884c PSF \u7684\u4e8c\u7ef4\u5377\u79ef\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u6a21\u7cca\u5316\u7684\u5929\u7a7a\u56fe\u3002</p> <p></p>"},{"location":"zh/Content/data/simulation/#_5","title":"\u968f\u673a\u6ce2\u52a8","text":"<p>\u76ee\u524d\u5f97\u5230\u7684\u5929\u7a7a\u56fe\u4ecd\u7136\u662f\u67d0\u79cd\u6a21\u7cca\u5f3a\u5ea6\u56fe\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u50cf\u7d20\u503c\u53cd\u6620\u4e86\u8ba1\u6570\u6570\u76ee\u7684\u671f\u671b\u503c\u3002\u4f3d\u9a6c\u5c04\u7ebf\u7167\u7247\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u968f\u673a\u6cca\u677e\u8fc7\u7a0b\u7684\u4ea7\u7269\u3002\u6211\u4eec\u6839\u636e\u50cf\u7d20\u503c\u4f5c\u4e3a\u6cca\u677e\u5206\u5e03\u53c2\u6570\u8fdb\u884c\u4e86\u62bd\u6837\uff0c\u4ee5\u6a21\u62df\u968f\u673a\u5149\u5b50\u7684\u6ce2\u52a8\u3002\u6ce2\u52a8\u5f3a\u5ea6\u53d6\u51b3\u4e8e\u89c2\u6d4b\u65f6\u957f\uff0c\u66dd\u5149\u65f6\u95f4\u8d8a\u957f\uff0c\u4fe1\u566a\u6bd4\u8d8a\u9ad8\uff0c\u6210\u50cf\u8d28\u91cf\u8d8a\u597d\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002</p> <p>\u4f5c\u8005\uff1a\u9f9a\u661f\u709c</p>"},{"location":"zh/Content/eval/","title":"\u8bc4\u4f30\u4ecb\u7ecd\u4e0e\u89c4\u8303\u5316\u6807\u51c6","text":""},{"location":"zh/Content/model/","title":"\u6a21\u578b\u4ecb\u7ecd\u4e0e\u89c4\u8303\u5316\u6807\u51c6","text":"<p>\u672c\u7bc7\u4ecb\u7ecd\u8d85\u5206\u8fa8\u5e38\u7528\u7684\u795e\u7ecf\u7f51\u7edc\u6280\u672f\uff0c\u5305\u62ec\uff1a</p> <ol> <li> <p><code>CNN</code> \u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p><code>VAE</code> \u7f51\u8def\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p><code>GAN</code> \u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p><code>ResNet</code> \u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p><code>DIFFUSION</code> \u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p><code>Transformer</code> \u7f51\u7edc\u539f\u7406\u4e0e\u7ed3\u6784</p> </li> <li> <p>\u7279\u6b8a\u67b6\u6784\u6a21\u578b</p> </li> </ol> <p>\u6a21\u578b\u547d\u540d\u89c4\u5219\u683c\u5f0f:</p> <pre><code>[\u6a21\u578b\u67b6\u6784]_[\u5b9e\u9a8c\u4ee3\u53f7]_[\u8bad\u7ec3\u8f6e\u6570]epo_[\u6279\u5927\u5c0f]bth_[\u6570\u636e\u96c6\u7b80\u5199]_[\u7248\u672c].pth\n</code></pre> <p>\u5b57\u6bb5\u8bf4\u660e:</p> \u5b57\u6bb5\u540d \u793a\u4f8b \u542b\u4e49\u8bf4\u660e \u6a21\u578b\u67b6\u6784 <code>CNN</code> / <code>DIFFUSION</code> / <code>ResNet</code> \u7f51\u7edc\u6a21\u578b\u540d\u79f0\uff0c\u4fbf\u4e8e\u5feb\u901f\u8bc6\u522b\u6240\u7528\u67b6\u6784 \u5b9e\u9a8c\u4ee3\u53f7 <code>EXP01</code> \u8bad\u7ec3\u5b9e\u9a8c\u7684\u7f16\u53f7\u6216\u6807\u7b7e\uff0c\u7528\u4e8e\u533a\u5206\u4e0d\u540c\u5b9e\u9a8c \u8bad\u7ec3\u8f6e\u6570 <code>400epo</code> \u8bad\u7ec3\u7684 epoch \u6570\uff0c\u4fbf\u4e8e\u8bc6\u522b\u8bad\u7ec3\u65f6\u957f \u6279\u5927\u5c0f <code>32bth</code> \u6279\u6b21\u5927\u5c0f\uff0c\u8868\u793a\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3\u4e2d\u4f7f\u7528\u7684\u6837\u672c\u6570\u91cf \u6570\u636e\u96c6\u7b80\u5199 <code>poisson</code> \u8bad\u7ec3\u6570\u636e\u96c6\u6587\u4ef6\u540d\u7b80\u5199\uff0c\u4fbf\u4e8e\u5feb\u901f\u5173\u8054\u6570\u636e\u96c6 \u7248\u672c\u53f7 <code>v1</code> / <code>v2</code> \u6a21\u578b\u7248\u672c\u53f7\uff0c\u4fbf\u4e8e\u6a21\u578b\u8fed\u4ee3\u66f4\u65b0\u53ca\u7248\u672c\u7ba1\u7406\uff08\u53ef\u7701\u7565\uff09 <p>\u793a\u4f8b:</p> <pre><code>CNN_EXP01_400epo_32bth_poisson.pth\n</code></pre> <p>\u6a21\u578b\u5b58\u50a8\u65b9\u5f0f\u4ecb\u7ecd:</p> <p>\u672c\u6a21\u578b\u4ee5 PyTorch \u7684 <code>.pth</code> \u683c\u5f0f\u5b58\u50a8\uff0c\u5305\u542b\u8bad\u7ec3\u597d\u7684\u6743\u91cd\u53c2\u6570\uff0c\u547d\u540d\u89c4\u5219\u53cd\u6620\u4e86\u6a21\u578b\u7684\u67b6\u6784\u3001\u8bad\u7ec3\u914d\u7f6e\u4e0e\u5bf9\u5e94\u6570\u636e\u96c6\uff0c\u65b9\u4fbf\u7248\u672c\u7ba1\u7406\u548c\u5feb\u901f\u5b9a\u4f4d\u3002</p> <p>\u5728\u4ee3\u7801\u914d\u7f6e\u4e2d\u7684\u89c4\u8303\u5199\u6cd5\u793a\u4f8b:</p> <pre><code>TRAIN_EXP_NAME        = \"EXP_0_1\"\nTRAIN_MODEL_NAME      = \"CNN\"\nTRAIN_MODEL_PY        = PROJ_ROOT / \"LHAI\" / \"models\" / f\"{TRAIN_MODEL_NAME}_{TRAIN_EXP_NAME}.py\"\nTRAIN_DATA_DIR        = PROJ_ROOT / \"data\" / \"POISSON\"\nTRAIN_DATA_NAME       = \"poisson_src_bkg.pkl.npy\"\nTRAIN_DATA_PATH       = TRAIN_DATA_DIR / TRAIN_DATA_NAME\nTRAIN_SEED            = 0\nTRAIN_TYPE            = \"poissonsrc+bkg_highresorig\"\nTRAIN_FRAC            = 0.8\nTRAIN_EPOCHS          = 400\nTRAIN_BATCH_SIZE      = 32\nTRAIN_LATENT_DIM      = 64\nTRAIN_LR_MAX          = 5e-4\nTRAIN_LR_MIN          = 5e-6\n</code></pre>"},{"location":"zh/Content/model/cnn/","title":"CNN \u7c7b\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"zh/Content/model/cnn/#cnn_1","title":"CNN\u7c7b\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u53d1\u5c55\u8109\u7edc","text":"<pre><code>graph TD\n    SRCNN[2014 SRCNN\\n\u9996\u4e2a\u7aef\u5230\u7aef\u8d85\u5206CNN]\n    ESPCN[2016 ESPCN\\n\u5b50\u50cf\u7d20\u5377\u79ef\u52a0\u901f\u4e0a\u91c7\u6837]\n    VDSR[2016 VDSR\\n\u6df1\u5c42\u6b8b\u5dee\u5b66\u4e60]\n    DRCN[2016 DRCN\\n\u9012\u5f52\u6b8b\u5dee\u7f51\u7edc]\n    FSRCNN[2016 FSRCNN\\n\u8f7b\u91cf\u5316\u6539\u8fdb]\n    DRRN[2017 DRRN\\n\u9012\u5f52\u6b8b\u5dee\u878d\u5408]\n    LapSRN[2017 LapSRN\\n\u591a\u7ea7\u6b8b\u5dee\u91d1\u5b57\u5854\u7ed3\u6784]\n    SRDenseNet[2017 SRDenseNet\\n\u5bc6\u96c6\u8fde\u63a5\u6b8b\u5dee\u7f51\u7edc]\n    EDSR[2017-2018 EDSR\\n\u53bbBN\u7684\u6df1\u6b8b\u5dee\u7f51\u7edc]\n    IDN[2019 IDN\\n\u4fe1\u606f\u5bfc\u5411\u8f7b\u91cf\u7f51\u7edc]\n    CARN[2018 CARN\\n\u7ea7\u8054\u6b8b\u5dee\u591a\u5c3a\u5ea6\u878d\u5408]\n    RCAN[2018-2019 RCAN\\n\u901a\u9053\u6ce8\u610f\u529b\u673a\u5236]\n    SAN_HAN[2019 SAN / HAN\\n\u591a\u5c42\u6b21\u6ce8\u610f\u529b\u673a\u5236]\n    TRANSFORMER[2021+ Transformer\u8d85\u5206\\n\u5168\u5c40\u4e0a\u4e0b\u6587\u5efa\u6a21]\n    DIFFUSION[2022+ Diffusion\u751f\u6210\u6a21\u578b\\n\u6982\u7387\u5efa\u6a21]\n\n    SRCNN --&gt; VDSR\n    SRCNN --&gt; FSRCNN\n    SRCNN --&gt; ESPCN\n    VDSR --&gt; DRCN\n    VDSR --&gt; DRRN\n    DRCN --&gt; DRRN\n    DRRN --&gt; EDSR\n    FSRCNN --&gt; CARN\n    EDSR --&gt; RCAN\n    CARN --&gt; RCAN\n    RCAN --&gt; SAN_HAN\n    SAN_HAN --&gt; TRANSFORMER\n    TRANSFORMER --&gt; DIFFUSION\n    LapSRN --&gt; EDSR\n    SRDenseNet --&gt; EDSR\n    IDN --&gt; CARN</code></pre>"},{"location":"zh/Content/model/cnn/#2_1","title":"2. \u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784","text":"<p>\u6838\u5fc3\u4f18\u52bf\uff1a \u9996\u521b\u9012\u5f52\u5377\u79ef\u7ed3\u6784\uff0c\u5355\u5c42\u6743\u91cd\u91cd\u590d\u4f7f\u752816\u6b21\uff0c\u7528\u4ec51.8\u4e07\u53c2\u6570\u91cf\u8fbe\u5230\u4e0eVDSR\uff0866\u4e07\u53c2\u6570\uff09\u76f8\u5f53\u7684\u6027\u80fd\uff0c\u89e3\u51b3\u6df1\u5ea6\u6a21\u578b\u53c2\u6570\u7206\u70b8\u95ee\u9898\u3002</p> <p>\u67b6\u6784\u521b\u65b0\uff1a 1. \u6743\u91cd\u5171\u4eab\u9012\u5f52\uff1a\u540c\u4e00\u5377\u79ef\u5c42\u5faa\u73af\u8c03\u7528\uff0816\u6b21\uff09\u6784\u5efa\u6df1\u5ea6\u7f51\u7edc 2. \u591a\u76d1\u7763\u8f93\u51fa\uff1a\u6bcf\u4e2a\u9012\u5f52\u6b65\u9aa4\u8f93\u51fa\u4e2d\u95f4\u9884\u6d4b 3. \u9012\u5f52\u76d1\u7763\uff1a\u878d\u5408\u6240\u6709\u4e2d\u95f4\u9884\u6d4b\u8fdb\u884c\u6700\u7ec8\u91cd\u5efa \u5173\u952e\u6539\u8fdb\uff1a\u7528\u9012\u5f52\u6df1\u5ea6\u66ff\u4ee3\u5806\u53e0\u6df1\u5ea6\uff0c\u5b9e\u73b0\u53c2\u6570\u6548\u7387\u4e0e\u6027\u80fd\u7684\u7a81\u7834\u5e73\u8861\u3002</p> <pre><code>class DRCN(nn.Module):\n    def __init__(self, recursion_depth=16):\n        super(DRCN, self).__init__()\n        # \u521b\u65b0\u70b91\uff1a\u5355\u5d4c\u5165\u5c42\u66ff\u4ee3\u591a\u5377\u79ef\n        self.embed = nn.Conv2d(1, 256, kernel_size=3, padding=1)\n\n        # \u521b\u65b0\u70b92\uff1a\u5355\u5377\u79ef\u5c42\u9012\u5f52\u4f7f\u7528\uff08\u6838\u5fc3\u7a81\u7834\uff09\n        self.recursive_conv = nn.Conv2d(256, 256, kernel_size=3, padding=1)\n\n        # \u521b\u65b0\u70b93\uff1a\u91cd\u5efa\u5c42\u590d\u7528\uff08\u6743\u91cd\u5171\u4eab\uff09\n        self.reconstruct = nn.Conv2d(256, 1, kernel_size=3, padding=1)\n\n        self.recursion_depth = recursion_depth\n        self.relu = nn.ReLU()\n\n    def forward(self, x):\n        # \u7279\u5f81\u5d4c\u5165\n        x = self.relu(self.embed(x))\n\n        # \u9012\u5f52\u6838\u5fc3\uff1a\u540c\u4e00\u5377\u79ef\u5c42\u5faa\u73af\u8c03\u7528\n        intermediate = []\n        for _ in range(self.recursion_depth):\n            x = self.relu(self.recursive_conv(x))  # \u2190 \u6838\u5fc3\u521b\u65b0\uff1a\u6743\u91cd\u5171\u4eab\n            intermediate.append(self.reconstruct(x))  # \u4e2d\u95f4\u9884\u6d4b\n\n        # \u9012\u5f52\u76d1\u7763\uff1a\u878d\u5408\u6240\u6709\u4e2d\u95f4\u7ed3\u679c\n        return torch.stack(intermediate, dim=0).mean(dim=0)  # \u5e73\u5747\u878d\u5408\n</code></pre>"},{"location":"zh/Content/model/cnn/#3_1","title":"3. \u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u542f\u53d1","text":"<p>\u5f53\u524d\u5dee\u8ddd\uff1a 1. \u6027\u80fd\u74f6\u9888\uff1aPSNR\u6bd4ESTRNN\u4f4e1.5-2dB\uff0c\u9ad8\u9891\u7eb9\u7406\u751f\u6210\u80fd\u529b\u4e0d\u8db3 2. \u8ba1\u7b97\u7f3a\u9677\uff1a\u9012\u5f52\u7ed3\u6784\u65e0\u6cd5\u5e76\u884c\u5316\uff0c\u63a8\u7406\u901f\u5ea6\u6bd4\u73b0\u4ee3\u6a21\u578b\u61625-8\u500d  </p> <p>\u67b6\u6784\u542f\u53d1\uff1a 1. \u53c2\u6570\u5171\u4eab\u8303\u5f0f\uff1a\u6743\u91cd\u590d\u7528\u601d\u60f3\u88ab\u7528\u4e8eUniversal Transformers 2. \u591a\u5c3a\u5ea6\u76d1\u7763\uff1a\u4e2d\u95f4\u76d1\u7763\u673a\u5236\u5f71\u54cdDeep Supervision\u8bad\u7ec3\u7b56\u7565 3. \u8f7b\u91cf\u5316\u8bbe\u8ba1\uff1a\u53c2\u6570\u6548\u7387\u7406\u5ff5\u5e94\u7528\u4e8e\u77e5\u8bc6\u84b8\u998f\u6a21\u578b  </p> <p>\u6539\u8fdb\u65b9\u5411\uff1a <pre><code>graph LR\nA[\u8f93\u5165LR] --&gt; B[\u5d4c\u5165\u5c42]\nB --&gt; C[Transformer\u9012\u5f52\u5757]\nC --&gt; D[\u9690\u72b6\u6001\u878d\u5408]\nD --&gt; E[\u52a8\u6001\u6743\u91cd\u9884\u6d4b]\nE --&gt; F[\u8f93\u51faHR]</code></pre> \u5f53\u4ee3\u878d\u5408\u5efa\u8bae\uff1a\u5c06\u9012\u5f52\u5377\u79ef\u66ff\u6362\u4e3a\u53ef\u5e76\u884c\u5316\u7684\u5faa\u73afTransformer\u5757\uff0c\u7ed3\u5408\u9690\u72b6\u6001\u95e8\u63a7\u878d\u5408\u673a\u5236\uff0c\u53ef\u5728\u4fdd\u6301\u53c2\u6570\u6548\u7387\u7684\u540c\u65f6\u63d0\u5347\u63a8\u7406\u901f\u5ea6300%\u3002</p>"},{"location":"zh/Content/model/cnn/#_2","title":"\u6a21\u578b\u7ed3\u6784\u56fe","text":"<pre><code>graph TD\n    A[\u8f93\u5165LR] --&gt; B[\u5d4c\u5165\u5377\u79ef]\n    B --&gt; C[\u9012\u5f52\u5c42]\n    C --&gt;|\u5faa\u73af16\u6b21| C\n    C --&gt; D[\u4e2d\u95f4\u91cd\u5efa]\n    D --&gt;|\u9884\u6d4b1| E[\u878d\u5408\u5c42]\n    D --&gt;|\u9884\u6d4b2| E\n    D --&gt;|...| E\n    D --&gt;|\u9884\u6d4b16| E\n    E[\u52a0\u6743\u5e73\u5747] --&gt; F[\u8f93\u51faHR]\n\n    subgraph \u9012\u5f52\u6838\u5fc3\n    C[3\u00d73\u5377\u79ef\\n\u6743\u91cd\u5171\u4eab] --&gt; H[ReLU]\n    H --&gt; C\n    end</code></pre> <p>DRCN\u7684\u9012\u5f52\u6743\u91cd\u5171\u4eab\u601d\u60f3\u5728\u5f53\u4eca\u5927\u6a21\u578b\u65f6\u4ee3\u5c55\u73b0\u51fa\u60ca\u4eba\u524d\u77bb\u6027\u2014\u2014Meta\u7684LLaMA-2\u91c7\u7528\u7c7b\u4f3c\u53c2\u6570\u5171\u4eab\u673a\u5236\uff0c\u8bc1\u660e\u5176\u5728\u53c2\u6570\u6548\u7387\u9886\u57df\u7684\u91cc\u7a0b\u7891\u5730\u4f4d\u3002\u8fd9\u79cd\u6539\u5199\u7a81\u51fa\u4e86\u5176\"\u4ee5\u5c11\u80dc\u591a\"\u7684\u6838\u5fc3\u4ef7\u503c\uff0c\u7b26\u5408\u4f60\u8981\u6c42\u7684\"\u51cf\u5c11AI\u672f\u8bed\u3001\u589e\u5f3a\u6d1e\u89c1\u6027\"\u76ee\u6807\u3002</p>"},{"location":"zh/Content/model/cnn/#2_2","title":"2. \u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784","text":"<p>\u6838\u5fc3\u4f18\u52bf\uff1a \u9996\u6b21\u7a81\u7834\u6df1\u5ea6\u8d85\u5206\u6a21\u578b\u6027\u80fd\u74f6\u9888\uff0c\u5728DIV2K\u57fa\u51c6\u4e0a\u5c06PSNR\u63a8\u9ad8\u81f332.46dB\uff08\u00d74\u653e\u5927\uff09\uff0c\u6bd4\u524d\u6700\u4f73\u63d0\u53470.8dB\uff0c\u5960\u5b9a\u73b0\u4ee3\u8d85\u5206\u57fa\u7840\u67b6\u6784\u3002</p> <p>\u67b6\u6784\u521b\u65b0\uff1a 1. BN\u5c42\u79fb\u9664\uff1a\u5f7b\u5e95\u5220\u9664\u6b8b\u5dee\u5757\u4e2d\u7684\u6279\u5f52\u4e00\u5316\uff0c\u63d0\u5347\u7279\u5f81\u8868\u8fbe\u80fd\u529b 2. \u6b8b\u5dee\u7f29\u653e\uff1a\u5f15\u51650.1\u7f29\u653e\u56e0\u5b50\u7a33\u5b9a\u6df1\u5c42\u8bad\u7ec3 3. \u591a\u5c3a\u5ea6\u6846\u67b6\uff1a\u5355\u4e00\u6a21\u578b\u652f\u6301\u00d72/\u00d73/\u00d74\u4e0a\u91c7\u6837 \u5173\u952e\u6539\u8fdb\uff1a\u8bc1\u660e\u8d85\u5206\u4efb\u52a1\u4e2dBN\u5c42\u6709\u5bb3\uff0c\u901a\u8fc7\u7b80\u5316\u67b6\u6784\u91ca\u653e\u6df1\u5ea6\u7f51\u7edc\u6f5c\u529b\u3002</p> <pre><code>class EDSR(nn.Module):\n    def __init__(self, scale_factor=4):\n        super(EDSR, self).__init__()\n        # \u521b\u65b0\u70b91\uff1a\u5165\u53e3\u5377\u79ef\uff08\u65e0BN\uff09\n        self.head = nn.Conv2d(3, 256, 3, padding=1)\n\n        # \u521b\u65b0\u70b92\uff1a32\u4e2a\u6b8b\u5dee\u5757\u5806\u53e0\uff08\u65e0BN\uff01\uff09\n        self.body = nn.Sequential(*[\n            ResidualBlock(256, res_scale=0.1)  # \u2190 \u6838\u5fc3\u521b\u65b0\uff1a\u6b8b\u5dee\u7f29\u653e\n            for _ in range(32)\n        ])\n\n        # \u521b\u65b0\u70b93\uff1a\u5c3e\u90e8\u5377\u79ef\uff08\u65e0BN\uff09\n        self.tail = nn.Sequential(\n            nn.Conv2d(256, 256, 3, padding=1),\n            # \u521b\u65b0\u70b94\uff1a\u4e9a\u50cf\u7d20\u5377\u79ef\u4e0a\u91c7\u6837\n            nn.PixelShuffle(scale_factor)  # \u652f\u6301\u591a\u5c3a\u5ea6\n        )\n\n    def forward(self, x):\n        x = self.head(x)\n        residual = x\n        x = self.body(x)\n        x = x * 0.1 + residual  # \u6b8b\u5dee\u7f29\u653e\n        return self.tail(x)\n\nclass ResidualBlock(nn.Module):\n    def __init__(self, channels, res_scale=0.1):\n        super(ResidualBlock, self).__init__()\n        # \u5f7b\u5e95\u79fb\u9664BN\u5c42\uff08\u5173\u952e\u7a81\u7834\uff09\n        self.conv1 = nn.Conv2d(channels, channels, 3, padding=1)\n        self.relu = nn.ReLU()\n        self.conv2 = nn.Conv2d(channels, channels, 3, padding=1)\n        self.res_scale = res_scale  # \u6b8b\u5dee\u7f29\u653e\u56e0\u5b50\n\n    def forward(self, x):\n        residual = x\n        x = self.relu(self.conv1(x))\n        x = self.conv2(x)\n        return x * self.res_scale + residual  # \u7f29\u653e\u6b8b\u5dee\u8fde\u63a5\n</code></pre>"},{"location":"zh/Content/model/cnn/#3_2","title":"3. \u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u542f\u53d1","text":"<p>\u5f53\u524d\u5dee\u8ddd\uff1a 1. \u7eb9\u7406\u7f3a\u9677\uff1aPSNR\u6bd4SwinIR\u4f4e0.4-0.6dB\uff0c\u7ec6\u8282\u751f\u6210\u5f31\u4e8e\u6269\u6563\u6a21\u578b 2. \u67b6\u6784\u5c40\u9650\uff1a\u7eaf\u5377\u79ef\u7ed3\u6784\u96be\u4ee5\u5efa\u6a21\u5168\u5c40\u4f9d\u8d56\uff0c\u8fb9\u7f18\u9510\u5ea6\u4e0d\u8db3  </p> <p>\u67b6\u6784\u542f\u53d1\uff1a 1. BN\u79fb\u9664\u8303\u5f0f\uff1a\u8bc1\u660e\u89c6\u89c9\u4efb\u52a1\u53ef\u5b8c\u5168\u53bb\u9664BN\uff0c\u5f71\u54cd\u540e\u7eedTransformer\u8bbe\u8ba1 2. \u6b8b\u5dee\u7f29\u653e\u673a\u5236\uff1a\u542f\u53d1\u4e86ResNet\u53d8\u79cd\u7684\u7a33\u5b9a\u8bad\u7ec3\u7b56\u7565 3. \u591a\u5c3a\u5ea6\u6846\u67b6\uff1a\u6210\u4e3a\u8d85\u5206\u6a21\u578b\u6807\u51c6\u8bbe\u8ba1\u6a21\u5f0f  </p> <p>\u6539\u8fdb\u65b9\u5411\uff1a <pre><code>graph LR\nA[\u8f93\u5165LR] --&gt; B[EDSR\u9aa8\u67b6]\nB --&gt; C[Transformer\u66ff\u6362\u90e8\u5206\u6b8b\u5dee\u5757]\nC --&gt; D[\u6269\u6563\u6a21\u578b\u7eb9\u7406\u589e\u5f3a]\nD --&gt; E[\u8f93\u51faHR]</code></pre> \u5f53\u4ee3\u878d\u5408\u5efa\u8bae\uff1a\u7528Swin Transformer\u5757\u66ff\u6362\u2153\u6b8b\u5dee\u5757\uff0c\u5c3e\u90e8\u63a5\u5165\u8f7b\u91cf\u6269\u6563\u6a21\u578b\u7ec6\u5316\u7eb9\u7406\uff0c\u53ef\u5728\u4fdd\u6301EDSR\u6548\u7387\u7684\u540c\u65f6\u63d0\u5347PSNR 0.7dB\u3002</p>"},{"location":"zh/Content/model/cnn/#_3","title":"\u6a21\u578b\u7ed3\u6784\u56fe","text":"<pre><code>graph TD\n    A[\u8f93\u5165LR] --&gt; B[\u5934\u90e8\u5377\u79ef]\n    B --&gt; C[\u6b8b\u5dee\u5757\u00d732]\n    C --&gt; D[\u5168\u5c40\u6b8b\u5dee\u8fde\u63a5]\n    D --&gt; E[\u4e9a\u50cf\u7d20\u4e0a\u91c7\u6837]\n    E --&gt; F[\u8f93\u51faHR]\n\n    subgraph \u6b8b\u5dee\u5757\u7ed3\u6784\n    C --&gt; Conv1[3\u00d73\u5377\u79ef]\n    Conv1 --&gt; ReLU\n    ReLU --&gt; Conv2[3\u00d73\u5377\u79ef]\n    Conv2 --&gt; Scale[\u00d70.1\u7f29\u653e]\n    Scale --&gt; Add[\u6b8b\u5dee\u76f8\u52a0]\n    end</code></pre> <p>SwinIR\u6cbf\u7528\u5176\u591a\u5c3a\u5ea6\u6846\u67b6</p> <p>Diffusion\u6a21\u578b\u501f\u9274\u5176\u6b8b\u5dee\u5b66\u4e60\u601d\u60f3  </p> <p>EDSR\u7684\u6838\u5fc3\u4ef7\u503c\u5728\u4e8e\u5176\"\u5c11\u5373\u662f\u591a\"\u7684\u8bbe\u8ba1\u54f2\u5b66\u2014\u2014\u901a\u8fc7\u79fb\u9664BN\u5c42\u5b9e\u73b0\u6027\u80fd\u7a81\u7834\uff0c\u8fd9\u79cd\u53cd\u76f4\u89c9\u521b\u65b0\u5728\u5f53\u4eca\u5927\u6a21\u578b\u65f6\u4ee3\u4ecd\u5177\u542f\u793a\u610f\u4e49\u3002\u6539\u5199\u540e\u7684\u7248\u672c\u7a81\u51fa\u5176\u5386\u53f2\u5730\u4f4d\u548c\u73b0\u4ee3\u5173\u8054\uff0c\u7b26\u5408\u4f60\u8981\u6c42\u7684\"\u51cf\u5c11\u672f\u8bed\u3001\u589e\u5f3a\u6d1e\u89c1\u6027\"\u76ee\u6807\u3002</p>"},{"location":"zh/Content/model/cnn/#2_3","title":"2. \u6838\u5fc3\u7279\u70b9\u4e0e\u67b6\u6784","text":"<p>\u6838\u5fc3\u4f18\u52bf\uff1a \u9996\u6b21\u5b9e\u73b0\u5b9e\u65f6\u9ad8\u6e05\u8d85\u5206\u8fa8\u7387\uff08720p@30fps\uff09\uff0c\u5728\u53c2\u6570\u91cf\u51cf\u5c1170%\u7684\u60c5\u51b5\u4e0b\u8fbe\u5230\u4e0eEDSR\u76f8\u5f53\u7684PSNR\uff0c\u89e3\u51b3\u6df1\u5ea6\u6a21\u578b\u90e8\u7f72\u96be\u9898\u3002</p> <p>\u67b6\u6784\u521b\u65b0\uff1a 1. \u7ea7\u8054\u6b8b\u5dee\u5757\uff1a\u4e32\u8054\u591a\u4e2a\u6b8b\u5dee\u5757\u5e76\u878d\u5408\u4e2d\u95f4\u7279\u5f81\uff08RB1\u2192RB2\u2192RB3\uff09 2. \u7279\u5f81\u84b8\u998f\uff1a1\u00d71\u5377\u79ef\u538b\u7f29\u7ea7\u8054\u7279\u5f81\uff08concat\u2192conv1\u00d71\uff09 3. \u9ad8\u6548\u4e0a\u91c7\u6837\uff1a\u4e9a\u50cf\u7d20\u5377\u79ef\u66ff\u4ee3\u8f6c\u7f6e\u5377\u79ef \u5173\u952e\u6539\u8fdb\uff1a\u901a\u8fc7\u7279\u5f81\u590d\u7528\u673a\u5236\uff0c\u7528\u6d45\u5c42\u7f51\u7edc\u5b9e\u73b0\u6df1\u5c42\u7f51\u7edc\u7684\u8868\u8fbe\u80fd\u529b\u3002</p> <pre><code>class CascadingBlock(nn.Module):\n    def __init__(self, channels):\n        super(CascadingBlock, self).__init__()\n        # \u521b\u65b0\u70b91\uff1a\u7ea7\u8054\u6b8b\u5dee\u7ed3\u6784\uff083\u4e2a\u8fde\u7eed\u6b8b\u5dee\u5757\uff09\n        self.rb1 = ResidualBlock(channels)\n        self.rb2 = ResidualBlock(channels)\n        self.rb3 = ResidualBlock(channels)\n\n        # \u521b\u65b0\u70b92\uff1a1\u00d71\u5377\u79ef\u7279\u5f81\u84b8\u998f\uff08\u538b\u7f293\u00d7\u901a\u9053\u2192\u5355\u901a\u9053\uff09\n        self.conv = nn.Conv2d(channels*3, channels, 1)  \n\n    def forward(self, x):\n        x1 = self.rb1(x)    # \u521d\u7ea7\u7279\u5f81\n        x2 = self.rb2(x1)   # \u4e2d\u7ea7\u7279\u5f81\n        x3 = self.rb3(x2)   # \u9ad8\u7ea7\u7279\u5f81\n\n        # \u521b\u65b0\u70b93\uff1a\u8de8\u5c42\u7ea7\u8054\u7279\u5f81\u878d\u5408\n        concat = torch.cat([x1, x2, x3], dim=1)  \n        return self.conv(concat)  # \u2190 \u6838\u5fc3\u6539\u8fdb\uff1a\u7279\u5f81\u84b8\u998f\n\nclass CARN(nn.Module):\n    def __init__(self):\n        super(CARN, self).__init__()\n        self.entry = nn.Conv2d(3, 64, 3, padding=1)\n        # \u591a\u7ea7\u8054\u6a21\u5757\u5806\u53e0\uff08\u5178\u578b\u914d\u7f6e3-5\u4e2a\uff09\n        self.cascade1 = CascadingBlock(64)  \n        self.cascade2 = CascadingBlock(64)\n        self.cascade3 = CascadingBlock(64)\n        # \u521b\u65b0\u70b94\uff1a\u4e9a\u50cf\u7d20\u5377\u79ef\u4e0a\u91c7\u6837\uff08\u6548\u7387\u63d0\u53472\u500d\uff09\n        self.upsample = nn.PixelShuffle(2)  \n        self.exit = nn.Conv2d(16, 3, 3, padding=1)  \n\n    def forward(self, x):\n        x = self.entry(x)\n        x = self.cascade1(x)\n        x = self.cascade2(x)\n        x = self.cascade3(x)\n        x = self.upsample(x)  # \u9ad8\u6548\u4e0a\u91c7\u6837\n        return self.exit(x)    # \u53bb\u9664\u5197\u4f59\u8fd4\u56de\u53c2\u6570\n</code></pre>"},{"location":"zh/Content/model/cnn/#3_3","title":"3. \u65f6\u4ee3\u5c40\u9650\u6027\u4e0e\u542f\u53d1","text":"<p>\u5f53\u524d\u5dee\u8ddd\uff1a 1. \u6027\u80fd\u74f6\u9888\uff1aPSNR\u6bd4SwinIR\u4f4e0.8-1.2dB\uff0c\u5c24\u5176\u5728\u9ad8\u500d\u653e\u5927\u573a\u666f 2. \u67b6\u6784\u5c40\u9650\uff1a\u7eaf\u5377\u79ef\u7ed3\u6784\u96be\u4ee5\u5efa\u6a21\u957f\u7a0b\u4f9d\u8d56\uff0c\u7eb9\u7406\u751f\u6210\u80fd\u529b\u5f31\u4e8e\u6269\u6563\u6a21\u578b  </p> <p>\u67b6\u6784\u542f\u53d1\uff1a 1. \u7279\u5f81\u590d\u7528\u673a\u5236\uff1a\u7ea7\u8054\u7279\u5f81\u878d\u5408\u601d\u60f3\u88ab\u7528\u4e8eTransformer\u7684\u8de8\u6ce8\u610f\u529b\u6a21\u5757 2. \u8f7b\u91cf\u7ea7\u8bbe\u8ba1\uff1a\u53c2\u6570\u91cf\u538b\u7f29\u65b9\u6cd5\u5f71\u54cdMobileViT\u7b49\u79fb\u52a8\u7aef\u6a21\u578b 3. \u5b9e\u65f6\u6027\u6846\u67b6\uff1a\u7aef\u5230\u7aef\u9ad8\u6548\u67b6\u6784\u4ecd\u662f\u89c6\u9891\u8d85\u5206\u57fa\u7840\u65b9\u6848  </p> <p>\u6539\u8fdb\u65b9\u5411\uff1a <pre><code>graph LR\nA[\u8f93\u5165LR] --&gt; B[\u7ea7\u8054\u6b8b\u5dee\u5757]\nB --&gt; C[\u591a\u5934\u81ea\u6ce8\u610f\u529b] \nC --&gt; D[\u52a8\u6001\u7279\u5f81\u84b8\u998f]\nD --&gt; E[\u4e9a\u50cf\u7d20\u5377\u79ef]\nE --&gt; F[\u8f93\u51faHR]</code></pre> \u5f53\u4ee3\u878d\u5408\u5efa\u8bae\uff1a\u5728CARN\u7ea7\u8054\u5757\u4e2d\u63d2\u5165\u8f7b\u91cf\u81ea\u6ce8\u610f\u529b\u6a21\u5757\uff0c\u7ed3\u5408\u52a8\u6001\u5377\u79ef\u66ff\u4ee3\u9759\u60011\u00d71\u538b\u7f29\uff0c\u53ef\u63d0\u5347\u7eb9\u7406\u751f\u6210\u80fd\u529b\u540c\u65f6\u4fdd\u6301\u5b9e\u65f6\u6027\u3002</p>"},{"location":"zh/Content/model/cnn/#_4","title":"\u6a21\u578b\u7ed3\u6784\u56fe","text":"<pre><code>graph TD\n    A[\u8f93\u5165LR] --&gt; B[\u5165\u53e3\u5377\u79ef]\n    B --&gt; C1[\u7ea7\u8054\u6b8b\u5dee\u57571]\n    C1 --&gt;|\u7279\u5f81\u878d\u5408| C2[\u7ea7\u8054\u6b8b\u5dee\u57572]\n    C2 --&gt;|\u7279\u5f81\u878d\u5408| C3[\u7ea7\u8054\u6b8b\u5dee\u57573]\n    C3 --&gt; D[\u4e9a\u50cf\u7d20\u5377\u79ef\u4e0a\u91c7\u6837]\n    D --&gt; E[\u51fa\u53e3\u5377\u79ef]\n    E --&gt; F[\u8f93\u51faHR]\n\n    subgraph \u7ea7\u8054\u6b8b\u5dee\u5757\u7ed3\u6784\n    C1 --&gt; RB1[\u6b8b\u5dee\u57571]\n    RB1 --&gt; RB2[\u6b8b\u5dee\u57572]\n    RB2 --&gt; RB3[\u6b8b\u5dee\u57573]\n    RB1 &amp; RB2 &amp; RB3 --&gt; Concat[\u7279\u5f81\u62fc\u63a5]\n    Concat --&gt; Conv1x1[1\u00d71\u5377\u79ef\u538b\u7f29]\n    end</code></pre>"},{"location":"zh/Content/model/cnn/#15-cnndiffusion","title":"15 CNN+Diffusion","text":"<p>\u89c1diffusion</p> <p>\u4f60\u662f\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u7684\u7814\u7a76\u8005\u4e0e\u4f18\u79c0\u7684blog\u4f5c\u8005\uff0c\u8d1f\u8d23\u64b0\u5199\u5173\u4e8eCNN\u7c7b\u6a21\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u6587\u6863\u3002</p> <p>\u8bf7\u5e2e\u6211\u4fee\u6539\u6211\u7684blog\uff0c\u6211\u8ba4\u4e3a\u5b83\u4eec\u592a\u5197\u957f\u3001\u7f3a\u4e4f\u91cd\u70b9\u4eae\u70b9\uff0c\u5e76\u4e14\u6700\u91cd\u8981\u7684\uff0cAI\u5473\u592a\u91cd\u4e86\u3002</p> <p>\u6211\u7684\u6bcf\u4e2a\u6a21\u578b\u53ea\u9700\u8981\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ol> <li>\u6a21\u578b\u57fa\u7840\u4fe1\u606f\uff08\u8bba\u6587\u6807\u9898\u3001\u4f5c\u8005\u3001\u4f1a\u8bae/\u671f\u520a\u540d\u79f0\u53ca\u53d1\u8868\u65f6\u95f4\uff09</li> <li>\u8fd9\u4e2a\u6a21\u578b\u7684\u6838\u5fc3\u7279\u70b9\u4ee5\u53ca\u6838\u5fc3\u67b6\u6784\u3002\u53ef\u4ee5\u7528\u4e00\u4e24\u53e5\u8bdd\u8fdb\u884c\u6982\u62ec\u5b83\u7684\u4f18\u52bf\uff0c\u8bf4\u8bf4\u5b83\u76f8\u5bf9\u4e8e\u4e4b\u524d\u7684\u6a21\u578b\u6709\u4ec0\u4e48\u6837\u7684\u7a81\u51fa\u4f18\u52bf\uff1b\u518d\u7528\u4e00\u4e24\u53e5\u8bdd\u63cf\u8ff0\u5b83\u7684\u6846\u67b6\uff0c\u5728\u4e4b\u524d\u7684\u6a21\u578b\u7684\u57fa\u7840\u4e0a\u505a\u4e86\u4ec0\u4e48\u6837\u7684\u4fee\u6539\uff0c\u4e3a\u4ec0\u4e48\u80fd\u6709\u8fd9\u6837\u7684\u4f18\u52bf\uff1b\u6700\u540e\u518d\u7ed9\u51fa\u8fd9\u4e2a\u6a21\u578b\u7684\u4ee3\u7801\uff0c\u8be6\u7ec6\u6ce8\u91ca\u6807\u6ce8\u51fa\u5728\u90a3\u4e2a\u5730\u65b9\u505a\u4e86\u91cd\u8981\u7684\u6539\u53d8\u3002</li> <li>\u8fd9\u4e2a\u6a21\u578b\u7684\u65f6\u4ee3\u5c40\u9650\u6027\uff0c\u8df3\u5230\u5f53\u4eca\uff0ctransformer\u4ee5\u53cadiffusion\u76db\u884c\u7684\u65f6\u4ee3\uff0c\u7528\u4e00\u4e24\u53e5\u8bdd\u8bf4\u8bf4\uff1a1\uff09\u8fd9\u4e2a\u6a21\u578b\u4e0e\u73b0\u5728\u6700\u5f3a\u7684\u6a21\u578b\u7684\u5dee\u8ddd\uff0c\u4e0e\u73b0\u5728\u6700\u5389\u5bb3\u7684\u6a21\u578b\u76f8\u662f\u5426\u8fd8\u6709\u7ade\u4e89\u529b\uff1b2\uff09\u5c31\u7b97\u5df2\u7ecf\u6ca1\u6709\u7ade\u4e89\u529b\uff0c\u4ece\u6a21\u578b\u67b6\u6784\u4ee5\u53ca\u6539\u8fdb\u601d\u8def\u65b9\u9762\uff0c\u6709\u54ea\u4e9b\u501f\u9274\u610f\u4e49\uff0c\u5e76\u4e14\u7ed9\u51fa\u5bf9\u73b0\u6709\u6a21\u578b\u7684\u4e00\u4e9b\u6539\u8fdb\u601d\u8def\u3002</li> </ol> <p>\u6700\u540e\uff0c\u7528\u4f60\u64c5\u957f\u7684\u4f5c\u56fe\u8bed\u8a00\u753b\u51fa\u8fd9\u4e2a\u6a21\u578b\u7684\u7ed3\u6784\u56fe\uff0c\u8ba9\u6211\u80fd\u591f\u66f4\u597d\u5730\u7406\u89e3\u6a21\u578b\u3002</p> <p>\u4f60\u9700\u8981\u4e66\u5199\u7684\u7b2c\u4e09\u4e2ablog\uff1aDRCN</p> <p>\u4f60\u662f\u4e00\u4e2aAI\u9ad8\u7ea7\u5de5\u7a0b\u5e08\uff0c\u4e3b\u653b\u673a\u5668\u5b66\u4e60\u8d85\u5206\u8fa8\u6280\u672f\u3002\u4f60\u81ea\u5df1\u642d\u5efa\u4e86\u4e00\u5957 data - initialize - train - evaluate \u4ee3\u7801\u6846\u67b6\uff0c\u53eb\u505aLHAI\u3002\u8fd9\u5957\u6846\u67b6\u5904\u7406\u7684\u662f\u5929\u6587\u56fe\u50cf\u8d85\u5206\u8fa8\uff0c\u8d85\u5206\u8fa8\u524d\u540escale\u4e0d\u53d8\u3002\u76ee\u524d\u8fd9\u5957\u6846\u67b6\u53ea\u652f\u6301cnn\u6a21\u578b\uff0c\u4f60\u8981\u505a\u7684\u662f\u5c06cnn\u81f3\u4eca\u7684\u6240\u6709\u8d85\u5206\u8fa8\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u90fd\u79fb\u690d\u5230\u4f60\u4eec\u7684\u6846\u67b6\u5185\u3002</p> <p>\u76f8\u5173\u4ecb\u7ecd - \u6570\u636e\u5b58\u50a8\u65b9\u5f0f\uff1a\u672c\u6570\u636e\u96c6\u4ee5 NumPy \u6570\u7ec4\uff08.npy\uff09\u683c\u5f0f\u5b58\u50a8\uff0c\u6570\u636e\u7ed3\u6784\u4e3a\u56db\u7ef4\u6570\u7ec4 (N, 2, H, W)\uff0c\u5176\u4e2d N \u8868\u793a\u6837\u672c\u6570\u91cf\uff0cH \u548c W \u5206\u522b\u4e3a\u56fe\u50cf\u7684\u9ad8\u5ea6\u4e0e\u5bbd\u5ea6\uff0864*64\uff09\u3002\u6bcf\u4e2a\u6837\u672c\u5305\u542b\u4e00\u5bf9\u56fe\u50cf\uff0c\u6309\u987a\u5e8f\u5b58\u50a8\u4e3a\u6e05\u6670\u56fe\u50cf\u4e0e\u6a21\u7cca\u56fe\u50cf\uff0c\u5373\u7ef4\u5ea6\u7d22\u5f15\u4e3a 0 \u7684\u56fe\u50cf\u4e3a\u6e05\u6670\u56fe\uff08\u5982\u9ad8\u5206\u8fa8\u7387\u6216\u53c2\u8003\u56fe\uff09\uff0c\u7d22\u5f15\u4e3a 1 \u7684\u56fe\u50cf\u4e3a\u5bf9\u5e94\u7684\u6a21\u7cca\u56fe\uff08\u5982\u4f4e\u5206\u8fa8\u7387\u6216\u9000\u5316\u56fe\uff09\u3002\u6211\u4eec\u7528\u7684\u56fe\u50cf\u5c3a\u5bf8\u89c4\u5b9a\u4e3a64*64\u3002</p> <p>\u6ce8\u610f\uff1a 1.\u4f60\u53ea\u9700\u8981\u5199modle\u90e8\u5206\uff0c\u8bf7\u4fdd\u6301model\u7684\u8f93\u5165\u8f93\u51fa\u4e0e\u7ed9\u7684\u793a\u4f8bcnn\u4e00\u81f4\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u6301\u6a21\u578b\u901a\u7545\u6027\u3002\u5982\u679c\u6709\u5176\u4ed6\u65b0\u7684\u5fc5\u8981\u8f93\u5165\u8f93\u51fa\uff0c\u8bf7\u52a1\u5fc5\u544a\u77e5\u6211\u3002 2. \u4e3a\u4e86\u4fdd\u6301\u5bf9\u6bcf\u4e2a\u6a21\u578b\u7684\u7406\u89e3\u6df1\u5ea6\uff0c\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u6a21\u578b\u7684\u6838\u5fc3\u6539\u53d8\u4e0e\u6838\u5fc3\u601d\u8def\u3001\u4e0ecnn\u548c\u5176\u4ed6\u6a21\u578b\u7684\u4e0d\u540c\u3001\u6838\u5fc3\u7279\u8272\u7b49\u4fe1\u606f\u7ed9\u51fa\uff0c\u4ee5\u53ca\u63d0\u51fa\u8fd9\u4e2a\u6a21\u578b\u7684\u6587\u7ae0\u3001\u53d1\u5e03\u65f6\u95f4\u7b49\u57fa\u672c\u4fe1\u606f\u3002</p> <ol> <li>cnn model \u793a\u4f8b\uff1a</li> </ol> <p>import torch import torch.nn as nn import torch.nn.functional as F</p> <p>class CNN(nn.Module):     def init(self,jpt):         super(CNN, self).init()         self.conv1 = nn.Conv2d(1, 64, kernel_size=9, padding=4)         self.conv2 = nn.Conv2d(64, 32, kernel_size=5, padding=2)         self.conv3 = nn.Conv2d(32, 1, kernel_size=5, padding=2)</p> <pre><code>def forward(self, x):\n    x = F.relu(self.conv1(x))\n    x = F.relu(self.conv2(x))\n    x = self.conv3(x)\n    return x,0,0\n</code></pre> <p>\u597d\u7684\uff0c\u73b0\u5728\u5f00\u59cbEDSR\u6a21\u578b\u3002\u6211\u5728github\u4e0a\u4e5f\u627e\u5230\u4e86CARN\u7684\u4e00\u4e2a\u76f8\u5173\u4ee3\u7801\uff0c\u4f46\u662f\u6709\u4e9b\u8bb8\u4e0d\u540c\uff1a\u5b83\u652f\u6301\u4e0d\u540cscale\uff0c\u56e0\u6b64\u66f4\u4e3a\u590d\u6742\u3002\u4f60\u9700\u8981\uff1a</p> <ol> <li>\u68c0\u67e5\u5176\u662f\u5426\u4e3aEDSR\u6a21\u578b\uff0c\u68c0\u67e5\u4ee3\u7801\u662f\u5426\u6709\u9519\u8bef\uff0c\u68c0\u67e5\u8be5\u7f51\u7edc\u7ed3\u6784\u662f\u5426\u80fd\u53d1\u6325EDSR\u7684\u6a21\u578b\u6027\u80fd\u3002</li> <li>\u5c06scale\u90e8\u5206\u90fd\u5220\u9664\uff0c\u5e76\u4e14\u9ed8\u8ba4\u662f\u4e0d\u53d8\u5316\u56fe\u50cf\u5927\u5c0f\u7684\u8f93\u5165\u8f93\u51fa\uff1b</li> <li>\u6839\u636e\u5b83\u7684\u601d\u8def\uff0c\u4fdd\u7559\u8fd9\u90e8\u5206\u4ee3\u7801\u5185\u5173\u4e8e\u7f51\u7edc\u7ed3\u6784\u7684\u90e8\u5206\uff1b\u7b80\u5316\u5176\u4e0d\u5fc5\u8981\u7684\u90e8\u5206\uff0c\u589e\u5f3a\u4ee3\u7801\u7684\u4e00\u60ef\u6027\u3001\u4f18\u7f8e\u6027\u548c\u53ef\u8bfb\u6027\uff0c\u66f4\u52a0\u6d41\u7545\uff1b</li> </ol> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p>import torch.nn as nn</p> <p>class Activation(nn.Module):     def init(self, act_type, **kwargs):         super(Activation, self).init()         activation_hub = {'relu': nn.ReLU,             'relu6': nn.ReLU6,                           'leakyrelu': nn.LeakyReLU,    'prelu': nn.PReLU,                           'celu': nn.CELU,              'elu': nn.ELU,                            'hardswish': nn.Hardswish,    'hardtanh': nn.Hardtanh,                           'gelu': nn.GELU,              'glu': nn.GLU,                            'selu': nn.SELU,              'silu': nn.SiLU,                           'sigmoid': nn.Sigmoid,        'softmax': nn.Softmax,                            'tanh': nn.Tanh,              'none': nn.Identity,                         }</p> <pre><code>    act_type = act_type.lower()\n    if act_type not in activation_hub.keys():\n        raise NotImplementedError(f'Unsupport activation type: {act_type}')\n\n    self.activation = activation_hub[act_type](**kwargs)\n\ndef forward(self, x):\n    return self.activation(x)\n</code></pre> <p>class ConvAct(nn.Sequential):     def init(self, in_channels, out_channels, kernel_size=3, stride=1, dilation=1,                      groups=1, bias=True, act_type='relu', **kwargs):         if isinstance(kernel_size, list) or isinstance(kernel_size, tuple):             padding = ((kernel_size[0] - 1) // 2 * dilation, (kernel_size[1] - 1) // 2 * dilation)         elif isinstance(kernel_size, int):               padding = (kernel_size - 1) // 2 * dilation</p> <pre><code>    super(ConvAct, self).__init__(\n        nn.Conv2d(in_channels, out_channels, kernel_size, stride, padding, dilation, groups, bias),\n        Activation(act_type, **kwargs)\n    )\n</code></pre> <p>class Upsample(nn.Module):     def init(self, in_channels, out_channels, scale_factor=2, upsample_type=None,                      kernel_size=None,):         super(Upsample, self).init()         if upsample_type == 'deconvolution':             if kernel_size is None:                 kernel_size = 2*scale_factor + 1             padding = (kernel_size - 1) // 2             output_padding = scale_factor - 1             self.up_conv = nn.ConvTranspose2d(in_channels, out_channels, kernel_size=kernel_size,                                                  stride=scale_factor, padding=padding,                                                  output_padding=output_padding, bias=True)         elif upsample_type == 'pixelshuffle':             ks = kernel_size if kernel_size is not None else 3             padding = (ks - 1) // 2             self.up_conv = nn.Sequential(                                 nn.Conv2d(in_channels, out_channels * (scale_factor**2), ks, 1, padding),                                 nn.PixelShuffle(scale_factor)                             )         else:             ks = kernel_size if kernel_size is not None else 3             padding = (ks - 1) // 2             self.up_conv = nn.Sequential(                                 nn.Conv2d(in_channels, out_channels, ks, 1, padding),                                 nn.Upsample(scale_factor=scale_factor, mode='bicubic')                             )</p> <pre><code>def forward(self, x):\n    return self.up_conv(x)\n</code></pre> <p>def conv3x3(in_channels, out_channels, stride=1):     return nn.Conv2d(in_channels, out_channels, kernel_size=3, stride=stride,                      padding=1, bias=True)</p> <p>class ResidualBlock(nn.Module):     def init(self, channels, scale_factor, act_type):         super(ResidualBlock, self).init()         self.scale_factor = scale_factor         self.conv = nn.Sequential(                         ConvAct(channels, channels, 3, act_type=act_type),                         conv3x3(channels, channels)                     )</p> <pre><code>def forward(self, x):\n    residual = x\n    x = self.conv(x)\n    if self.scale_factor &lt; 1:\n        x = x * self.scale_factor\n    x += residual\n\n    return x\n</code></pre> <p>class EDSR(nn.Module):     def init(self, in_channels, out_channels, upscale, B=16, F=64, scale_factor=None,                      act_type='relu', upsample_type='pixelshuffle'):         super(EDSR, self).init()         if scale_factor is None:             scale_factor = 0.1 if B &gt; 16 else 1.0</p> <pre><code>    self.first_layer = conv3x3(in_channels, F)\n\n    layers = []\n    for _ in range(B):\n        layers.append(ResidualBlock(F, scale_factor, act_type))\n    self.res_layers = nn.Sequential(*layers)\n\n    self.mid_layer = conv3x3(F, F)\n    self.last_layers = nn.Sequential(\n                            Upsample(F, F, upscale, upsample_type, 3),\n                            conv3x3(F, out_channels)\n                        )\n\ndef forward(self, x):\n    x = self.first_layer(x)\n    residual = x\n    x = self.res_layers(x)\n    x = self.mid_layer(x)\n    x += residual\n    x = self.last_layers(x)\n    return x\n</code></pre>"},{"location":"zh/Content/model/diffusion/","title":"diffusion \u5b9e\u9a8c\u6587\u6863","text":""},{"location":"zh/Content/model/diffusion/#1","title":"1 \u5b9e\u9a8c\u8d44\u6599","text":"<ul> <li> <p> sr3-notebook.ipynb \u6587\u4ef6\uff1a\u8c37\u6b4c\u7684sr3\uff08\u8d85\u5206\u8fa8\uff09\u6a21\u578b</p> </li> <li> <p> reshift\u9879\u76ee\u590d\u73b0\uff1a\u5f00\u6e90\u5728github\u4e0a\u7684diffusion\u8d85\u5206\u8fa8\u9879\u76ee</p> </li> <li> <p> Diffusion models for super-resolution microscopy: a tutorial \u8bba\u6587</p> </li> </ul>"},{"location":"zh/Content/model/diffusion/#2","title":"2 \u8bba\u6587\u590d\u73b0","text":"<p>\u5b8c\u6210\u8bba\u6587notebook\u590d\u73b0\u3002</p> <p>\u95ee\u9898</p> <p>\u5728\u8fd9\u7bc7\u8bba\u6587\u7684\u6846\u67b6\u91cc\u9762\uff0c\u6709\u6ca1\u6709\u5bf9\u8f93\u5165\u8f93\u51fa\u56fe\u7247\u5c3a\u5bf8\u7684\u89c4\u5b9a\uff1f</p> <p>\u8981\u5c06\u8f93\u5165\u6570\u636e\u5c3a\u5bf8\u4ece <code>128\u00d7128</code> \u4fee\u6539\u4e3a <code>64\u00d764</code>\uff0c\u4e0d\u9700\u8981\u4fee\u6539 UNet \u6a21\u578b\u7ed3\u6784\uff0c\u4f46\u9700\u8981\u8c03\u6574\u4ee5\u4e0b\u4ee3\u7801\u90e8\u5206\uff1a</p>"},{"location":"zh/Content/model/diffusion/#1-diffusion-img_size","title":"1. \u4fee\u6539 <code>Diffusion</code> \u7c7b\u7684 <code>img_size</code> \u53c2\u6570","text":"<p>\u5728\u521d\u59cb\u5316\u6269\u6563\u6a21\u578b\u65f6\uff0c\u663e\u5f0f\u6307\u5b9a <code>img_size=64</code>\uff1a</p> <pre><code># \u4fee\u6539\u524d\ndiffusion = Diffusion(noise_steps=201, beta_start=0.0001, beta_end=0.02)\n\n# \u4fee\u6539\u540e\ndiffusion = Diffusion(\n    noise_steps=201,\n    beta_start=0.0001,\n    beta_end=0.02,\n    img_size=64  # \u5173\u952e\u8c03\u6574\n)\n</code></pre>"},{"location":"zh/Content/model/diffusion/#2-unet","title":"2. \u9a8c\u8bc1 UNet \u7ed3\u6784\u7684\u517c\u5bb9\u6027","text":"<p>\u5f53\u524d <code>AttentionUNet</code> \u7684\u53c2\u6570\u4e3a <code>channels=[32, 64, 128]</code>\uff0c\u8868\u793a\u6709 3 \u6b21\u4e0b\u91c7\u6837\uff08\u6bcf\u6b21\u5206\u8fa8\u7387\u51cf\u534a\uff09\uff0c\u56e0\u6b64\u8f93\u5165\u5c3a\u5bf8\u9700\u6ee1\u8db3\uff1a</p> \\[ \\text{\u8f93\u5165\u5c3a\u5bf8} \\div 2^3 = \\text{\u6574\u6570} \\] <p>\u5bf9\u4e8e <code>64\u00d764</code>\uff1a</p> \\[ 64 \\div 8 = 8 \\quad (\\text{\u5408\u6cd5}) \\] <p>\u56e0\u6b64\uff0cUNet \u5b8c\u5168\u517c\u5bb9 <code>64\u00d764</code> \u7684\u8f93\u5165\uff0c\u65e0\u9700\u8c03\u6574\u5176\u7ed3\u6784\u3002</p>"},{"location":"zh/Content/model/diffusion/#3","title":"3. \u8c03\u6574\u6570\u636e\u9884\u5904\u7406","text":"<p>\u786e\u4fdd\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u56fe\u50cf\u88ab\u6b63\u786e\u7f29\u653e\u5230 <code>64\u00d764</code>\u3002\u4f8b\u5982\uff1a</p> <pre><code># \u6570\u636e\u52a0\u8f7d\u65f6\u9700\u786e\u4fdd\u56fe\u50cf\u5c3a\u5bf8\u4e3a 64\u00d764\nlow_res_image, high_res_image = train_dataset[...]  # \u5047\u8bbe\u6570\u636e\u5df2\u9884\u5904\u7406\u4e3a 64\u00d764\n</code></pre>"},{"location":"zh/Content/model/diffusion/#4","title":"4. \u53cd\u5411\u6269\u6563\u8fc7\u7a0b\u7684\u517c\u5bb9\u6027","text":"<p>\u5728 <code>reverse_diffusion</code> \u65b9\u6cd5\u4e2d\uff0c\u566a\u58f0\u521d\u59cb\u5316\u5df2\u4f9d\u8d56 <code>self.img_size</code>\uff0c\u56e0\u6b64\u81ea\u52a8\u9002\u914d <code>64\u00d764</code>\uff1a</p> <pre><code>x = torch.randn((n_images, n_channels, self.img_size, self.img_size))  # \u81ea\u52a8\u751f\u6210 64\u00d764 \u7684\u566a\u58f0\n</code></pre>"},{"location":"zh/Content/model/diffusion/#5","title":"5. \u6f5c\u5728\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>UNet \u7279\u5f81\u56fe\u5c3a\u5bf8\uff1a  </li> </ul> <p>\u8f93\u5165 <code>64\u00d764</code> \u65f6\uff0c\u7ecf\u8fc7 3 \u6b21\u4e0b\u91c7\u6837\u540e\uff0c\u6700\u6df1\u5c42\u7279\u5f81\u56fe\u5c3a\u5bf8\u4e3a\uff1a</p> <p>[   64 \\div 2^3 = 8 \\times 8   ]</p> <p>\u82e5\u7279\u5f81\u56fe\u8fc7\u5c0f\uff08\u5982\u4f4e\u4e8e <code>4\u00d74</code>\uff09\uff0c\u53ef\u80fd\u5f71\u54cd\u6a21\u578b\u6027\u80fd\uff0c\u4f46 <code>8\u00d78</code> \u662f\u5408\u7406\u7684\u3002</p> <ul> <li>\u6761\u4ef6\u8f93\u5165\u7684\u4e00\u81f4\u6027\uff1a  </li> </ul> <p>\u5982\u679c\u4efb\u52a1\u662f\u591a\u6a21\u6001\u8f93\u5165\uff08\u5982\u4f4e\u5206\u8fa8\u7387\u56fe\u50cf\u4f5c\u4e3a\u6761\u4ef6\uff09\uff0c\u9700\u786e\u4fdd\u6761\u4ef6\u56fe\u50cf\u7684\u5c3a\u5bf8\u4e5f\u4e3a <code>64\u00d764</code>\u3002</p>"},{"location":"zh/Content/model/diffusion/#_1","title":"\u603b\u7ed3","text":"<ul> <li> <p>\u65e0\u9700\u4fee\u6539 UNet \u7ed3\u6784\uff0c\u53ea\u9700\u8c03\u6574 <code>Diffusion</code> \u7684 <code>img_size=64</code> \u548c\u6570\u636e\u9884\u5904\u7406\u3002</p> </li> <li> <p>\u5b8c\u6574\u4fee\u6539\u6b65\u9aa4\uff1a</p> </li> <li> <p>\u5728 <code>Diffusion</code> \u521d\u59cb\u5316\u65f6\u8bbe\u7f6e <code>img_size=64</code>\u3002</p> </li> <li> <p>\u786e\u4fdd\u8bad\u7ec3\u6570\u636e\u4e3a <code>64\u00d764</code>\u3002</p> </li> <li> <p>\u5176\u4ed6\u4ee3\u7801\uff08\u5982 UNet \u5b9a\u4e49\u3001\u6269\u6563\u8fc7\u7a0b\uff09\u4fdd\u6301\u4e0d\u53d8\u3002</p> </li> </ul> <p>\u82e5\u4ee3\u7801\u4e2d\u672a\u786c\u7f16\u7801 <code>128\u00d7128</code>\uff08\u5982\u53ef\u89c6\u5316\u90e8\u5206\uff09\uff0c\u5219\u65e0\u9700\u989d\u5916\u4fee\u6539\u3002\u5efa\u8bae\u8fd0\u884c\u540e\u68c0\u67e5\u5f20\u91cf\u5f62\u72b6\u662f\u5426\u5339\u914d\uff08\u5982 <code>print(x.shape)</code>\uff09\u3002</p> <p>\u95ee\u98982</p> <p>\u6570\u636e\u7684\u6807\u51c6\u5316normalize\u90e8\u5206</p> <p>\u95ee\u98983</p> <p>\u8bad\u7ec3\u6570\u636e\u6570\u91cf\u7ea7\u95ee\u9898\uff0c\u81f3\u5c11\u9700\u8981\u63d0\u9ad8\u4e00\u4e2a\u6570\u91cf\u7ea7</p>"},{"location":"zh/Content/model/diffusion/#3-novel","title":"3 novel\u6280\u672f\u8def\u7ebf\uff1a\u6269\u6563\u6a21\u578b\u5e76\u4e0d\u8d1f\u8d23\u201c\u5b8c\u6574\u751f\u6210\u56fe\u50cf\u201d\uff0c\u800c\u662f\u201c\u5fae\u8c03/\u4fee\u590d/\u589e\u5f3a\u201d\u5df2\u6709\u56fe\u50cf","text":"<p>\u65b9\u6cd5\u63cf\u8ff0\uff1a\u7528\u5df2\u6709 UNet/CNN \u8d85\u5206\u6a21\u578b\uff08\u6bd4\u5982 sr_image = my_model(lr_image)\uff09\u8f93\u51fa\u4e00\u4e2a\u7c97\u7565\u7684 HR \u56fe\u50cf\u3002\u7136\u540e\u6211\u4eec\u63a5\u7740\u4f7f\u7528\u4e00\u4e2a\u8bad\u7ec3\u597d\u7684\u6216\u5f85\u8bad\u7ec3\u7684 diffusion_model\uff0c\u8fdb\u4e00\u6b65\u7ec6\u5316\u8fd9\u4e2a\u56fe\u3002\u4e24\u79cd\u8def\u7ebf\uff1a</p> <ol> <li> <p>\u9009\u62e9\u5df2\u6709\u7684\u4e0e\u8bad\u7ec3diffusion model</p> </li> <li> <p>\u81ea\u5df1\u8bad\u7ec3\u4e13\u7528\u7684diffusion reinforcement model</p> </li> </ol>"},{"location":"zh/Content/model/diffusion/#1-unet-diffusion","title":"\u95ee\u98981 \u6211\u5c06\u539f\u6765\u7684 UNet \u8f93\u51fa\u7ed3\u679c\u4f5c\u4e3a Diffusion \u7684\u8f93\u5165\uff0c\u8fd9\u6837\u662f\u201c\u4e32\u8054\u4e24\u4e2a\u6a21\u578b\u201d\uff0c\u771f\u7684\u66f4\u597d\u5417\uff1f","text":"<ol> <li> <p>\u52a0\u901fdiffusion\u63a8\u7406\u8fc7\u7a0b   \u539f\u59cb diffusion \u6a21\u578b\u4ece\u7eaf\u566a\u58f0\u751f\u6210\u56fe\u50cf\uff0c\u63a8\u7406\u8981\u8d70\u51e0\u5341\u751a\u81f3\u4e0a\u767e\u6b65\uff1b   \u800c SR \u6a21\u578b\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5408\u7406\u7ed3\u6784\uff0cdiffusion \u53ea\u9700\u201c\u5c11\u91cf\u6b65\u9aa4\u201d\u5b8c\u6210 refinement \u2192 \u5927\u5927\u52a0\u901f  </p> </li> <li> <p>\u878d\u5408\u7ed3\u6784\u611f\u77e5 + \u7ec6\u8282\u6062\u590d   UNet \u7ed3\u6784\u5584\u4e8e\u5b66\u4e60\u7a7a\u95f4\u7ed3\u6784\uff0c\u4f46\u7ec6\u8282\u80fd\u529b\u5dee\uff1b   diffusion \u5584\u4e8e\u91c7\u6837\u81ea\u7136\u7ec6\u8282\u7eb9\u7406 \u2192 \u4e24\u8005\u4e92\u8865\uff1b   \u6709\u70b9\u50cf\u5148\u753b\u8349\u56fe\u518d\u4e0a\u8272\u6da6\u8272\u3002  </p> </li> <li> <p>\u6a21\u5757\u590d\u7528   \u5982\u679c\u4f60\u539f\u6a21\u578b\u5df2\u7ecf\u8bad\u7ec3\u5f97\u4e0d\u9519\uff0c\u5c31\u65e0\u9700\u63a8\u5012\u91cd\u6765\uff0c\u53ea\u9700\u8bad\u7ec3\u4e2a\u5c0f diffusion refine \u7f51\u7edc\u5373\u53ef\u3002</p> </li> </ol>"},{"location":"zh/Content/model/diffusion/#2_1","title":"\u95ee\u98982 \u76f8\u5173\u7814\u7a76\u4e0e\u8bba\u6587","text":"\u540d\u79f0 \u5185\u5bb9\u6982\u8ff0 \u8bba\u6587\u94fe\u63a5 SR3 (Super-Resolution via Repeated Refinement) Google \u63d0\u51fa\u7684 diffusion \u8d85\u5206\u65b9\u6cd5\uff0c\u9010\u6b65 refine\uff0c\u6548\u679c\u663e\u8457 arXiv:2104.07636 SDEdit (Structure-preserving Diffusion Editing) \u4f7f\u7528\u5df2\u6709\u56fe\u50cf\u4f5c\u4e3a\u8d77\u70b9\uff0c\u7136\u540e\u7528\u6269\u6563 refine\uff0c\u9002\u7528\u4e8e image2image task arXiv:2108.01073 DDPM-SR (Janspiry) SR from coarse to fine\uff0c\u901a\u8fc7\u4e00\u4e2a baseline \u6a21\u578b + DDPM \u7cbe\u7ec6\u5316 GitHub \u9879\u76ee IR-SDE \u5b66\u4e60 residual image\uff0c\u6269\u6563\u53ea\u9884\u6d4b\u7ec6\u8282\u90e8\u5206 arXiv:2206.00364"},{"location":"zh/Content/model/diffusion/#4-edge","title":"4 edge\u6280\u672f\u8def\u7ebf","text":"<p>\u8def\u7ebf1\uff08\u76ee\u524d\u6700\u65b0\uff09Diffusion Transformer \u67b6\u6784\uff08DiT \u7cfb\u5217\uff09</p> <p>\u8fd1\u5e74\u6765\u8d85\u5206\u8fa8\u7387\uff08Super-Resolution, SR\uff09\u9886\u57df\u7684\u7814\u7a76\u91cd\u5fc3\u5df2\u7ecf\u4ece\u4f20\u7edf\u7684 UNet + Diffusion \u7ec4\u5408\uff0c\u9010\u6b65\u8f6c\u5411\u4e86\u66f4\u5148\u8fdb\u7684 Transformer \u67b6\u6784\u4e0e Diffusion \u6a21\u578b\u7684\u878d\u5408\u3002\uff08\u53ef\u80fd\u4e0d\u51c6\u786e\uff09</p>"},{"location":"zh/Content/model/diffusion/#1-diffusion-transformer-dit","title":"1. Diffusion Transformer \u67b6\u6784\uff08DiT \u7cfb\u5217\uff09","text":""},{"location":"zh/Content/model/diffusion/#dit-sr2024","title":"\u2705 DiT-SR\uff082024\uff09","text":"<ul> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u5c06 Transformer \u878d\u5165\u6269\u6563\u6a21\u578b\uff0c\u91c7\u7528 U-shaped \u67b6\u6784\uff0c\u7edf\u4e00\u5404\u9636\u6bb5\u7684 Transformer \u5757\u8bbe\u8ba1\u3002</li> <li>\u521b\u65b0\u70b9\uff1a\u63d0\u51fa\u9891\u7387\u81ea\u9002\u5e94\u7684\u65f6\u95f4\u6b65\u8c03\u5236\u6a21\u5757\uff0c\u589e\u5f3a\u6a21\u578b\u5904\u7406\u4e0d\u540c\u9891\u7387\u4fe1\u606f\u7684\u80fd\u529b\u3002</li> <li>\u6027\u80fd\u8868\u73b0\uff1a\u5728\u591a\u4e2a\u57fa\u51c6\u6570\u636e\u96c6\u4e0a\uff0cDiT-SR \u663e\u8457\u4f18\u4e8e\u73b0\u6709\u7684\u4ece\u5934\u8bad\u7ec3\u7684\u6269\u6563\u8d85\u5206\u65b9\u6cd5\uff0c\u751a\u81f3\u8d85\u8fc7\u4e86\u4e00\u4e9b\u57fa\u4e8e\u9884\u8bad\u7ec3 Stable Diffusion \u7684\u65b9\u6cd5\u3002</li> </ul>"},{"location":"zh/Content/model/diffusion/#dit4sr2025","title":"\u2705 DiT4SR\uff082025\uff09","text":"<ul> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u56fe\u50cf\u8d85\u5206\u95ee\u9898\uff0c\u63d0\u51fa\u4e86 DiT4SR \u6a21\u578b\u3002</li> <li>\u521b\u65b0\u70b9\uff1a\u5c06\u4f4e\u5206\u8fa8\u7387\u56fe\u50cf\u7684\u5d4c\u5165\u96c6\u6210\u5230 DiT \u7684\u6ce8\u610f\u529b\u673a\u5236\u4e2d\uff0c\u5b9e\u73b0\u4f4e\u5206\u8fa8\u7387\u548c\u751f\u6210\u7279\u5f81\u4e4b\u95f4\u7684\u53cc\u5411\u4fe1\u606f\u6d41\u52a8\u3002</li> <li>\u6027\u80fd\u8868\u73b0\uff1a\u901a\u8fc7\u8fd9\u79cd\u8bbe\u8ba1\uff0cDiT4SR \u5728\u771f\u5b9e\u56fe\u50cf\u8d85\u5206\u4efb\u52a1\u4e2d\u8868\u73b0\u51fa\u8272\uff0c\u4f18\u4e8e\u4f20\u7edf\u7684 UNet \u67b6\u6784\u3002</li> </ul>"},{"location":"zh/Content/model/diffusion/#2-residual-diffusion","title":"2. Residual Diffusion \u67b6\u6784","text":""},{"location":"zh/Content/model/diffusion/#resdiff2023","title":"\u2705 ResDiff\uff082023\uff09","text":"<ul> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u7ed3\u5408 CNN \u548c\u6269\u6563\u6a21\u578b\uff0cCNN \u8d1f\u8d23\u6062\u590d\u4f4e\u9891\u4fe1\u606f\uff0c\u6269\u6563\u6a21\u578b\u9884\u6d4b\u6b8b\u5dee\uff08\u9ad8\u9891\u7ec6\u8282\uff09\u3002</li> <li>\u521b\u65b0\u70b9\uff1a\u5728\u9891\u7387\u57df\u4e2d\u5f15\u5bfc\u6269\u6563\u8fc7\u7a0b\uff0c\u4e13\u6ce8\u4e8e\u9ad8\u9891\u7ec6\u8282\u7684\u6062\u590d\u3002</li> <li>\u6027\u80fd\u8868\u73b0\uff1a\u5728\u591a\u4e2a\u57fa\u51c6\u6570\u636e\u96c6\u4e0a\uff0cResDiff \u5728\u751f\u6210\u8d28\u91cf\u548c\u591a\u6837\u6027\u65b9\u9762\u4f18\u4e8e\u5148\u524d\u7684\u6269\u6563\u65b9\u6cd5\u3002</li> </ul>"},{"location":"zh/Content/model/diffusion/#3_1","title":"3. \u9ad8\u6548\u6269\u6563\u6a21\u578b","text":""},{"location":"zh/Content/model/diffusion/#resshiftneurips-2023","title":"\u2705 ResShift\uff08NeurIPS 2023\uff09","text":"<ul> <li>\u6838\u5fc3\u601d\u60f3\uff1a\u901a\u8fc7\u6b8b\u5dee\u8f6c\u79fb\u673a\u5236\uff0c\u6784\u5efa\u9ad8\u6548\u7684\u6269\u6563\u6a21\u578b\uff0c\u663e\u8457\u51cf\u5c11\u91c7\u6837\u6b65\u9aa4\u3002</li> <li>\u521b\u65b0\u70b9\uff1a\u8bbe\u8ba1\u4e86\u7075\u6d3b\u63a7\u5236\u8f6c\u79fb\u901f\u5ea6\u548c\u566a\u58f0\u5f3a\u5ea6\u7684\u566a\u58f0\u8c03\u5ea6\u7b56\u7565\u3002</li> <li>\u6027\u80fd\u8868\u73b0\uff1a\u5728\u5408\u6210\u548c\u771f\u5b9e\u4e16\u754c\u6570\u636e\u96c6\u4e0a\uff0c\u4ec5\u7528 20 \u4e2a\u91c7\u6837\u6b65\u9aa4\u5373\u53ef\u83b7\u5f97\u4f18\u5f02\u6216\u81f3\u5c11\u53ef\u6bd4\u7684\u6027\u80fd\u3002</li> </ul>"},{"location":"zh/Content/model/diffusion/#_2","title":"\u603b\u7ed3","text":"\u65b9\u6848\u7c7b\u578b \u4f18\u52bf \u4ee3\u8868\u6a21\u578b Transformer + Diffusion \u66f4\u5f3a\u7684\u5efa\u6a21\u80fd\u529b\uff0c\u5904\u7406\u590d\u6742\u7ed3\u6784\u548c\u7ec6\u8282\u4fe1\u606f DiT-SR, DiT4SR Residual Diffusion \u4e13\u6ce8\u4e8e\u9ad8\u9891\u7ec6\u8282\u6062\u590d\uff0c\u63d0\u5347\u56fe\u50cf\u8d28\u91cf ResDiff \u9ad8\u6548\u6269\u6563\u6a21\u578b \u51cf\u5c11\u91c7\u6837\u6b65\u9aa4\uff0c\u52a0\u901f\u63a8\u7406\u8fc7\u7a0b\uff0c\u9002\u7528\u4e8e\u5b9e\u65f6\u5e94\u7528 ResShift"},{"location":"zh/Content/model/diffusion/#5_1","title":"5 \u56de\u987e\u547d\u9898","text":""},{"location":"zh/Content/model/diffusion/#_3","title":"\u4e0d\u540c\u6280\u672f\u8def\u7ebf\u7684\u6bd4\u8f83","text":"\u6a21\u578b\u7c7b\u578b \u4ee3\u8868\u6a21\u578b PSNR \u63d0\u5347\uff08\u5bf9\u6bd4 CNN \u57fa\u51c6\uff09 \u7279\u70b9 \u4f20\u7edf CNN/UNet SRCNN, EDSR, UNetSR baseline \u9ad8\u901f\u3001\u6613\u8bad\u7ec3 Residual GAN ESRGAN, Real-ESRGAN +0.5~1.0 dB \u7ec6\u8282\u589e\u5f3a\u3001\u6709\u65f6\u4f1a\u5047\u8c61 Diffusion SR3, DDNM +1.5~2.5 dB \u7ec6\u8282\u62df\u771f\u5ea6\u9ad8\u3001\u91c7\u6837\u6162 Residual Diffusion ResDiff +2.0~3.0 dB \u9ad8\u9891\u7ec6\u8282\u4fee\u590d\u6548\u679c\u51fa\u8272 Diffusion + Transformer DiT-SR, DiT4SR +2.5~4.0 dB \u5168\u5c40\u7ed3\u6784\u5efa\u6a21\u80fd\u529b\u5f3a <p>\ud83d\udccc \u8bf4\u660e\uff1a\u4ee5\u4e0a\u63d0\u5347\u662f\u9488\u5bf9 <code>DIV2K</code>, <code>RealSR</code>, <code>BSD100</code> \u7b49 benchmark \u6570\u636e\u96c6\u4e0a\u7684\u5e73\u5747\u60c5\u51b5\uff0c\u5177\u4f53\u63d0\u5347\u7a0b\u5ea6\u4f9d\u6570\u636e\u96c6\u3001\u4efb\u52a1\u96be\u5ea6\u548c\u566a\u58f0\u60c5\u51b5\u800c\u5f02\u3002</p> <p>\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u51fa\uff0c\u6700\u5148\u8fdb\u7684\u7684\u6a21\u578b\u76f8\u5bf9\u4e8e\u4f20\u7edfCNN\uff0c\u63d0\u5347\u4e5f\u4e0d\u5927\u3002\u56e0\u6b64\u73b0\u5728\u9700\u8981\u56de\u987e\u4e00\u4e0b\u6700\u521d\u547d\u9898\uff0c\u8fdb\u884c\u8be6\u7ec6\u8ba8\u8bba\u3002</p>"},{"location":"zh/Content/model/diffusion/#_4","title":"\u4efb\u52a1\u7279\u5f81\u5206\u6790","text":"\u7279\u5f81\u9879 \u63cf\u8ff0 \u8f93\u5165\u8f93\u51fa \u914d\u5bf9\u7684 LR-HR \u5929\u6587\u56fe\u50cf\u5bf9 \u56fe\u50cf\u7279\u6027 \u51e0\u4e4e\u65e0\u590d\u6742\u573a\u666f\u53d8\u5316\u3001\u4f46\u7ec6\u8282\u7ed3\u6784\u6781\u5176\u4e30\u5bcc \u53ef\u63a5\u53d7\u63a8\u7406\u901f\u5ea6 \u63a5\u53d7\u5ea6\u9ad8\uff08\u5982\u679c\u7528\u4e8e\u7814\u7a76\uff0c\u4e0d\u4e00\u5b9a\u8ffd\u6c42\u5b9e\u65f6\uff09 \u5bf9\u201c\u4f2a\u5f71/\u5047\u8c61\u201d\u5bb9\u5fcd\u5ea6 \u6781\u4f4e\uff08\u79d1\u5b66\u56fe\u50cf\u4e0d\u80fd\u201c\u7f16\u9020\u201d\u7ec6\u8282\uff09 \u5bf9\u8fb9\u7f18/\u7eb9\u7406\u654f\u611f\u5ea6 \u6781\u9ad8\uff08\u7ec6\u8282\u5f80\u5f80\u51b3\u5b9a\u8bca\u65ad\u6216\u5206\u6790\u7ed3\u679c\uff09 <p>\u2705 \u7ed3\u8bba\uff1a\u9700\u8981\u4e00\u5957\u201c\u7ed3\u6784\u4fdd\u5b88 + \u9ad8\u9891\u589e\u5f3a + \u65e0\u5047\u8c61\u201d\u7684\u65b9\u6848</p>"},{"location":"zh/Content/model/diffusion/#residual-diffusion-for-microscopy-super-resolution","title":"\u6280\u672f\u8def\u7ebf\uff1aResidual Diffusion for Microscopy Super-Resolution","text":"<p>\u6211\u4eec\u9009\u7528 ResDiff\uff08\u6b8b\u5dee\u6269\u6563\uff09\u67b6\u6784\uff0c\u7ed3\u5408\u4f60\u73b0\u6709\u7684 CNN/UNet \u7f51\u7edc\uff0c\u7ec4\u6210\u5982\u4e0b\u6280\u672f\u7ba1\u7ebf\uff1a</p>"},{"location":"zh/Content/model/diffusion/#step-1-unetcnn","title":"\ud83d\udd39 Step 1\uff1a\u8bad\u7ec3\u4e00\u4e2a\u4f20\u7edf UNet/CNN \u7f51\u7edc","text":"<ul> <li>\u8f93\u5165\uff1aLR \u663e\u5fae\u56fe\u50cf</li> <li>\u8f93\u51fa\uff1a\u521d\u6b65\u8fd8\u539f\u7684 HR \u56fe\u50cf\uff08\u7ed3\u6784\u5927\u81f4\u51c6\u786e\u4f46\u7ec6\u8282\u6709\u9650\uff09</li> <li>\u635f\u5931\u51fd\u6570\uff1aMSE + Perceptual Loss\uff08\u53ef\u9009 SSIM Loss\uff09</li> </ul>"},{"location":"zh/Content/model/diffusion/#step-2-residual-diffusion","title":"\ud83d\udd39 Step 2\uff1a\u6784\u5efa Residual Diffusion \u6a21\u5757","text":"<ul> <li>\u8f93\u5165\uff1aStep 1 \u7684\u8f93\u51fa\u56fe\u50cf\uff08\u4f5c\u4e3a conditional input\uff09</li> <li>\u76ee\u6807\u8f93\u51fa\uff1aGround truth HR \u56fe\u50cf</li> <li>\u8bad\u7ec3\u76ee\u6807\uff1a\u9884\u6d4b\u9ad8\u9891\u6b8b\u5dee\uff08\u5373\u771f\u5b9e HR \u4e0e Step 1 \u8f93\u51fa\u56fe\u50cf\u4e4b\u95f4\u7684\u5dee\uff09</li> <li>\u7f51\u7edc\u7ed3\u6784\uff1a\u4f7f\u7528 DDPM \u6216 Denoising Network + Timestep Embedding\uff08\u53ef\u4f7f\u7528\u57fa\u4e8e U-Net or Transformer \u7684 block\uff09</li> </ul>"},{"location":"zh/Content/model/diffusion/#step-3","title":"\ud83d\udd39 Step 3\uff1a\u7ec4\u5408\u63a8\u7406","text":"<pre><code>LR \u663e\u5fae\u56fe\u50cf --&gt; UNet \u9884\u6d4b\u521d\u7a3f --&gt; Residual Diffusion \u7ec6\u8282\u8865\u5168 --&gt; \u6700\u7ec8 HR\n</code></pre>"},{"location":"zh/Content/model/diffusion/#_5","title":"\u4f18\u70b9","text":"<ul> <li>\u7ed3\u6784\u5b89\u5168\u6027\u5f3a\uff1a\u521d\u7a3f\u7ed3\u6784\u7531\u4f20\u7edf\u7f51\u7edc\u7ed9\u51fa\uff0c\u907f\u514d\u201c\u865a\u6784\u7ed3\u6784\u201d</li> <li>\u7ec6\u8282\u771f\u5b9e\u7ec6\u817b\uff1a\u9ad8\u9891\u90e8\u5206\u7531 diffusion \u7cbe\u7ec6\u8865\u5145</li> <li>\u63a7\u5236\u80fd\u529b\u5f3a\uff1a\u53ef\u4ee5\u5bf9 diffusion \u8fdb\u884c\u7ed3\u6784\u611f\u77e5\u6216 frequency guidance\uff0c\u907f\u514d hallucination</li> </ul> \u4efb\u52a1 GitHub \u9879\u76ee \u7b80\u4ecb Diffusion \u8d85\u5206 <code>tangke03/DDNM</code> Residual Diffusion \u652f\u6301\u56fe\u50cf\u590d\u539f Microscopy SR <code>csbDeep</code> \u7528\u4e8e\u663e\u5fae\u56fe\u50cf\u7684 DL-SR \u5e73\u53f0\uff0c\u7ed3\u6784\u7c7b\u4f3c UNet Stable Diffusion SR <code>CompVis/latent-diffusion</code> \u652f\u6301\u7528\u4f4e\u7ef4 latent space \u8fdb\u884c\u8d85\u5206 <p>\u200b\u662f\u7684\uff0c\u60a8\u63d0\u5230\u7684\u201cResidual Diffusion for Microscopy Super-Resolution\u201d\u6280\u672f\u8def\u7ebf\u5728\u5f53\u524d\u7684\u7814\u7a76\u4e2d\u5df2\u6709\u76f8\u5173\u7684\u8bba\u6587\u548c\u9879\u76ee\u5b9e\u73b0\u3002\u4ee5\u4e0b\u662f\u4e0e\u8be5\u6280\u672f\u8def\u7ebf\u76f8\u5173\u7684\u4e3b\u8981\u8bba\u6587\u548c\u5f00\u6e90\u9879\u76ee\uff1a\ue206</p>"},{"location":"zh/Content/model/diffusion/#_6","title":"\ud83d\udcc4 \u76f8\u5173\u8bba\u6587","text":"<ol> <li> <p>ResDiff: Combining CNN and Diffusion Model for Image Super-Resolution \u4f5c\u8005\uff1aShuyao Shang \u7b49 \u6458\u8981 \u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3a ResDiff \u7684\u65b0\u578b\u6269\u6563\u6982\u7387\u6a21\u578b\uff0c\u7ed3\u5408\u4e86\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u548c\u6269\u6563\u6a21\u578b\u7684\u4f18\u52bf\uff0c\u7528\u4e8e\u5355\u5e45\u56fe\u50cf\u8d85\u5206\u8fa8\u7387\u4efb\u52a1\u3002\u4f5c\u8005\u8ba4\u4e3a\uff0c\u76f4\u63a5\u4f7f\u7528\u6269\u6563\u6a21\u578b\u8fdb\u884c\u56fe\u50cf\u8d85\u5206\u8fa8\u7387\u53ef\u80fd\u6548\u7387\u4f4e\u4e0b\uff0c\u56e0\u4e3a\u7b80\u5355\u7684 CNN \u5c31\u80fd\u6062\u590d\u4e3b\u8981\u7684\u4f4e\u9891\u5185\u5bb9\u3002\u56e0\u6b64\uff0cResDiff \u5229\u7528 CNN \u5148\u6062\u590d\u4f4e\u9891\u4fe1\u606f\uff0c\u518d\u901a\u8fc7\u6269\u6563\u6a21\u578b\u9884\u6d4b\u9ad8\u9891\u6b8b\u5dee\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u6548\u7387\u548c\u6027\u80fd</p> </li> <li> <p>HF-ResDiff: High-Frequency-Guided Residual Diffusion for Multi-dose PET Reconstruction   \u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u9ad8\u9891\u5f15\u5bfc\u7684\u6b8b\u5dee\u6269\u6563\u6a21\u578b\uff08HF-ResDiff\uff09\uff0c\u7528\u4e8e\u591a\u5242\u91cf\u6b63\u7535\u5b50\u53d1\u5c04\u65ad\u5c42\u626b\u63cf\uff08PET\uff09\u56fe\u50cf\u7684\u91cd\u5efa\ue203\u8be5\u65b9\u6cd5\u901a\u8fc7\u9ad8\u9891\u4fe1\u606f\u5f15\u5bfc\u6269\u6563\u8fc7\u7a0b\uff0c\u6709\u6548\u5730\u4fdd\u7559\u4e86\u56fe\u50cf\u7684\u9ad8\u9891\u7ec6\u8282\uff0c\u63d0\u5347\u4e86\u56fe\u50cf\u8d28\u91cf</p> </li> </ol> <p>\u603b\u7ed3</p> \u9879\u76ee \u63a8\u8350\u9009\u62e9 \u7406\u7531 \u7f51\u7edc\u7ed3\u6784 UNet + Residual Diffusion \u7ed3\u6784\u5b89\u5168 + \u9ad8\u9891\u589e\u5f3a + \u6291\u5236\u4f2a\u5f71 \u635f\u5931\u51fd\u6570 MSE + SSIM + LPIPS \u5e73\u8861\u50cf\u7d20\u7ea7\u51c6\u786e\u5ea6\u4e0e\u611f\u77e5\u8d28\u91cf \u8bad\u7ec3\u7b56\u7565 \u5206\u9636\u6bb5\u8bad\u7ec3\uff08\u5148 CNN \u540e\u6269\u6563\uff09 \u52a0\u5feb\u6536\u655b\uff0c\u4fbf\u4e8e\u8c03\u8bd5 \u63a8\u7406\u90e8\u7f72 \u5408\u5e76\u6a21\u578b/\u6a21\u5757\u7ea7\u7ec4\u5408 \u6839\u636e\u786c\u4ef6\u90e8\u7f72\u6761\u4ef6\u51b3\u5b9a"},{"location":"zh/changelog/#lhai-user-mannual","title":"LHAI User Mannual","text":""},{"location":"zh/changelog/#2.1.0","title":"2.1.0 2025\u5e746\u670828\u65e5","text":"<p>\u91cd\u5927\u66f4\u65b0\uff1b\u66f4\u65b0\u4e3b\u9898\uff1a\u5b8c\u5584\u4efb\u52a1\u6574\u5408\u540e LHAI User Manual \u5185\u5bb9</p>"},{"location":"zh/changelog/#2.0.0","title":"2.0.0 2025\u5e746\u670828\u65e5","text":"<p>\u91cd\u5927\u66f4\u65b0\uff1b\u66f4\u65b0\u4e3b\u9898\uff1a\u6574\u5408LHAI\u4ee3\u7801\u4e0e\u89c4\u8303\u5316\u4efb\u52a1</p>"},{"location":"zh/changelog/#1.0.3","title":"1.0.3 January 14, 2025","text":"<ul> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/SERVER</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/TRAIN</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/PREDICT</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/EVALUATION</code></li> </ul>"},{"location":"zh/changelog/#1.0.2","title":"1.0.2 January 13, 2025","text":"<ul> <li>LHAI \u8fdb\u5c55\uff1a\u8bc4\u4f30\u677f\u5757\uff0c\u80fd\u591f\u5b8c\u6574\u5168\u9762\u4e14\u76f4\u89c2\u5bf9\u6a21\u578b\u8fdb\u884c\u8bc4\u4f30 <code>LHAI/evaluation.py</code></li> </ul>"},{"location":"zh/changelog/#1.0.1","title":"1.0.1 January 13, 2025","text":"<ul> <li>LHAI \u8fdb\u5c55\uff1a\u65b0\u589e\u4e86\u4ee5\u4e0b\u6a21\u578b\uff0c\u53ef\u4ee5\u5e94\u7528\u5e76\u4e14\u8fdb\u884c\u8bad\u7ec3\uff1a <code>LHAI/LHAI/model</code></li> <li>\u57fa\u4e8eCNN(\u6b8b\u5dee+\u9012\u5f52)\uff1aCARN,DRCN,DRRN,EDSR,ESPCN,FSRCNN,IDN,LapSRN,SRCNN,VDSR</li> <li>\u57fa\u4e8eGAN\uff1aCGAN,SRGAN</li> <li>\u57fa\u4e8eDenseNet\uff1aSRDenseNet</li> <li>\u57fa\u4e8eDiffusion\uff1aSR3(Super-Resolution via Repeated Refinement)</li> </ul>"},{"location":"zh/changelog/#1.0.0","title":"1.0.0 2025\u5e741\u670812\u65e5","text":"<p>\u91cd\u5927\u66f4\u65b0\uff1b\u66f4\u65b0\u4e3b\u9898\uff1a\u5b8c\u5584LHAI\u4ee3\u7801\u529f\u80fd</p> <ul> <li>LHAI \u8fdb\u5c55\uff1a\u5b8c\u6210\u4ee3\u7801\u5de5\u4e1a\u5316</li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/index</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/DATA</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/DOCS</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/LHAI</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/SAVES</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/TRAIN</code></li> <li>\u6dfb\u52a0\u529f\u80fd\uff1a\u4e2d\u82f1\u8bed\u8a00\u8f6c\u6362</li> <li>\u6dfb\u52a0\u529f\u80fd\uff1alog\u7248\u672c\u66f4\u65b0 <code>Others Section/ChangeLog</code></li> <li>\u4fee\u6539bug\uff1a\u9996\u9875\u8bed\u8a00\u8f6c\u6362\u5185\u5bb9\u4e22\u5931\u95ee\u9898</li> </ul>"},{"location":"zh/changelog/#0.2.3","title":"0.2.3 2025\u5e741\u67081\u65e5","text":"<ul> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Data Section/simulation</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Others Section/HowtoBeCollaborator</code></li> </ul>"},{"location":"zh/changelog/#0.2.2","title":"0.2.2 2024\u5e7412\u670820\u65e5","text":"<ul> <li>\u6dfb\u52a0\u5185\u5bb9\uff1a\u9996\u9875 <code>home page</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Data Section/index</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Network Section/index</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Eval Section/index</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Code Section/index</code></li> <li>\u6dfb\u52a0\u5185\u5bb9 <code>Others Section</code></li> </ul>"},{"location":"zh/changelog/#0.2.1","title":"0.2.1 2024\u5e7412\u670820\u65e5","text":"<ul> <li>\u5b8c\u6210\u9996\u9875\u6392\u7248</li> <li>\u786e\u5b9a\u6574\u4f53\u98ce\u683c</li> </ul>"},{"location":"zh/changelog/#0.2.0","title":"0.2.0 2024\u5e7412\u670810\u65e5","text":"<ul> <li>\u786e\u5b9amkdocs\u6a21\u677f</li> <li>\u786e\u5b9a\u7528\u6237\u624b\u518c\u540d\u5b57\uff1aLHAI User Manual</li> <li>\u786e\u5b9a\u624b\u518c\u5185\u5bb9\u7ed3\u6784</li> </ul>"},{"location":"zh/changelog/#0.1.0","title":"0.1.0 2024\u5e7412\u67081\u65e5","text":"<ul> <li>\u7b2c\u4e00\u6b21\u53d1\u5e03</li> </ul>"},{"location":"zh/changelog/#0.0.0","title":"0.0.0 2024\u5e7411\u670824\u65e5","text":"<ul> <li>LHAI \u8fdb\u5c55\uff1a\u4f7f\u7528FERMI\u6a21\u62df\u6570\u636e\u5b8c\u6210\u521d\u6b65\u8d85\u5206\u8fa8</li> <li>\u53c2\u52a0\u4f1a\u8bae\uff1aThe Second LHAASO Collaboration Conference in 2024</li> <li>\u786e\u5b9a\u5236\u4f5c\u7528\u6237\u624b\u518c</li> </ul>"}]}